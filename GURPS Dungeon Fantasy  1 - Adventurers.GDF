Encoding=UTF-8
Version=3
* The version information above MUST be the first line of the data file
Program=4.0.408
Description=04/24/2016. This file requires the Basic Set to be loaded first. If using GURPS Magic, load that file second, and this file third. This will ensure the proper modifications to spells required.  THIS FILE REMOVES OR MODIFIES MANY ITEMS FROM THE BASIC SET AS PER THE INSTRUCTIONS IN THE SOURCE BOOK.  MIX WITH OTHER DATA FILES WITH CAUTION.
WorldBook=Dungeon Fantasy
Requires="GURPS Basic Set 4th Ed.--Characters.gdf"
LoadAfter="GURPS Magic 4e.gdf", "GURPS Thaumatology 4e.gdf", "GURPS Low-Tech 4e.gdf", "GURPS Power-Ups 3 Talents.gdf"


[AUTHOR]
******************************************************************************************************\[START]
*
* GURPS® Character Assistant Data File
* Created: 12-27-2007
* Requires GCA v4 or later!
*
* This data file contains information taken from the GURPS Dungeon Fantasy 1: Adventurers sourcebook.
* GURPS Dungeon Fantasy 1: Adventurers is Copyright © 2007 by Steve Jackson Games Incorporated. All rights reserved.
*
* Information in this file includes:
*	Advantages, disadvantages, skills, Wildcard skills, spells, powers, equipment, and advantage modifiers.
*		Some character templates, but this is incomplete.
*
* This file requires the Basic Set to be loaded first. If using GURPS Magic, load that file second, and this file third.
* This will ensure the proper modifications to spells required.
*	THIS FILE REMOVES OR MODIFIES MANY ITEMS FROM THE BASIC SET AS PER THE INSTRUCTIONS IN THE SOURCE BOOK.
*	MIX WITH OTHER DATA FILES WITH CAUTION.
*
************************************************************************************************************************
*
* Emily Smirle (Bruno) - Original data file author
* RobKamm		- Holy Warrior, Knight, Martial Artist, Scout, Swashbuckler, Thief, and Wizard templates
* Eric B. Smith		- Data File Coordinator
*
* If you find any errors or omissions in this file please contact the Data File Coordinator at:
* ericbsmith42@gmail.com
*
* Or drop a message in the GCA4 forum at:
* http://forums.sjgames.com
*
************************************************************************************************************************
*
* GURPS is a registered trademark of Steve Jackson Games Incorporated, used with GCA by permission of Steve Jackson
* Games. All rights reserved.
*
* The GURPS game is Copyright © 1986-1989, 1991-1994 by Steve Jackson Games Incorporated. This product includes
* copyrighted material from the GURPS game, which is used by permission of Steve Jackson Games Incorporated. All
* rights reserved by Steve Jackson Games Incorporated.
*
************************************************************************************************************************

*******************************************************************************************************\[STOP]
[ATTRIBUTES]
******************************************************************************************************\[START]
* Power Item Stats
Power Item, basevalue(0), display(no), minscore(0), maxscore(1000000)

* Power Investiture Prerequisite Work-around Stats

Holy PI, basevalue(0), display(no), minscore(0), maxscore(1000000), hide(yes)
Druidic PI, basevalue(0), display(no), minscore(0), maxscore(1000000), hide(yes)
EnchantmentEnergyMultiplier, basevalue(1), display(no), hide(yes)
EnchantmentSlowAndSureCost, basevalue(20), display(no), hide(yes)
EnchantmentQuickAndDirtyThreshold, basevalue(100), display(no), hide(yes)
EnchantmentQuickAndDirtyCost, basevalue(1), display(no), hide(yes)

#ReplaceTags in "ST:Money" with "initmods(100% of Starting Wealth, +0)"

*******************************************************************************************************\[STOP]
[ADVANTAGES]
******************************************************************************************************\[START]

* Fix Magery and Power Investiture to display Power Item stat
#MergeTags in "AD:Magery 0" with {replacetags(in "ST:Power Item" with "display(yes), mainwin(19), noresync(yes)")}
#MergeTags in "AD:Power Investiture" with {replacetags(in "ST:Power Item" with "display(yes), mainwin(19), noresync(yes)")}
#MergeTags in "AD:Magery" with {upto(6), taboo(_
										ST:Magery > 6,
										ST:Magery Air > 6,
										ST:Magery Body Control > 6,
										ST:Magery Communication & Empathy > 6,
										ST:Magery Earth > 6,
										ST:Magery Enchantment > 6,
										ST:Magery Fire > 6,
										ST:Magery Gate > 6,
										ST:Magery Healing > 6,
										ST:Magery Knowledge > 6,
										ST:Magery Light & Darkness > 6,
										ST:Magery Meta-Spells > 6,
										ST:Magery Mind Control > 6,
										ST:Magery Movement > 6,
										ST:Magery Necromancy > 6,
										ST:Magery Protection & Warning > 6,
										ST:Magery Water > 6,
										ST:Magery Animal > 6,
										ST:Magery Food > 6,
										ST:Magery Illusion & Creation > 6,
										ST:Magery Making & Breaking > 6,
										ST:Magery Plant > 6,
										ST:Magery Sound > 6,
										ST:Magery Technological > 6,
										ST:Magery Weather > 6 _
									)}

* Make Illiteracy and Innumerate count against the Disadvantage Limit
#ReplaceTags in "AD:Language (Written)" with "ndl(), description()"
#ReplaceTags in "AD:Language - Native (Written)" with "ndl(), description()"

* Make "Common" the default Native Language
#ReplaceTags in {AD:Language - Native} with _
	{x(#InputToTagReplace("Specify the language here:", name, "Common", "Language - Native"))}
#ReplaceTags in {AD:Language - Native (Spoken)} with _
	{x(#InputToTagReplace("Specify the language here:", name, "Common", "Language - Native (Spoken)"))}
#ReplaceTags in {AD:Language - Native (Written)} with _
	{x(#InputToTagReplace("Specify the language here:", name, "Common", "Language - Native (Written)"))}

#ReplaceTags in "DI:Innumerate" with "ndl(), description()"

#ReplaceTags in "AD:Trading Character Points for Money" with "gives(+500 to ST:Money, +500 to ST:Remaining Funds)"
#ReplaceTags in "AD:Trading Character Points for Money" with {upto(100), levelnames("$500","$1,000","$1,500","$2,000","$2,500","$3,000","$3,500","$4,000","$4,500","$5,000","$5,500","$6,000","$6,500","$7,000","$7,500","$8,000","$8,500","$9,000","$9,500","$10,000","$10,500","$11,000","$11,500","$12,000","$12,500","$13,000","$13,500","$14,000","$14,500","$15,000","$15,500","$16,000","$16,500","$17,000","$17,500","$18,000","$18,500","$19,000","$19,500","$20,000","$20,500","$21,000","$21,500","$22,000","$22,500","$23,000","$23,500","$24,000","$24,500","$25,000","$25,500","$26,000","$26,500","$27,000","$27,500","$28,000","$28,500","$29,000","$29,500","$30,000","$30,500","$31,000","$31,500","$32,000","$32,500","$33,000","$33,500","$34,000","$34,500","$35,000","$35,500","$36,000","$36,500","$37,000","$37,500","$38,000","$38,500","$39,000","$39,500","$40,000","$40,500","$41,000","$41,500","$42,000","$42,500","$43,000","$43,500","$44,000","$44,500","$45,000","$45,500","$46,000","$46,500","$47,000","$47,500","$48,000","$48,500","$49,000","$49,500","$50,000")}

#ReplaceTags in "AD:Signature Gear" with {upto(100), levelnames("$500","$1,000","$1,500","$2,000","$2,500","$3,000","$3,500","$4,000","$4,500","$5,000","$5,500","$6,000","$6,500","$7,000","$7,500","$8,000","$8,500","$9,000","$9,500","$10,000","$10,500","$11,000","$11,500","$12,000","$12,500","$13,000","$13,500","$14,000","$14,500","$15,000","$15,500","$16,000","$16,500","$17,000","$17,500","$18,000","$18,500","$19,000","$19,500","$20,000","$20,500","$21,000","$21,500","$22,000","$22,500","$23,000","$23,500","$24,000","$24,500","$25,000","$25,500","$26,000","$26,500","$27,000","$27,500","$28,000","$28,500","$29,000","$29,500","$30,000","$30,500","$31,000","$31,500","$32,000","$32,500","$33,000","$33,500","$34,000","$34,500","$35,000","$35,500","$36,000","$36,500","$37,000","$37,500","$38,000","$38,500","$39,000","$39,500","$40,000","$40,500","$41,000","$41,500","$42,000","$42,500","$43,000","$43,500","$44,000","$44,500","$45,000","$45,500","$46,000","$46,500","$47,000","$47,500","$48,000","$48,500","$49,000","$49,500","$50,000")}

<Mundane Mental>
Heroic Archer, 20, page(DF1:14), cat(Mundane, Mental),
	gives(+2 to "SK:Dual-Weapon Attack (Bow)")

Born War-Leader, 5/10, gives(+1 To GR:Born War-Leader), page(B89, BS184), upto(4), cat(Mundane, Mental, Talents),
	conditional(+1 to ST:Reaction), description(Intelligence Analysis, Leadership, Savoir-Faire (Military), Strategy, Tactics)

Extra Green Thumb, 5/10, gives(+1 To GR:Green Thumb), page(B90), upto($solver(4-AD:Green Thumb::level)),
	cat(Mundane, Mental, Talents), mods(Talents), existing(AD:Green Thumb),
	conditional(+1 to ST:Reaction), description(Biology, Farming, Gardening, Herb Lore, Naturalist)

<Mundane Physical>
Resistant to Disease, 3/5/10, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)
Resistant to Poison, 5/7/15, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(3)

#Clone "AD:Striking ST" as "AD:Surprise Striking ST"
#ReplaceTags in "AD:Surprise Striking ST" with "initmods(Accessibility (Only on surprise attack), -60%, cat(_General), page(DF1:12)| Doesn't give general damage bonus, -0%, gives(-owner::level to ST:Striking ST))"
#ReplaceTags in "AD:Surprise Striking ST" with "displaycost(2/4)"

<Bard-Song>
Bardic Talent, 8/16, upto(6), page(DF1:21), gives(_
	+1 to "AD:Bard-Song Empathy::skillscore",
	+1 to "AD:Bard-Song Mimicry::skillscore",
	+1 to "AD:Bard-Song Mind Control::skillscore",
	+1 to "AD:Bard-Song Rapier Wit::skillscore",
	+1 to "AD:Bard-Song Speak With Animals::skillscore",
	+1 to "AD:Bard-Song Subsonic Speech::skillscore",
	+1 to "AD:Bard-Song Telecommunication (Telesend)::skillscore",
	+1 to "AD:Bard-Song Terror::skillscore",
	+1 to "AD:Bard-Song Ultrasonic Speech::skillscore",
	+1 to "ST:Magery Communication & Empathy",
	+1 to "ST:Magery Mind Control",
	+1 to "ST:Magery 0",
	+1 to ("CO:Communication & Empathy", "CO:Mind Control") _
), taboo(AD:Bard Song Talent)

#Clone "AD:Empathy" as "AD:Bard-Song Empathy"
#ReplaceTags in "AD:Bard-Song Empathy" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Empathy" with "displaycost(11)"
#MergeTags in "AD:Bard-Song Empathy" with "cat(Bard-Song)"

#Clone "AD:Mimicry" as "AD:Bard-Song Mimicry"
#ReplaceTags in "AD:Bard-Song Mimicry" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Mimicry" with "displaycost(7)"
#MergeTags in "AD:Bard-Song Mimicry" with "cat(Bard-Song)"

#Clone "AD:Mind Control" as "AD:Bard-Song Mind Control"
#ReplaceTags in "AD:Bard-Song Mind Control" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Mind Control" with "displaycost(35)"
#MergeTags in "AD:Bard-Song Mind Control" with "cat(Bard-Song)"

#Clone "AD:Rapier Wit" as "AD:Bard-Song Rapier Wit"
#ReplaceTags in "AD:Bard-Song Rapier Wit" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Rapier Wit" with "displaycost(4)"
#MergeTags in "AD:Bard-Song Rapier Wit" with "cat(Bard-Song)"

#Clone "AD:Speak With Animals" as "AD:Bard-Song Speak With Animals"
#ReplaceTags in "AD:Bard-Song Speak With Animals" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Speak With Animals" with "displaycost(18)"
#MergeTags in "AD:Bard-Song Speak With Animals" with "cat(Bard-Song)"

#Clone "AD:Subsonic Speech" as "AD:Bard-Song Subsonic Speech"
#ReplaceTags in "AD:Bard-Song Subsonic Speech" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Subsonic Speech" with "displaycost(7)"
#MergeTags in "AD:Bard-Song Subsonic Speech" with "cat(Bard-Song)"

#Clone "AD:Telecommunication (Telesend)" as "AD:Bard-Song Telecommunication (Telesend)"
#ReplaceTags in "AD:Bard-Song Telecommunication (Telesend)" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Telecommunication (Telesend)" with "displaycost(21)"
#MergeTags in "AD:Bard-Song Telecommunication (Telesend)" with "cat(Bard-Song)"

#Clone "AD:Terror" as "AD:Bard-Song Terror"
#ReplaceTags in "AD:Bard-Song Terror" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Terror" with "displaycost(21/28/+)"
#MergeTags in "AD:Bard-Song Terror" with "cat(Bard-Song)"

#Clone "AD:Ultrasonic Speech" as "AD:Bard-Song Ultrasonic Speech"
#ReplaceTags in "AD:Bard-Song Ultrasonic Speech" with "initmods(Bard Song, -30%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Bard-Song Ultrasonic Speech" with "displaycost(7)"
#MergeTags in "AD:Bard-Song Ultrasonic Speech" with "cat(Bard-Song)"

<Chi Mastery>
Chi Talent, 15/30, upto(6), page(DF1:21), gives(_
	+1 to "AD:Chi Mastery Catfall::skillscore",
	+1 to "AD:Chi Mastery Damage Resistance::skillscore",
	+1 to "AD:Chi Mastery Danger Sense::skillscore",
	+1 to "AD:Chi Mastery Enhanced Move (Ground)::skillscore",
	+1 to "AD:Chi Mastery Extra Attack::skillscore",
	+1 to "AD:Chi Mastery Metabolism Control::skillscore",
	+1 to "AD:Chi Mastery Perfect Balance::skillscore",
	+1 to "AD:Chi Mastery Regeneration::skillscore",
	+1 to "AD:Chi Mastery Resistant to Metabolic Hazards::skillscore",
	+1 to "AD:Chi Mastery Striking ST::skillscore",
	+1 to "AD:Chi Mastery Super Jump::skillscore",
	+1 to "SK:Autohypnosis",
	+1 to "SK:Blind Fighting",
	+1 to "SK:Body Control",
	+1 to "SK:Breaking Blow",
	+1 to "SK:Breath Control",
	+1 to "SK:Esoteric Medicine (Chi)",
	+1 to "SK:Flying Leap",
	+1 to "SK:Immovable Stance",
	+1 to "SK:Invisibility Art",
	+1 to "SK:Kiai",
	+1 to "SK:Light Walk",
	+1 to "SK:Mental Strength",
	+1 to "SK:Mind Block",
	+1 to "SK:Parry Missile Weapons",
	+1 to "SK:Power Blow",
	+1 to "SK:Pressure Points",
	+1 to "SK:Pressure Secrets",
	+1 to "SK:Push",
	+1 to "SK:Throwing Art",
	+1 to "SK:Zen Archery" _
	)

* Catfall (PM, -10%) [9]
#Clone "AD:Catfall" as "AD:Chi Mastery Catfall"
#ReplaceTags in "AD:Chi Mastery Catfall" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Catfall" with "displaycost(9)"
#MergeTags in "AD:Chi Mastery Catfall" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Catfall" with "cat(Chi Mastery)"

* Damage Resistance 1 or 2 (PM, -10%; Tough Skin, -40%) [3 or 5]
#Clone "AD:Damage Resistance" as "AD:Chi Mastery Damage Resistance"
#ReplaceTags in "AD:Chi Mastery Damage Resistance" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21) | Tough Skin, -40%, group(_Power Modifier), page(B46))"
#ReplaceTags in "AD:Chi Mastery Damage Resistance" with "upto(2)"
#ReplaceTags in "AD:Chi Mastery Damage Resistance" with "displaycost(3/5)"
#MergeTags in "AD:Chi Mastery Damage Resistance" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Damage Resistance" with "cat(Chi Mastery)"

* Danger Sense (PM, -10%) [14]
#Clone "AD:Danger Sense" as "AD:Chi Mastery Danger Sense"
#ReplaceTags in "AD:Chi Mastery Danger Sense" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Danger Sense" with "displaycost(14)"
#MergeTags in "AD:Chi Mastery Danger Sense" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Danger Sense" with "cat(Chi Mastery)"

* Enhanced Move 0.5 or 1 (Ground; PM, -10%) [9 or 18]
#Clone "AD:Enhanced Move (Ground)" as "AD:Chi Mastery Enhanced Move (Ground)"
#ReplaceTags in "AD:Chi Mastery Enhanced Move (Ground)" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Enhanced Move (Ground)" with "displaycost(9/18)"
#ReplaceTags in "AD:Chi Mastery Enhanced Move (Ground)" with "upto(2)"
#MergeTags in "AD:Chi Mastery Enhanced Move (Ground)" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Enhanced Move (Ground)" with "cat(Chi Mastery)"

* Extra Attack 1 or 2 (PM, -10%) [23 or 45]
#Clone "AD:Extra Attack" as "AD:Chi Mastery Extra Attack"
#ReplaceTags in "AD:Chi Mastery Extra Attack" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Extra Attack" with "displaycost(23/45)"
#ReplaceTags in "AD:Chi Mastery Extra Attack" with "upto(2)"
#MergeTags in "AD:Chi Mastery Extra Attack" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Extra Attack" with "cat(Chi Mastery)"

* Metabolism Control 1 to 5 (PM, -10%) [5 to 23]
#Clone "AD:Metabolism Control" as "AD:Chi Mastery Metabolism Control"
#ReplaceTags in "AD:Chi Mastery Metabolism Control" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Metabolism Control" with "upto(5)"
#ReplaceTags in "AD:Chi Mastery Metabolism Control" with "displaycost(5/9/14+)"
#MergeTags in "AD:Chi Mastery Metabolism Control" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Metabolism Control" with "cat(Chi Mastery)"

* Perfect Balance (PM, -10%) [14]
#Clone "AD:Perfect Balance" as "AD:Chi Mastery Perfect Balance"
#ReplaceTags in "AD:Chi Mastery Perfect Balance" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Perfect Balance" with "displaycost(14)"
#MergeTags in "AD:Chi Mastery Perfect Balance" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Perfect Balance" with "cat(Chi Mastery)"

* Regeneration (Slow, Regular, or Fast; PM, -10%) [9, 23, or 45]
#Clone "AD:Regeneration" as "AD:Chi Mastery Regeneration"
#ReplaceTags in "AD:Chi Mastery Regeneration" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Regeneration" with "upto(3)"
#ReplaceTags in "AD:Chi Mastery Regeneration" with "displaycost(9/23/45+)"
#MergeTags in "AD:Chi Mastery Regeneration" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Regeneration" with "cat(Chi Mastery)"

* Resistant to Metabolic Hazards (+3) or (+8) (PM, -10%) [9 or 14]
Chi Mastery Resistant to Metabolic Hazards, 10/15/30, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical, Mundane Physical,Chi Mastery), upto(2),
	initmods(Chi, -10%, group(_Power Modifier), page(DF1:21)), displaycost(9/23/45+), needs("DI:Disciplines of Faith (Chi Rituals)"=1)

* Striking ST 1 or 2 (PM, -10%) [5 or 9]
#Clone "AD:Striking ST" as "AD:Chi Mastery Striking ST"
#ReplaceTags in "AD:Chi Mastery Striking ST" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Striking ST" with "upto(2)"
#ReplaceTags in "AD:Chi Mastery Striking ST" with "displaycost(5/9)"
#MergeTags in "AD:Chi Mastery Striking ST" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Striking ST" with "cat(Chi Mastery)"

*  Super Jump 1 or 2 (PM, -10%) [9 or 18]
#Clone "AD:Super Jump" as "AD:Chi Mastery Super Jump"
#ReplaceTags in "AD:Chi Mastery Super Jump" with "initmods(Chi, -10%, group(_Power Modifier), page(DF1:21))"
#ReplaceTags in "AD:Chi Mastery Super Jump" with "upto(2)"
#ReplaceTags in "AD:Chi Mastery Super Jump" with "displaycost(9/18)"
#MergeTags in "AD:Chi Mastery Super Jump" with "needs("DI:Disciplines of Faith (Chi Rituals)"=1)"
#MergeTags in "AD:Chi Mastery Super Jump" with "cat(Chi Mastery)"

<Druidic Arts>
#Clone "AD:Power Investiture" as "AD:Power Investiture (Druidic)"
#ReplaceTags in "AD:Power Investiture (Druidic)" with "gives(_
	+1 to "ST:Druidic PI",
	+1 to AD:Druidic Allies::SkillScore,
	+1 to AD:Druidic Animal Empathy::SkillScore,
	+1 to AD:Druidic Channeling::SkillScore,
	+1 to AD:Druidic Damage Resistance::SkillScore,
	+1 to AD:Druidic Detect::SkillScore,
	+1 to AD:Druidic Medium::SkillScore,
	+1 to AD:Druidic Mind Control::SkillScore,
	+1 to AD:Druidic Plant Empathy::SkillScore,
	+1 to AD:Druidic Speak With Animals::SkillScore,
	+1 to AD:Druidic Speak With Plants::SkillScore,
	+1 to AD:Druidic Terrain Adaptation::SkillScore,
	+1 to "CO:~Druidic"_
	)"

#ReplaceTags in  "AD:Power Investiture (Druidic)" with "upto($solver(6-"AD:Extra Power Investiture (Druidic)::level"))"
#MergeTags in "AD:Power Investiture (Druidic)" with "cat(Druidic Arts)"


* Druidic Abilities
* Allies (Nature spirit or powerful totem beast of equal points; 12 or less; PM, -10%; Summonable, +100%) [19] or (15 or less) [29]
Druidic Ally (Nature spirit or powerful totem beast of equal points), 5,
	displaycost(19),
	mods(Frequency of Appearance), page(B36), cat(Supernatural, Social, Supernatural, Mental, Supernatural Mental),
	initmods(_
		Frequency: roll of 12 or less (Quite often), *2, shortname(12 or less), group(Frequency of Appearance), page(B36) | _
		Holy, -10%, group(_Power Modifier), page(DF1:22) | _
		Summonable, +100%, group(Ally), page(B38) _
	)

* Animal Empathy (PM, -10%) [5]
#Clone "AD:Animal Empathy" as "AD:Druidic Animal Empathy"
#ReplaceTags in "AD:Druidic Animal Empathy" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22))"
#ReplaceTags in "AD:Druidic Animal Empathy" with "displaycost(5)"
#MergeTags in "AD:Druidic Animal Empathy" with "cat(Druidic Arts)"

* Channeling (PM, -10%; Specialized, Nature Spirits, -50%) [4]
#Clone "AD:Channeling" as "AD:Druidic Channeling"
#ReplaceTags in "AD:Druidic Channeling" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22)|Specialized: Nature Spirits, -50%, group(_General), page(DF1:22))"
#ReplaceTags in "AD:Druidic Channeling" with "displaycost(4)"
#MergeTags in "AD:Druidic Channeling" with "cat(Druidic Arts)"

* Damage Resistance 1 or 2 (Limited, Elemental, -20%; PM, -10%) [4 or 7]
#Clone "AD:Damage Resistance" as "AD:Druidic Damage Resistance"
#ReplaceTags in "AD:Druidic Damage Resistance" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22)|Limited: Elemental, -20%, group(_General), page(DF1:22))"
#ReplaceTags in "AD:Druidic Damage Resistance" with "displaycost(4/7)"
#ReplaceTags in "AD:Druidic Damage Resistance" with "upto(2)"
#MergeTags in "AD:Druidic Damage Resistance" with "cat(Druidic Arts)"

* Detect (PM, -10%) for all plants [18]
Druidic Detect (All Plants), 20, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22)), displaycost(18)

* Detect (PM, -10%) for all animals [18],
Druidic Detect (All Animals), 20, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22)), displaycost(18)

* Detect (PM, -10%) for anything alive [27];
Druidic Detect (All Life), 30, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22)), displaycost(27)

* Medium (PM, -10%; Specialized, Nature Spirits, -50%) [4];
#Clone "AD:Medium" as "AD:Druidic Medium"
#ReplaceTags in "AD:Druidic Medium" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22)|Specialized: Nature Spirits, -50%, group(_General), page(DF1:22))"
#ReplaceTags in "AD:Druidic Medium" with "displaycost(4)"
#MergeTags in "AD:Druidic Medium" with "cat(Druidic Arts)"

* Mind Control (Animals Only, -25%; PM, -10%) [33]
#Clone "AD:Mind Control" as "AD:Druidic Mind Control"
#ReplaceTags in "AD:Druidic Mind Control" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22)|Specialized: Animals, -25%, group(_General), page(DF1:22))"
#ReplaceTags in "AD:Druidic Mind Control" with "displaycost(33)"
#MergeTags in "AD:Druidic Mind Control" with "cat(Druidic Arts)"

* Plant Empathy (PM, -10%) [5];
#Clone "AD:Plant Empathy" as "AD:Druidic Plant Empathy"
#ReplaceTags in "AD:Druidic Plant Empathy" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22))"
#ReplaceTags in "AD:Druidic Plant Empathy" with "displaycost(5)"
#MergeTags in "AD:Druidic Plant Empathy" with "cat(Druidic Arts)"

* Speak With Animals (PM, -10%) [23]
#Clone "AD:Speak With Animals" as "AD:Druidic Speak With Animals"
#ReplaceTags in "AD:Druidic Speak With Animals" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22)|Specialized: Nature Spirits, -50%, group(_General), page(DF1:22))"
#ReplaceTags in "AD:Druidic Speak With Animals" with "displaycost(23)"
#MergeTags in "AD:Druidic Speak With Animals" with "cat(Druidic Arts)"

* Speak With Plants (PM, -10%) [14]
#Clone "AD:Speak With Plants" as "AD:Druidic Speak With Plants"
#ReplaceTags in "AD:Druidic Speak With Plants" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22))"
#ReplaceTags in "AD:Druidic Speak With Plants" with "displaycost(14)"
#MergeTags in "AD:Druidic Speak With Plants" with "cat(Druidic Arts)"

* Terrain Adaptation (PM, -10%) [5] for ice, mud, snow, or other weather-related conditions.
#Clone "AD:Terrain Adaptation" as "AD:Druidic Terrain Adaptation"
#ReplaceTags in "AD:Druidic Terrain Adaptation" with "initmods(Druidic, -10%, group(_Power Modifier), page(DF1:22))"
#ReplaceTags in "AD:Druidic Terrain Adaptation" with "displaycost(5)"
#MergeTags in "AD:Druidic Terrain Adaptation" with "cat(Druidic Arts)"
#ReplaceTags in "AD:Druidic Terrain Adaptation" with x(#InputToTag("Specify the type of natural terrain to which you are adapted (ice, sand, snow, etc.):", nameext, , "Druidic Terrain Adaptation"))

<Holy Might>
Holiness, 5/10, upto($solver(6-"AD:Extra Holiness::level")), page(DF1:21), gives(_
	+1 to "AD:Holy Might Ally::skillscore",
	+1 to "AD:Holy Might Blessed::skillscore",
	+1 to "AD:Holy Might Blessed (Heroic Feat)::skillscore",
	+1 to "AD:Holy Might Detect::skillscore",
	+1 to "AD:Holy Might Healing::skillscore",
	+1 to "AD:Holy Might Intuition::skillscore",
	+1 to "AD:Holy Might Oracle::skillscore",
	+1 to "AD:Holy Might Spirit Empathy::skillscore",
	+1 to "AD:Holy Might True Faith::skillscore"_
	), cat(Supernatural,Mental,Supernatural Mental)

#Clone "AD:Holiness" as "AD:Extra Holiness"
#ReplaceTags in "AD:Extra Holiness" with "needs(AD:Holiness=1), existing(AD:Holiness)"
#ReplaceTags in "AD:Extra Holiness" with "upto($solver(4-"AD:Holiness::level"))"

#Clone "AD:Power Investiture" as "AD:Power Investiture (Holy)"
#ReplaceTags in "AD:Power Investiture (Holy)" with "gives(_
	+1 to "AD:Holy Might Ally::skillscore",
	+1 to "AD:Holy Might Blessed::skillscore",
	+1 to "AD:Holy Might Blessed (Heroic Feat)::skillscore",
	+1 to "AD:Holy Might Detect::skillscore",
	+1 to "AD:Holy Might Healing::skillscore",
	+1 to "AD:Holy Might Intuition::skillscore",
	+1 to "AD:Holy Might Oracle::skillscore",
	+1 to "AD:Holy Might Spirit Empathy::skillscore",
	+1 to "AD:Holy Might True Faith::skillscore",
	+1 to "ST:Holy PI",
	+1 to "CO:~Holy"_
	)"
#ReplaceTags in  "AD:Power Investiture (Holy)" with "upto($solver(6-"AD:Extra Power Investiture (Holy)::level"))"
#MergeTags in "AD:Power Investiture (Holy)" with "cat(Holy Might)"

Holy Might Ally (Divine servant of equal points), 5,
	displaycost(19),
	mods(Frequency of Appearance), page(B36), cat(Supernatural, Social, Supernatural, Mental, Supernatural Mental),
	initmods(_
		Frequency: roll of 12 or less (Quite often), *2, shortname(12 or less), group(Frequency of Appearance), page(B36) | _
		Holy, -10%, group(_Power Modifier), page(DF1:22) | _
		Summonable, +100%, group(Ally), page(B38) _
	)

#Clone "AD:Blessed" as "AD:Holy Might Blessed"
#ReplaceTags in "AD:Holy Might Blessed" with "initmods(Holy, -10%, group(_Power Modifier), page(DF1:22))"
#ReplaceTags in "AD:Holy Might Blessed" with "displaycost(9)"
#MergeTags in "AD:Holy Might Blessed" with "cat(Holy Might)"

#Clone "AD:Blessed (Heroic Feat; [Attribute])" as "AD:Holy Might Blessed (Heroic Feat; [Attribute])"
#ReplaceTags in "AD:Holy Might Blessed (Heroic Feat; [Attribute])" with "initmods(Holy, -10%, group(_Power Modifier), page(DF1:22))"
#ReplaceTags in "AD:Holy Might Blessed (Heroic Feat; [Attribute])" with "displaycost(9 each)"
#MergeTags in "AD:Holy Might Blessed (Heroic Feat; [Attribute])" with "cat(Holy Might)"

* Detect (PM, -10%) for evil [18], good [18], or supernatural beings [18]
Holy Might Detect (Evil), 20, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Holy, -10%, group(_Power Modifier), page(DF1:22)), displaycost(18)
Holy Might Detect (Good), 20, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Holy, -10%, group(_Power Modifier), page(DF1:22)), displaycost(18)
Holy Might Detect (Supernatural Beings), 20, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Holy, -10%, group(_Power Modifier), page(DF1:22)), displaycost(18)


* Healing (Faith Healing, +20%; PM, -10%) [33]
#Clone "AD:Healing" as "AD:Holy Might Healing"
#ReplaceTags in "AD:Holy Might Healing" with "initmods(Holy, -10%, group(_Power Modifier), page(DF1:22) | Faith Healing, +20%, group(Healing), page(B59))"
#ReplaceTags in "AD:Holy Might Healing" with "displaycost(33)"
#MergeTags in "AD:Holy Might Healing" with "cat(Holy Might)"

* Intuition (PM, -10%) [14]
#Clone "AD:Intuition" as "AD:Holy Might Intuition"
#ReplaceTags in "AD:Holy Might Intuition" with "initmods( Holy, -10%, group(_Power Modifier), page(DF1:22) )"
#ReplaceTags in "AD:Holy Might Intuition" with "displaycost(14)"
#MergeTags in "AD:Holy Might Intuition" with "cat(Holy Might)"

* Oracle (PM, -10%) [14]
#Clone "AD:Oracle" as "AD:Holy Might Oracle"
#ReplaceTags in "AD:Holy Might Oracle" with "initmods( Holy, -10%, group(_Power Modifier), page(DF1:22) )"
#ReplaceTags in "AD:Holy Might Oracle" with "displaycost(14)"
#MergeTags in "AD:Holy Might Oracle" with "cat(Holy Might)"

* Patron (Deity; 6 or less; Highly Accessible, +50%; PM, -10%; Special Abilities, +100%) [36] or (9 or less) [72]
#Clone "AD:Patron" as "AD:Holy Might Patron"
#ReplaceTags in "AD:Holy Might Patron" with "initmods( _
	Holy, -10%, group(_Power Modifier), page(DF1:22) | _
	Special Abilities, +100%, page(B72) | _
	Highly Accessible, +50%, page(B72) | _
	Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) )"
#ReplaceTags in "AD:Holy Might Patron" with "displaycost(36/72)"
#MergeTags in "AD:Holy Might Patron" with "cat(Holy Might)"
#MergeTags in "AD:Holy Might Patron" with "x()"


* Resistant to Evil Supernatural Powers (+3) or (+8) (PM, -10%) [5 or 9]
Holy Might Resistant to Evil Supernatural Powers, 5/10/15, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(2), initmods( Holy, -10%, group(_Power Modifier), page(DF1:22) ), displaycost(5/9/14)

* Spirit Empathy (PM, -10%) [9]
#Clone "AD:Spirit Empathy" as "AD:Holy Might Spirit Empathy"
#ReplaceTags in "AD:Holy Might Spirit Empathy" with "initmods( Holy, -10%, group(_Power Modifier), page(DF1:22) )"
#ReplaceTags in "AD:Holy Might Spirit Empathy" with "displaycost(9)"
#MergeTags in "AD:Holy Might Spirit Empathy" with "cat(Holy Might)"

* True Faith (PM, -10%; Turning*, +65%) [24].
#Clone "AD:True Faith" as "AD:Holy Might True Faith"
#ReplaceTags in "AD:Holy Might True Faith" with "initmods( Holy, -10%, group(_Power Modifier), page(DF1:22) | Turning, +65%, group(True Faith), page(DF1:22) )"
#ReplaceTags in "AD:Holy Might True Faith" with "displaycost(24)"
#MergeTags in "AD:Holy Might True Faith" with "cat(Holy Might)"

*******************************************************************************************************\[STOP]
[PERKS]
******************************************************************************************************\[START]
<_General>
Weapon Bond (%Weapon%), 1, page(F132, HT250, MA53, PU2:9, DF1:14),
	conditional(+1 to "SK:%WeaponList%"),
	x(#message(_
			"Note: You will need to add the '_Perk: Weapon Bond' modifier to the specific weapon which recieves _
			a bonus from Weapon Bond in order for the skill level to be increased on the Weapon Table." _
			),
		#ChoiceList(_
			name(Weapon),
			title(Weapon Bond: Choose a Weapon Skill),
			text(Choose a Weapon skill from the list. If the weapon has more than one mode, using more than one skill, select them all:),
			picksallowed(atleast 1),
			method(bynumber),
			list(_
				#grouplist(GR:ShieldSkill, flags(NoPrefix)),
				#grouplist(GR:MeleeWeaponSkill, flags(NoPrefix)),
				#grouplist(GR:RangedWeaponSkill, flags(NoPrefix))_
				)_
			)_
	), noresync(yes)

*******************************************************************************************************\[STOP]
[DISADVANTAGES]
******************************************************************************************************\[START]
#ReplaceTags in "DI:Social Stigma (Excommunicated)" with "upto(1)"
#ReplaceTags in "DI:Social Stigma (Excommunicated)" with "cost(-10)"
#MergeTags in "DI:Social Stigma (Excommunicated)" with "conditional("-3 to DI:Social Stigma (Excommunicated) when beneficial Holy Spells are cast on you; Harmful ones aren't affected!")"

<Mundane Mental>
Code of Honor (Bushido), -15, page(DF1:9), cat(Mundane, Mental)
Disciplines of Faith (Chi Rituals), -10, page(DF1:21), cat(Mundane, Mental)
Intolerance ("Evil" religions), -5, page(B140), cat(Mundane, Mental)
Intolerance (All other religions), -10, page(B140), cat(Mundane, Mental)
Intolerance (Urbanites), -5, page(B140), cat(Mundane, Mental)
Obsession (Perfect my art at any cost), -10, displaycost(-10*), mods(Self-Control), page(B146), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Obsession (Slay a specific type of monster), -5, displaycost(-5*), mods(Self-Control), page(B146), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Odious Personal Habit ("Dirty Hippy"), -5, page(B22), cat(Mundane, Social, Other Physical Features),
	conditional(-1 to ST:Reaction when "people are offended by your manners")
Odious Personal Habit (Continuous singing or strumming), -5, page(B22), cat(Mundane, Social, Other Physical Features),
	conditional(-1 to ST:Reaction when "people are annoyed by your tuning")
Odious Personal Habit (Unrefined manners), -5, page(B22), cat(Mundane, Social, Other Physical Features),
	conditional(-1 to ST:Reaction when "people are offended by your manners")
Odious Personal Habit (Unwashed bushwhacker), -5, page(B22), cat(Mundane, Social, Other Physical Features),
	conditional(-1 to ST:Reaction when "people notice your problem")
Phobia (Crowds), -15, displaycost(-15*), mods(Self-Control), page(B148), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Phobia (Fire), -5, displaycost(-5*), mods(Self-Control), page(B148), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Phobia (Machines), -5, displaycost(-5*), mods(Self-Control), page(B148), cat(Mundane, Mental),
	initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )
Sense of Duty (Adventuring companions), -5, page(B153), cat(Mundane, Mental),
	conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")
Sense of Duty (Coreligionists), -10, page(B153), cat(Mundane, Mental),
	conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")
Sense of Duty (Good entities), -10, page(B153), cat(Mundane, Mental),
	conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")
Sense of Duty (Nation), -10, page(B153), upto(5), cat(Mundane, Mental),
	conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")
Sense of Duty (Nature), -15, page(B153), cat(Mundane, Mental),
	conditional(=+2 to ST:Reaction when "in dangerous situations if Sense of Duty is known")
Vow (Always fight unarmed), -15, page(B160), cat(Mundane, Mental)
Vow (Chastity), -5, page(B160), cat(Mundane, Mental)
Vow (Never refuse a challenge to combat), -10, page(B160), cat(Mundane, Mental)
Vow (Never sleep indoors), -10, page(B160), cat(Mundane, Mental)
Vow (No edged weapons), -10, page(B160), cat(Mundane, Mental)
Vow (Own no more than horse can carry), -10, page(B160), cat(Mundane, Mental)
Vow (Own no more than what can be carried), -10, page(B160), cat(Mundane, Mental)
Vow (Silence), -10, page(B160), cat(Mundane, Mental)
Vow (Vegetarianism), -5, page(B160), cat(Mundane, Mental)

Incompetence (%skills%), -1, page(B164),
	gives(-4 to SK:%skillslist%), noresync(yes),
	x(#ChoiceList(_
			name(skills),
			title(Incompetence: Choose a Skill),
			text(Choose which skill the Incompetence is for:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Climbing",
				"Hiking",
				"Stealth",
				"First Aid",
				"Gesture",
				"Observation",
				"Scrounging",
				"Search"_
				)_
			)_
		)

*******************************************************************************************************\[STOP]
[SKILLS]
******************************************************************************************************\[START]

#MergeTags in "SK:Enthrallment (Captivate)" with "needs(1 CA:Bard-Song = 1)"
#MergeTags in "SK:Enthrallment (Persuade)" with "needs(1 CA:Bard-Song = 1)"
#MergeTags in "SK:Enthrallment (Suggest)" with "needs(1 CA:Bard-Song = 1)"
#MergeTags in "SK:Enthrallment (Sway Emotions)" with "needs(1 CA:Bard-Song = 1)"
#MergeTags in "SK:Hypnotism" with "needs(1 CA:Bard-Song = 1)"
#MergeTags in "SK:Musical Influence" with "needs(1 CA:Bard-Song = 1)"

#Clone "SK:Esoteric Medicine" as "SK:Esoteric Medicine (Holy)"
#MergeTags in "SK:Esoteric Medicine (Holy)" with "needs(1 CA:Holy Might = 1)"
#Clone "SK:Esoteric Medicine" as "SK:Esoteric Medicine (Chi)"
#MergeTags in "SK:Esoteric Medicine (Chi)" with "needs(1 CA:Chi Mastery = 1)"
#Clone "SK:Esoteric Medicine" as "SK:Esoteric Medicine (Druidic)"
#MergeTags in "SK:Esoteric Medicine (Druidic)" with "needs(1 CA:Druidic Arts = 1)"
#MergeTags in "SK:Herb Lore" with "needs(| 1 CA:Druidic Arts = 1)"

#MergeTags in "SK:Autohypnosis" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Blind Fighting" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Body Control" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Breaking Blow" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Breath Control" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Esoteric Medicine (Chi)" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Flying Leap" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Immovable Stance" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Invisibility Art" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Kiai" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Light Walk" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Mental Strength" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Mind Block" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Parry Missile Weapons" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Power Blow" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Pressure Points" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Pressure Secrets" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Push" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Throwing Art" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"
#MergeTags in "SK:Zen Archery" with "needs(ST:IQ = 1 | 1 CA:Chi Mastery = 1)"

<Criminal/Street>
Disguise (Animals), IQ/A, tl(0-12), default(IQ - 5, SK:Makeup - 3), page(B187), cat(_General, Criminal/Street, Spy)

<Medical>
#MergeTags in "SK:Diagnosis" with "default(SK:Esoteric Medicine - 4)"
#MergeTags in "SK:First Aid" with "default(SK:Esoteric Medicine)"
#MergeTags in "SK:Physiology" with "default(SK:Esoteric Medicine - 5)"
#MergeTags in "SK:Poisons" with "default(SK:Esoteric Medicine - 3)"
#MergeTags in "SK:Surgery" with "default(SK:Esoteric Medicine - 5), needs(| SK:Esoteric Medicine = 1pts)"

<Technical>
Hazardous Materials (Magical), IQ/A, tl(0-12), default(IQ - 5, SK:Hazardous Materials - 5), page(B199), cat(_General, Technical)

<Knowledge>
Hidden Lore (Elemental Lore), IQ/A, page(B199), cat(_General, Knowledge)
Hidden Lore (Faerie Lore), IQ/A, page(B199), cat(_General, Knowledge)
Hidden Lore (Nature Spirit Lore), IQ/A, page(B199), cat(_General, Knowledge)
Hidden Lore (Undead Lore), IQ/A, page(B199), cat(_General, Knowledge)
Hidden Lore (Magical Items Lore), IQ/A, page(B199), cat(_General, Knowledge)
Hidden Lore (Magical Writings Lore), IQ/A, page(B199), cat(_General, Knowledge)

<Occult/Magical>
Religious Ritual (Druidic), IQ/H, default(SK:Ritual Magic - 6, SK:Theology - 4), page(B217), cat(_General, Occult/Magical)
Theology (Druidic), IQ/H, default(IQ - 6, SK:Religious Ritual - 4), page(B226), cat(_General, Social Sciences/Humanities)

<Wildcard!>
Barbarian!, IQ/WC, cat(_General, Wildcard!), page(DF1:18),
	description(Camouflage, Disguise (Animals), Mimicry (Animal Sounds, Bird Calls), Naturalist, Navigation (Land), and Weather Sense. Make a HT-based roll for Hiking, Running, or Swimming, or a Per-based roll for Fishing, Survival (any), or Tracking.),
	usernotes(Camouflage, Disguise (Animals), Mimicry (Animal Sounds, Bird Calls), Naturalist, Navigation (Land), and Weather Sense. Make a HT-based roll for Hiking, Running, or Swimming, or a Per-based roll for Fishing, Survival (any), or Tracking.)
Bard!, IQ/WC, cat(_General, Wildcard!), page(DF1:18),
	description(Acting, Current Affairs (any), Diplomacy, Fast-Talk, Heraldry, Musical Instrument (any one), Performance, Poetry, Propaganda, and Public Speaking. Make a HT-based roll for Carousing or Singing, or a Per-based roll for Detect Lies.),
	usernotes(Acting, Current Affairs (any), Diplomacy, Fast-Talk, Heraldry, Musical Instrument (any one), Performance, Poetry, Propaganda, and Public Speaking. Make a HT-based roll for Carousing or Singing, or a Per-based roll for Detect Lies.)
Cleric!, IQ/WC, cat(_General, Wildcard!), page(DF1:18),
	description(Philosophy (any), Religious Ritual, or Theology skill for the priest's faith, plus Diagnosis, First Aid, Hidden Lore (Demon Lore, Spirit Lore, Undead Lore, etc.), Occultism, Public Speaking, Surgery, and Teaching. Make a Will-based roll for Exorcism or Meditation, or a Per-based roll for Esoteric Medicine (Holy).),
	usernotes(Philosophy (any), Religious Ritual, or Theology skill for the priest's faith, plus Diagnosis, First Aid, Hidden Lore (Demon Lore, Spirit Lore, Undead Lore, etc.), Occultism, Public Speaking, Surgery, and Teaching. Make a Will-based roll for Exorcism or Meditation, or a Per-based roll for Esoteric Medicine (Holy).)
Druid!, IQ/WC, cat(_General, Wildcard!), page(DF1:18),
	description(druidic Religious Ritual and Theology skills, as well as Animal Handling (any), Disguise (Animals), Herb Lore, Hidden Lore (any natural lore), Naturalist, Pharmacy (Herbal), Veterinary, and Weather Sense. Make a Per-based roll for Esoteric Medicine (Druidic) or any kind of Survival.),
	usernotes(druidic Religious Ritual and Theology skills, as well as Animal Handling (any), Disguise (Animals), Herb Lore, Hidden Lore (any natural lore), Naturalist, Pharmacy (Herbal), Veterinary, and Weather Sense. Make a Per-based roll for Esoteric Medicine (Druidic) or any kind of Survival.)
Holy Warrior!, IQ/WC, cat(_General, Wildcard!), page(DF1:18),
	description(Leadership, Religious Ritual, Strategy, Tactics, and Theology, as well as Hidden Lore, Physiology, and Psychology specialties pertaining to evil monsters. Make a Will-based roll for Exorcism, Intimidation, or Meditation.),
	usernotes(Leadership, Religious Ritual, Strategy, Tactics, and Theology, as well as Hidden Lore, Physiology, and Psychology specialties pertaining to evil monsters. Make a Will-based roll for Exorcism, Intimidation, or Meditation.)
Knight!, DX/WC, parryat(@int(%level/2)+3), cat(_General, Wildcard!,Combat/Weapons - Melee Combat), page(DF1:18),
	description('heavy' Melee Weapon skills (Axe/Mace, Broadsword, Flail, Polearm, Spear, Two-Handed Sword, etc.) and Shield ñ plus Lance and Riding (Equines), for mounted combat. Make an IQ-based roll for Leadership, Strategy, or Tactics, or when an Armoury or Connoisseur roll is called for to recognize or maintain arms or armor.),
	usernotes('heavy' Melee Weapon skills (Axe/Mace, Broadsword, Flail, Polearm, Spear, Two-Handed Sword, etc.) and Shield ñ plus Lance and Riding (Equines), for mounted combat. Make an IQ-based roll for Leadership, Strategy, or Tactics, or when an Armoury or Connoisseur roll is called for to recognize or maintain arms or armor.)
Martial Artist!, DX/WC, parryat(@int(%level/2)+3), cat(_General, Wildcard!,Combat/Weapons - Melee Combat), page(DF1:18),
	description(Judo, Karate, and any Melee Weapon or Thrown Weapon skill used with 'exotic' weapons: Axe/Mace for kama, Flail for nunchaku, Jitte/Sai, Kusari, Smallsword for jo,Staff for bo, Thrown Weapon (Shuriken), and Tonfa. Also covers related Fast-Draw skills, and any use of Acrobatics, Climbing, Jumping, or Stealth in combat. Make a Will-based roll for Meditation.),
	usernotes(Judo, Karate, and any Melee Weapon or Thrown Weapon skill used with 'exotic' weapons: Axe/Mace for kama, Flail for nunchaku, Jitte/Sai, Kusari, Smallsword for jo,Staff for bo, Thrown Weapon (Shuriken), and Tonfa. Also covers related Fast-Draw skills, and any use of Acrobatics, Climbing, Jumping, or Stealth in combat. Make a Will-based roll for Meditation.)
Scout!, IQ/WC, cat(_General, Wildcard!), page(DF1:18),
	description(Camouflage, Cartography, and Navigation (Land); Shadowing, but only when outdoors; and Gesture and Mimicry (Bird Calls) for signaling allies. Make a DX-based roll for Stealth, a HT-based roll for Hiking, or a Per-based roll for Observation, Survival (any), Tracking, or any use of Traps to spot traps.),
	usernotes(Camouflage, Cartography, and Navigation (Land); Shadowing, but only when outdoors; and Gesture and Mimicry (Bird Calls) for signaling allies. Make a DX-based roll for Stealth, a HT-based roll for Hiking, or a Per-based roll for Observation, Survival (any), Tracking, or any use of Traps to spot traps.)
Swashbuckler!, DX/WC, parryat(@int(%level/2)+3), cat(_General, Wildcard!,Combat/Weapons - Melee Combat), page(DF1:18),
	description(Fast-Draw, Melee Weapon, and Thrown Weapon skills forone-handed bladesñ Broadsword, Fast-Draw (Knife or Sword), Knife, Main-Gauche, Rapier, Saber, Shortsword, Smallsword, and Thrown Weapon (Knife). Also covers Boxing, Brawling, Cloak, Shield, and Wrestling, and any use of Acrobatics, Climbing, Jumping, or Stealth in combat.),
	usernotes(Fast-Draw, Melee Weapon, and Thrown Weapon skills forone-handed bladesñ Broadsword, Fast-Draw (Knife or Sword), Knife, Main-Gauche, Rapier, Saber, Shortsword, Smallsword, and Thrown Weapon (Knife). Also covers Boxing, Brawling, Cloak, Shield, and Wrestling, and any use of Acrobatics, Climbing, Jumping, or Stealth in combat.)
Thief!, DX/WC, cat(_General, Wildcard!), page(DF1:18),
	description(Climbing, Escape, Filch, Forced Entry, Pickpocket, Sleight of Hand, and Stealth. Make an IQ-based roll for Holdout, Lockpicking, Shadowing, Smuggling, Streetwise, or Traps, or for Gesture to signal allies. Make a Per-based roll for Search or Urban Survival.),
	usernotes(Climbing, Escape, Filch, Forced Entry, Pickpocket, Sleight of Hand, and Stealth. Make an IQ-based roll for Holdout, Lockpicking, Shadowing, Smuggling, Streetwise, or Traps, or for Gesture to signal allies. Make a Per-based roll for Search or Urban Survival.)
Wizard!, IQ/WC, cat(_General, Wildcard!), page(DF1:18),
	description(Alchemy, Hazardous Materials (Magical), Hidden Lore (any magical specialty), Occultism, Research, Speed-Reading, Teaching, Thaumatology, and Writing. Make a DX-based roll for Body Sense or Innate Attack when spellcasting, or a Will-based roll for Meditation.),
	usernotes(Alchemy, Hazardous Materials (Magical), Hidden Lore (any magical specialty), Occultism, Research, Speed-Reading, Teaching, Thaumatology, and Writing. Make a DX-based roll for Body Sense or Innate Attack when spellcasting, or a Will-based roll for Meditation.)


*******************************************************************************************************\[STOP]
[LISTS]
******************************************************************************************************\[START]
<Languages>
text("If you have not already chosen one, please choose a native Language."),
	pointswanted(atleast -3, upto 0),
	itemswanted(upto 2),
	list(_
		#newitem(AD:Common, 2/4, displaycost(0), page(B24), upto(3 LimitingTotal), mods(Language), levelnames([None], Broken, Accented, Native), cat(Language, Language Spoken, Language Written, Social Background), initmods(Native Language, -6, gives(=+1 to ST:Native Languages), formula(-@if(AD:Language Talent > 0 then 4 else 6)), forceformula(yes), group(Language), page(B23)), taboo(Native Languages > 1)) #codes(upto 3, downto 3),
		AD:Language - Native #codes(upto 3, downto 3),
		AD:Language - Native (Spoken) #codes(upto 3, downto 3),
		AD:Language - Native (Written) _
		),
	), y(
//)

<QuirkSelection>
text("You may select up to five Quirks and spend the points on 'Trading Character Points for Money' or 'Signature Gear' or save them to improve existing traits later."),
		pointswanted(atleast -5, upto 0),
		itemswanted(atleast 0, upto 1000),
		list(_
				#BuildSelectList(Advantages where levelnames listincludes "$500", template(#newitem(AD:_Increase %ListItem%, existing(AD:%ListItem%)))),
				AD:Signature Gear,
				AD:Trading Character Points for Money,
				#grouplist(GR:AllQuirks)_
		),
	), y(
//)

<Bard Skills>
SK:Hypnotism,
SK:Musical Influence,
SK:Enthrallment (Captivate),
SK:Enthrallment (Persuade),
SK:Enthrallment (Suggest),
SK:Enthrallment (Sway Emotions)

<Bard Spells>
SP:Dull [Sense],
SP:Keen [Sense],
SP:Alertness,
SP:Berserker,
SP:Boost Intelligence,
SP:Borrow Language,
SP:Borrow Skill,
SP:Bravery,
SP:Charm,
SP:Command,
SP:Compel Lie,
SP:Compel Truth,
SP:Control Person,
SP:Daze,
SP:Disorient,
SP:Dream Projection,
SP:Dream Sending,
SP:Dream Viewing,
SP:Dull Hearing,
SP:Dull Taste and Smell,
SP:Dull Vision,
SP:Dullness,
SP:Ecstasy,
SP:Emotion Control,
SP:Encrypt,
SP:Enslave,
SP:False Memory,
SP:Fascinate,
SP:Fear,
SP:Foolishness,
SP:Forgetfulness,
SP:Gift of Letters,
SP:Gift of Tongues,
SP:Glib Tongue,
SP:Great Geas,
SP:Great Hallucination,
SP:Hallucination,
SP:Hide Emotion,
SP:Hide Thoughts,
SP:Keen Hearing,
SP:Keen Taste and Smell,
SP:Keen Vision,
SP:Lend Language,
SP:Lend Skill,
SP:Lesser Geas,
SP:Loyalty,
SP:Lure,
SP:Madness,
SP:Mass Daze,
SP:Mass Sleep,
SP:Mass Suggestion,
SP:Memorize,
SP:Mental Stun,
SP:Mindlessness,
SP:Mind-Reading,
SP:Mind-Search,
SP:Mind-Sending,
SP:Oath,
SP:Panic,
SP:Permanent Forgetfulness,
SP:Permanent Madness,
SP:Persuasion,
SP:Possession,
SP:Presence,
SP:Rear Vision,
SP:Retrogression,
SP:Sense Emotion,
SP:Sense Foes,
SP:Sense Life,
SP:Sleep,
SP:Soul Rider,
SP:Strengthen Will,
SP:Suggestion,
SP:Telepathy,
SP:Terror,
SP:Truthsayer,
SP:Vexation,
SP:Weaken Will,
SP:Will Lock,
SP:Wisdom

<Barbarian Abilities>

<Bard Abilities>
AD:Bard-Song Empathy,
AD:Bard-Song Mimicry,
AD:Bard-Song Rapier Wit,
AD:Bard-Song Speak With Animals,
AD:Bard-Song Subsonic Speech,
AD:Bard-Song Telecommunication (Telesend),
AD:Bard-Song Terror,
AD:Bard-Song Ultrasonic Speech

<Holy Abilities>
AD:Holy Might Ally (Divine servant of equal points),
AD:Holy Might Blessed,
AD:Holy Might Blessed (Heroic Feat; [Attribute]) #codes(upto 1, downto 1),
AD:Holy Might Detect (Evil),
AD:Holy Might Detect (Good),
AD:Holy Might Detect (Supernatural Beings),
AD:Holy Might Intuition,
AD:Holy Might Oracle,
AD:Holy Might Resistant to Evil Supernatural Powers,
AD:Holy Might Spirit Empathy,
AD:Holy Might True Faith

<Druid Abilities>
AD:Druidic Ally (Nature spirit or powerful totem beast of equal points),
AD:Druidic Animal Empathy,
AD:Druidic Channeling,
AD:Druidic Damage Resistance,
AD:Druidic Detect (All Animals),
AD:Druidic Detect (All Plants),
AD:Druidic Medium,
AD:Druidic Plant Empathy,
AD:Druidic Speak With Plants,
AD:Druidic Terrain Adaptation

<Knight Abilities>

<Martial Artist Abilities>
AD:Chi Mastery Catfall,
AD:Chi Mastery Danger Sense,
AD:Chi Mastery Perfect Balance,
AD:Chi Mastery Damage Resistance,
AD:Chi Mastery Enhanced Move (Ground),
AD:Chi Mastery Extra Attack,
AD:Chi Mastery Metabolism Control,
AD:Chi Mastery Regeneration,
AD:Chi Mastery Resistant to Metabolic Hazards,
AD:Chi Mastery Striking ST,
AD:Chi Mastery Super Jump

<Martial Artist Skills>
SK:Immovable Stance,
SK:Light Walk,
SK:Parry Missile Weapons,
SK:Push,
SK:Throwing Art,
SK:Breaking Blow,
SK:Flying Leap,
SK:Pressure Points,
SK:Breath Control,
SK:Kiai,
SK:Body Control,
SK:Mental Strength,
SK:Mind Block,
SK:Autohypnosis,
SK:Power Blow,
SK:Esoteric Medicine (Chi),
SK:Blind Fighting

<Scout Abilities>

<Swashbuckler Abilities>

<Thief Abilities>

<Wizard Abilities>

<Wizard Spell List>
{_Choose your own spells}=30,
{Artillery Mage: Specializes in direct-damage magic - especially area-effect spells.}=30,
{Illusionist: Specializes in baffling (dumber) enemies.}=30,
{Necromancer: Specializes in creating undead and throwing malisons.}=30

<Wizard Spell AliasList>
{30 Spells=1pts},
{SP:Sound, SP:Purify Air, SP:Ignite Fire, SP:Thunderclap, SP:Stench, SP:Shape Fire, SP:Extinguish Fire,
	SP:Create Fire, SP:Create Air, SP:Shape Air, SP:Rain of Fire, SP:Fireproof, SP:Deflect Energy,
	SP:Windstorm, SP:Smoke, SP:Resist Fire, SP:Heat, SP:Flame Jet, SP:Fireball, SP:Flaming Weapon,
	SP:Explosive Fireball, SP:Flaming Missiles, SP:Concussion, SP:Lightning, SP:Burning Touch,
	SP:Wall of Lightning, SP:Spark Storm, SP:Flaming Armor, SP:Fire Cloud, SP:Breathe Fire},
{SP:Apportation, SP:Foolishness, SP:Haste, SP:Light, SP:Simple Illusion, SP:Sound, SP:Colors,
	SP:Continual Light, SP:Daze, SP:Hinder, SP:Illusion Disguise, SP:Illusion Shell, SP:Independence,
	SP:Silence, SP:Voices, SP:Complex Illusion, SP:Darkness, SP:Fascinate, SP:Flash, SP:Hush,
	SP:Mass Daze, SP:Mirror, SP:Wall of Silence, SP:Blackout, SP:Blur, SP:Hide, SP:Mage-Stealth,
	SP:Perfect Illusion, SP:Invisibility, SP:Phantom},
{SP:Death Vision, SP:Debility, SP:Itch, SP:Lend Energy, SP:Test Food, SP:Decay, SP:Frailty,
	SP:Lend Vitality, SP:Spasm, SP:Summon Spirit, SP:Animation, SP:Clumsiness, SP:Minor Healing, SP:Pain,
	SP:Steal Energy, SP:Stun, SP:Sensitize, SP:Skull-Spirit, SP:Steal Vitality, SP:Zombie, SP:Agonize,
	SP:Choke, SP:Control Zombie, SP:Paralyze Limb, SP:Pestilence, SP:Sickness, SP:Zombie Summoning,
	SP:Wither Limb, SP:Deathtouch, SP:Rotting Death}

<Wizard Spell Alt1List>
{_
text("You may select 30 wizard spells here or save the points and do so later."),
tagwith(Wizard(Yes)),
pointswanted(atleast 0, upto 30),
itemswanted(atleast 0, upto 30),
list(#grouplist(GR:AllSpells, append( #codes(upto 1pts))))_
), select9(_
},
{},
{},
{}
//)}

<Cleric Spell List>
{_Choose your own spells}=20,
{Buffs: Favors spells which boost resistance and combat effectiveness.}=20,
{Healing: Favors spells which heal.}=20,
{Supernatural Warfare: Prefer spells which are useful in combat, especially against spirits and undead.}=20

<Cleric Spell AliasList>
{{SK:Meditation}=1pts},
{{SK:Meditation}=1pts, {SP:Affect Spirits (Holy)}=0pts#NoNeeds, {SP:Armor (Holy)}=0pts#NoNeeds, {SP:Bravery (Holy)}=0pts#NoNeeds, {SP:Coolness (Holy)}=0pts#NoNeeds, {SP:Flaming Weapon (Holy)}=0pts#NoNeeds, {SP:Magic Resistance (Holy)}=0pts#NoNeeds, {SP:Might (Holy)}=0pts#NoNeeds, {SP:Resist Acid (Holy)}=0pts#NoNeeds, {SP:Resist Cold (Holy)}=0pts#NoNeeds, {SP:Resist Disease (Holy)}=0pts#NoNeeds, {SP:Resist Fire (Holy)}=0pts#NoNeeds, {SP:Resist Lightning (Holy)}=0pts#NoNeeds, {SP:Resist Pain (Holy)}=0pts#NoNeeds, {SP:Resist Poison (Holy)}=0pts#NoNeeds, {SP:Resist Pressure (Holy)}=0pts#NoNeeds, {SP:Shield (Holy)}=0pts#NoNeeds, {SP:Strengthen Will (Holy)}=0pts#NoNeeds, {SP:Vigor (Holy)}=0pts#NoNeeds, {SP:Warmth (Holy)}=0pts#NoNeeds, {SP:Wisdom (Holy)}=0pts#NoNeeds},
{{SK:Meditation}=1pts, {SP:Awaken (Holy)}=0pts#NoNeeds, {SP:Cleansing (Holy)}=0pts#NoNeeds, {SP:Great Healing (Holy)}=0pts#NoNeeds, {SP:Healing Slumber (Holy)}=0pts#NoNeeds, {SP:Lend Energy (Holy)}=0pts#NoNeeds, {SP:Lend Vitality (Holy)}=0pts#NoNeeds, {SP:Major Healing (Holy)}=0pts#NoNeeds, {SP:Minor Healing (Holy)}=0pts#NoNeeds, {SP:Neutralize Poison (Holy)}=0pts#NoNeeds, {SP:Recover Energy (Holy)}=0pts#NoNeeds, {SP:Relieve Paralysis (Holy)}=0pts#NoNeeds, {SP:Restoration (Holy)}=0pts#NoNeeds, {SP:Restore Hearing (Holy)}=0pts#NoNeeds, {SP:Restore Sight (Holy)}=0pts#NoNeeds, {SP:Restore Speech (Holy)}=0pts#NoNeeds, {SP:Share Vitality (Holy)}=0pts#NoNeeds, {SP:Stone to Flesh (Holy)}=0pts#NoNeeds, {SP:Stop Bleeding (Holy)}=0pts#NoNeeds, {SP:Stop Paralysis (Holy)}=0pts#NoNeeds, {SP:Stop Spasm (Holy)}=0pts#NoNeeds},
{{SK:Meditation}=1pts, {SP:Affect Spirits (Holy)}=0pts#NoNeeds, {SP:Astral Vision (Holy)}=0pts#NoNeeds, {SP:Aura (Holy)}=0pts#NoNeeds, {SP:Command (Holy)}=0pts#NoNeeds, {SP:Command Spirit ([Spirit]; Holy)}=0pts#NoNeeds, {SP:Detect Magic (Holy)}=0pts#NoNeeds, {SP:Dispel Possession (Holy)}=0pts#NoNeeds, {SP:Final Rest (Holy)}=0pts#NoNeeds, {SP:Magic Resistance (Holy)}=0pts#NoNeeds, {SP:Repel Spirits (Holy)}=0pts#NoNeeds, {SP:Sense Spirit (Holy)}=0pts#NoNeeds, {SP:Silence (Holy)}=0pts#NoNeeds, {SP:Strengthen Will (Holy)}=0pts#NoNeeds, {SP:Summon Spirit (Holy)}=0pts#NoNeeds, {SP:Sunbolt (Holy)}=0pts#NoNeeds, {SP:Sunlight (Holy)}=0pts#NoNeeds, {SP:Thunderclap (Holy)}=0pts#NoNeeds, {SP:Turn Spirit (Holy)}=0pts#NoNeeds, {SP:Turn Zombie (Holy)}=0pts#NoNeeds, {SP:Watchdog (Holy)}=0pts#NoNeeds} _

<Cleric Spell Alt1List>
{_
text("You may select 20 clerical spells here or save the points and do so later."),
tagwith(Cleric(Yes)),
pointswanted(atleast 0, upto 20),
itemswanted(atleast 0, upto 20),
list(#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts))))_
), select11(_
},
{},
{},
{}
//)}

<Druid Spell List>
{_Choose your own spells}=20,
{Elementalist: Favors spells of elemental fury.}=20,
{Green Druid: Focus on Plant spells and magic useful in the forest.}=20

<Druid Spell AliasList>
{{SK:Hiking}=1pts},
{{SK:Hiking}=1pts, {SP:Clouds (Druidic)}=0pts#NoNeeds, {SP:Fog (Druidic)}=0pts#NoNeeds, {SP:Freeze (Druidic)}=0pts#NoNeeds, {SP:Frost (Druidic)}=0pts#NoNeeds, {SP:Mystic Mist (Druidic)}=0pts#NoNeeds, {SP:Rain (Druidic)}=0pts#NoNeeds, {SP:Recover Energy (Druidic)}=0pts#NoNeeds, {SP:Shape Air (Druidic)}=0pts#NoNeeds, {SP:Shape Earth (Druidic)}=0pts#NoNeeds, {SP:Shape Water (Druidic)}=0pts#NoNeeds, {SP:Snow (Druidic)}=0pts#NoNeeds, {SP:Summon Air Elemental (Druidic)}=0pts#NoNeeds, {SP:Summon Earth Elemental (Druidic)}=0pts#NoNeeds, {SP:Summon Fire Elemental (Druidic)}=0pts#NoNeeds, {SP:Summon Water Elemental (Druidic)}=0pts#NoNeeds, {SP:Wall of Wind (Druidic)}=0pts#NoNeeds, {SP:Waves (Druidic)}=0pts#NoNeeds, {SP:Whirlpool (Druidic)}=0pts#NoNeeds, {SP:Wind (Druidic)}=0pts#NoNeeds, {SP:Windstorm (Druidic)}=0pts#NoNeeds},
{{SK:Hiking}=1pts, {SP:Animate Plant (Druidic)}=0pts#NoNeeds, {SP:Blossom (Druidic)}=0pts#NoNeeds, {SP:Conceal (Druidic)}=0pts#NoNeeds, {SP:Create Plant (Druidic)}=0pts#NoNeeds, {SP:False Tracks (Druidic)}=0pts#NoNeeds, {SP:Forest Warning (Druidic)}=0pts#NoNeeds, {SP:Hide Path (Druidic)}=0pts#NoNeeds, {SP:Identify Plant (Druidic)}=0pts#NoNeeds, {SP:Plant Control (Druidic)}=0pts#NoNeeds, {SP:Plant Growth (Druidic)}=0pts#NoNeeds, {SP:Plant Sense (Druidic)}=0pts#NoNeeds, {SP:Plant Speech (Druidic)}=0pts#NoNeeds, {SP:Plant Vision (Druidic)}=0pts#NoNeeds, {SP:Pollen Cloud (Druidic)}=0pts#NoNeeds, {SP:Rain of Nuts (Druidic)}=0pts#NoNeeds, {SP:Rejuvenate Plant (Druidic)}=0pts#NoNeeds, {SP:Shape Plant (Druidic)}=0pts#NoNeeds, {SP:Tangle Growth (Druidic)}=0pts#NoNeeds, {SP:Walk Through Plants (Druidic)}=0pts#NoNeeds, {SP:Walk Through Wood (Druidic)}=0pts#NoNeeds}

<Druid Spell Alt1List>
{_
text("You may select 20 druidic spells here or save the points and do so later."),
tagwith(Druid(Yes)),
pointswanted(atleast 0, upto 20),
itemswanted(atleast 0, upto 20),
list(#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts))))_
), select13(_
},
{},
{}
//)}

*******************************************************************************************************\[STOP]
[GROUPS]
******************************************************************************************************\[START]
<AllAdvantages>
AD:Born War-Leader
AD:Chi Talent

<AllAdvantagesMental>
AD:Born War-Leader
AD:Chi Talent

<ShieldSkill>
SK:Shield (Shield)
SK:Shield (Buckler)
SK:Shield (Force)

<MeleeWeaponSkill>
SK:Axe/Mace
SK:Broadsword
SK:Cloak
SK:Flail
SK:Force Sword
SK:Force Whip
SK:Garrote
SK:Jitte/Sai
SK:Knife
SK:Kusari
SK:Lance
SK:Main-Gauche
SK:Monowire Whip
SK:Parry Missile Weapons
SK:Polearm
SK:Rapier
SK:Saber
SK:Shortsword
SK:Smallsword
SK:Spear
SK:Staff
SK:Tonfa
SK:Two-Handed Axe/Mace
SK:Two-Handed Flail
SK:Two-Handed Sword
SK:Whip

<RangedWeaponSkill>
SK:Artillery (Beams)
SK:Artillery (Bombs)
SK:Artillery (Cannon)
SK:Artillery (Catapult)
SK:Artillery (Guided Missile)
SK:Artillery (Torpedoes)
SK:Beam Weapons (Pistol)
SK:Beam Weapons (Projector)
SK:Beam Weapons (Rifle)
SK:Blowpipe
SK:Bolas
SK:Bow
SK:Crossbow
SK:Dropping
SK:Gunner (Beams)
SK:Gunner (Cannon)
SK:Gunner (Catapult)
SK:Gunner (Machine Gun)
SK:Gunner (Rockets)
SK:Guns (Grenade Launcher)
SK:Guns (Gyroc)
SK:Guns (Light Anti-Armor Weapon)
SK:Guns (Light Machine Gun)
SK:Guns (Musket)
SK:Guns (Pistol)
SK:Guns (Rifle)
SK:Guns (Shotgun)
SK:Guns (Submachine Gun)
SK:Innate Attack (Beam)
SK:Innate Attack (Breath)
SK:Innate Attack (Gaze)
SK:Innate Attack (Projectile)
SK:Lasso
SK:Liquid Projector (Flamethrower)
SK:Liquid Projector (Sprayer)
SK:Liquid Projector (Squirt Gun)
SK:Liquid Projector (Water Cannon)
SK:Net
SK:Sling
SK:Spear Thrower
SK:Thrown Weapon (Axe/Mace)
SK:Thrown Weapon (Dart)
SK:Thrown Weapon (Harpoon)
SK:Thrown Weapon (Knife)
SK:Thrown Weapon (Shuriken)
SK:Thrown Weapon (Spear)
SK:Thrown Weapon (Stick)

<Born War-Leader>
SK:Leadership
SK:Strategy
SK:Tactics
SK:Intelligence Analysis
SK:Savoir-Faire (Military)

<RacialTemplates>
TE:Air-Infused (Dungeon Fantasy)
TE:Cat-Folk (Dungeon Fantasy)
TE:Celestial (Dungeon Fantasy)
TE:Coleopteran (Dungeon Fantasy)
TE:Corpse-Eater (Dungeon Fantasy)
TE:Dark One (Dungeon Fantasy)
TE:Dragon-Blooded (Dungeon Fantasy)
TE:Dwarf (Dungeon Fantasy)
TE:Earth-Infused (Dungeon Fantasy)
TE:Elder-Spawn (Dungeon Fantasy)
TE:Faun (Dungeon Fantasy)
TE:Fire-Infused (Dungeon Fantasy)
TE:Gargoyle (Dungeon Fantasy)
TE:Gnome (Dungeon Fantasy)
TE:Goblin (Dungeon Fantasy)
TE:Half-Elf (Dungeon Fantasy)
TE:Halfling (Dungeon Fantasy)
TE:Half-Ogre (Dungeon Fantasy)
TE:Half-Orc (Dungeon Fantasy)
TE:High Elf (Dungeon Fantasy)
TE:Hobgoblin (Dungeon Fantasy)
TE:Infernal (Dungeon Fantasy)
TE:Leprechaun (Dungeon Fantasy)
TE:Lizard Man (Dungeon Fantasy)
TE:Minotaur (Dungeon Fantasy)
TE:Mountain Elf (Dungeon Fantasy)
TE:Nymph (Dungeon Fantasy)
TE:Ogre (Dungeon Fantasy)
TE:Orc (Dungeon Fantasy)
TE:Pixie (Dungeon Fantasy)
TE:Sea Elf (Dungeon Fantasy)
TE:Shadow Elf (Dungeon Fantasy)
TE:Troll (Dungeon Fantasy)
TE:Water-Infused (Dungeon Fantasy)
TE:Wildman (Dungeon Fantasy)
TE:Winged Elf (Dungeon Fantasy)
TE:Wood Elf (Dungeon Fantasy)

<AllSpellsDruidic>
SP:Beast-Rouser (Druidic)
SP:Beast-Soother (Druidic)
SP:Detect Magic (Druidic)
SP:Detect Poison (Druidic)
SP:Extinguish Fire (Druidic)
SP:Find Direction (Druidic)
SP:Hawk Vision (Druidic)
SP:Identify Plant (Druidic)
SP:Master (Druidic)
SP:No-Smell (Druidic)
SP:Purify Air (Druidic)
SP:Purify Earth (Druidic)
SP:Purify Water (Druidic)
SP:Quick March (Druidic)
SP:Recover Energy (Druidic)
SP:Seek Coastline (Druidic)
SP:Seek Earth (Druidic)
SP:Seek Food (Druidic)
SP:Seek Pass (Druidic)
SP:Seek Plant (Druidic)
SP:Seek Water (Druidic)
SP:Sense Life (Druidic)
SP:Tell Position (Druidic)
SP:Umbrella (Druidic)
SP:Bird Control (Druidic)
SP:Fish Control (Druidic)
SP:Mammal Control (Druidic)
SP:Reptile Control (Druidic)
SP:Vermin Control (Druidic)
SP:Beast Link (Druidic)
SP:Beast Seeker (Druidic)
SP:Beast Speech (Druidic)
SP:Bless Plants (Druidic)
SP:Cure Disease (Druidic)
SP:Fog (Druidic)
SP:Frost (Druidic)
SP:Heal Plant (Druidic)
SP:Hide Path (Druidic)
SP:Know Location (Druidic)
SP:Light Tread (Druidic)
SP:Mystic Mist (Druidic)
SP:Neutralize Poison (Druidic)
SP:Pathfinder (Druidic)
SP:Plant Growth (Druidic)
SP:Plant Vision (Druidic)
SP:Pollen Cloud (Druidic)
SP:Predict Earth Movement (Druidic)
SP:Predict Weather (Druidic)
SP:Purify Food (Druidic)
SP:Repel Vermin (Druidic)
SP:Repel Fish (Druidic)
SP:Repel Reptile (Druidic)
SP:Repel Bird (Druidic)
SP:Repel Mammal (Druidic)
SP:Repel Hybrids (Druidic)
SP:Rider (Druidic)
SP:Rider Within (Druidic)
SP:Shape Air (Druidic)
SP:Shape Earth (Druidic)
SP:Shape Plant (Druidic)
SP:Shape Water (Druidic)
SP:Spider Silk (Druidic)
SP:Wall of Wind (Druidic)
SP:Weather Dome (Druidic)
SP:Windstorm (Druidic)
SP:Animate Plant (Druidic)
SP:Beast Summoning (Druidic)
SP:Blossom (Druidic)
SP:Breathe Water (Druidic)
SP:Clouds (Druidic)
SP:Conceal (Druidic)
SP:Create Plant (Druidic)
SP:False Tracks (Druidic)
SP:Forest Warning (Druidic)
SP:Freeze (Druidic)
SP:Instant Neutralize Poison (Druidic)
SP:Melt Ice (Druidic)
SP:Plant Control (Druidic)
SP:Plant Sense (Druidic)
SP:Plant Speech (Druidic)
SP:Protect Animal (Druidic)
SP:Rain (Druidic)
SP:Rain of Nuts (Druidic)
SP:Rejuvenate Plant (Druidic)
SP:Remember Path (Druidic)
SP:Resist Cold (Druidic)
SP:Resist Lightning (Druidic)
SP:Resist Pressure (Druidic)
SP:Snow (Druidic)
SP:Snow Shoes (Druidic)
SP:Summon Earth Elemental (Druidic)
SP:Summon Air Elemental (Druidic)
SP:Summon Fire Elemental (Druidic)
SP:Summon Water Elemental (Druidic)
SP:Swim (Druidic)
SP:Tangle Growth (Druidic)
SP:Walk Through Plants (Druidic)
SP:Walk Through Wood (Druidic)
SP:Water Vision (Druidic)
SP:Waves (Druidic)
SP:Whirlpool (Druidic)
SP:Wind (Druidic)
SP:Beast Possession (Druidic)
SP:Blight (Druidic)
SP:Body of Slime (Druidic)
SP:Body of Water (Druidic)
SP:Body of Wind (Druidic)
SP:Body of Wood (Druidic)
SP:Control Earth Elemental (Druidic)
SP:Control Air Elemental (Druidic)
SP:Control Fire Elemental (Druidic)
SP:Control Water Elemental (Druidic)
SP:Create Animal (Druidic)
SP:Create Spring (Druidic)
SP:Dispel Magic (Druidic)
SP:Dry Spring (Druidic)
SP:Frostbite (Druidic)
SP:Hail (Druidic)
SP:Lightning (Druidic)
SP:Plant Form (Druidic)
SP:Sandstorm (Druidic)
SP:Shapeshifting ([Animal]; Druidic)
SP:Storm (Druidic)
SP:Strike Barren (Druidic)
SP:Tide (Druidic)
SP:Wither Plant (Druidic)
SP:Alter Terrain (Druidic)
SP:Arboreal Immurement (Druidic)
SP:Create Earth Elemental (Druidic)
SP:Create Air Elemental (Druidic)
SP:Create Fire Elemental (Druidic)
SP:Create Water Elemental (Druidic)
SP:Entombment (Druidic)
SP:Partial Shapeshifting ([Variation]; Druidic)
SP:Partial Shapeshifting (Chameleon Eyes; Druidic)
SP:Partial Shapeshifting (Crocodile Jaws; Druidic)
SP:Partial Shapeshifting (Elephant Trunk; Druidic)
SP:Partial Shapeshifting (Feathered Arms; Druidic)
SP:Partial Shapeshifting (Fish Tail; Druidic)
SP:Partial Shapeshifting (Mountain Goat Hooves; Druidic)
SP:Partial Shapeshifting (Saber Teeth; Druidic)
SP:Partial Shapeshifting (Scorpion Tail; Druidic)
SP:Partial Shapeshifting (Serpent's Fangs; Druidic)
SP:Partial Shapeshifting (Skunk Tail; Druidic)
SP:Partial Shapeshifting (Spider Arms; Druidic)
SP:Partial Shapeshifting (Tiger Paws; Druidic)
SP:Partial Shapeshifting (Toad Tongue; Druidic)
SP:Partial Shapeshifting (Turtle Shell; Druidic)
SP:Permanent Beast Possession (Druidic)
SP:Permanent Shapeshifting ([Animal]; Druidic)
SP:Plant Form Other (Druidic)
SP:Shapeshift Others ([Animal]; Druidic)
SP:Earthquake (Druidic)
SP:Geyser (Druidic)
SP:Move Terrain (Druidic)
SP:Volcano (Druidic)

<AllSpellsHoly>
SP:Armor (Holy)
SP:Aura (Holy)
SP:Body-Reading (Holy)
SP:Bravery (Holy)
SP:Cleansing (Holy)
SP:Coolness (Holy)
SP:Detect Magic (Holy)
SP:Detect Poison (Holy)
SP:Final Rest (Holy)
SP:Lend Energy (Holy)
SP:Lend Vitality (Holy)
SP:Light (Holy)
SP:Might (Holy)
SP:Minor Healing (Holy)
SP:Purify Air (Holy)
SP:Purify Water (Holy)
SP:Recover Energy (Holy)
SP:Sense Life (Holy)
SP:Sense Spirit (Holy)
SP:Share Vitality (Holy)
SP:Shield (Holy)
SP:Silence (Holy)
SP:Stop Bleeding (Holy)
SP:Test Food (Holy)
SP:Thunderclap (Holy)
SP:Umbrella (Holy)
SP:Vigor (Holy)
SP:Warmth (Holy)
SP:Watchdog (Holy)
SP:Awaken (Holy)
SP:Clean (Holy)
SP:Command (Holy)
SP:Compel Truth (Holy)
SP:Continual Light (Holy)
SP:Create Water (Holy)
SP:Glow (Holy)
SP:Great Voice (Holy)
SP:Healing Slumber (Holy)
SP:Major Healing (Holy)
SP:Peaceful Sleep (Holy)
SP:Persuasion (Holy)
SP:Purify Food (Holy)
SP:Relieve Sickness (Holy)
SP:Remove Contagion (Holy)
SP:Resist Acid (Holy)
SP:Resist Cold (Holy)
SP:Resist Disease (Holy)
SP:Resist Fire (Holy)
SP:Resist Lightning (Holy)
SP:Resist Pain (Holy)
SP:Resist Poison (Holy)
SP:Resist Pressure (Holy)
SP:Restore Hearing (Holy)
SP:Restore Memory (Holy)
SP:Restore Sight (Holy)
SP:Restore Speech (Holy)
SP:Seeker (Holy)
SP:Soilproof (Holy)
SP:Stop Spasm (Holy)
SP:Summon Spirit (Holy)
SP:Truthsayer (Holy)
SP:Turn Spirit (Holy)
SP:Turn Zombie (Holy)
SP:Wall of Light (Holy)
SP:Affect Spirits (Holy)
SP:Astral Vision (Holy)
SP:Breathe Water (Holy)
SP:Command Spirit ([Spirit]; Holy)
SP:Create Food (Holy)
SP:Cure Disease (Holy)
SP:Dispel Possession (Holy)
SP:Flaming Weapon (Holy)
SP:Great Healing (Holy)
SP:Magic Resistance (Holy)
SP:Neutralize Poison (Holy)
SP:Oath (Holy)
SP:Relieve Madness (Holy)
SP:Relieve Paralysis (Holy)
SP:Repel Spirits (Holy)
SP:Restoration (Holy)
SP:See Secrets (Holy)
SP:Silver Tongue (Holy)
SP:Stone to Flesh (Holy)
SP:Stop Paralysis (Holy)
SP:Strengthen Will (Holy)
SP:Sunbolt (Holy)
SP:Sunlight (Holy)
SP:Suspended Animation (Holy)
SP:Water to Wine (Holy)
SP:Wisdom (Holy)
SP:Astral Block (Holy)
SP:Banish (Holy)
SP:Cleansing (Holy)
SP:Continual Sunlight (Holy)
SP:Dispel Magic (Holy)
SP:Divination (Astrology; Holy)
SP:Divination (Augury; Holy)
SP:Divination (Cartomancy; Holy)
SP:Divination (Crystal-Gazing; Holy)
SP:Divination (Dactylomancy; Holy)
SP:Divination (Extispicy; Holy)
SP:Divination (Gastromancy; Holy)
SP:Divination (Geomancy; Holy)
SP:Divination (Lecanomancy; Holy)
SP:Divination (Numerology; Holy)
SP:Divination (Oneiromancy; Holy)
SP:Divination (Physiognomy; Holy)
SP:Divination (Pyromancy; Holy)
SP:Divination (Sortilege; Holy)
SP:Divination (Symbol-Casting; Holy)
SP:Essential Food (Holy)
SP:Gift of Letters (Holy)
SP:Gift of Tongues (Holy)
SP:Instant Neutralize Poison (Holy)
SP:Instant Restoration (Holy)
SP:Monk's Banquet (Holy)
SP:Regeneration (Holy)
SP:Suspend Curse (Holy)
SP:Vigil (Holy)
SP:Bless (Holy)
SP:Curse (Holy)
SP:Earthquake (Holy)
SP:Entrap Spirit (Holy)
SP:Instant Regeneration (Holy)
SP:Pentagram (Holy)
SP:Remove Curse (Holy)
SP:Storm (Holy)
SP:Suspend Mana (Holy)
SP:Bind Spirit ([Spirit]; Holy)
SP:Bind Spirit (Banshees; Holy)
SP:Bind Spirit (Manitous; Holy)
SP:Bind Spirit (Specters; Holy)
SP:Drain Mana (Holy)
SP:Sanctuary (Holy)
SP:Resurrection (Holy)
SP:Planar Summons (Divine Servitor; Holy)

*******************************************************************************************************\[STOP]
[TEMPLATES]
******************************************************************************************************\[START]
<Character Templates, Character Templates - Dungeon Fantasy, Character Templates - Dungeon Fantasy - Adventurers>
Barbarian (Dungeon Fantasy), displaycost(250), cost(0),
	description(You're a beefy warrior from somewhere distant and a little backward - probably the Frozen North. You combine physical grit with a connection to nature second only to that of the druid (p.7).),
	page(DF1:4),
	noresync(yes),
	sets(_
		{ST:ST}=17,
		{ST:DX}=13,
		{ST:IQ}=10,
		{ST:HT}=13,
		{ST:Hit Points}=22,
		{ST:Will}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Perception}=12,
		{ST:Basic Speed}=6.00,
		{ST:Basic Move}=ST:Basic Speed_
	),
	adds(_
		{AD:High Pain Threshold},
		{AD:Outdoorsman}=4,
		{DI:Gigantism},
		{DI:Social Stigma (Minority Group)},
		{SK:Camouflage}=1pts,
		{SK:Navigation (Land)}=2pts,
		{SK:Tracking}=1pts,
		%weapontypesaliaslist%,
		{SK:Brawling}=1pts,
		{SK:Stealth}=2pts,
		{SK:Wrestling}=2pts,
		{SK:Naturalist}=1pts,
		{SK:Swimming}=1pts,
		{SK:Hiking}=1pts,
		{SK:Running}=1pts,
		{SK:Fishing}=1pts,
		{SK:Disguise (Animals)}=2pts,
		{SK:Weather Sense}=2pts,
		{SK:Intimidation}=2pts_
	),
	x(_
			#ChoiceList(_
				name(weapontypes),
				title(Combat specialty),
				text(Choose your melee skill package.),
				picksallowed(1),
				method(bynumber),
		list(_
				"Axe/Mace and Shield",
				"Broadsword and Shield",
				"Spear and Shield",
				"Flail and Shield",
				"Polearm",
				"Spear only",
				"Two-Handed Axe/Mace",
				"Two-Handed Sword",
				"Two-Handed Flail"_
			),
		aliaslist(_
					"{SK:Axe/Mace}=8pts, {SK:Shield (Shield)}=8pts",
					"{SK:Broadsword}=8pts, {SK:Shield (Shield)}=8pts",
					"{SK:Spear}=8pts, {SK:Shield (Shield)}=8pts",
					"{SK:Flail}=8pts, {SK:Shield (Shield)}=8pts",
					"{SK:Polearm}=16pts",
					"{SK:Spear}=16pts",
					"{SK:Two-Handed Axe/Mace}=16pts",
					"{SK:Two-Handed Sword}=16pts",
					"{SK:Two-Handed Flail}=16pts"_
				)_
			)_
	),
	select1(#List(Languages)),
	select2(_
		text(Please select 30 points from the following advantages and perks.),
		tagwith(Barbarian(yes)),
		pointswanted(30),
		itemswanted(atleast 1),
		list(_
			#list(GMAdvantages),
			#list(Barbarian Abilities),
			AD:Extra HT #codes(upto 3, downto 1),
			AD:Extra Perception #codes(upto 6, downto 1),
			AD:Absolute Direction,
			AD:Acute [sense],
			AD:Acute Taste and Smell,
			AD:Acute Touch,
			AD:Acute Vision,
			AD:Acute Hearing,
			PE:Alcohol Tolerance,
			AD:Animal Empathy,
			AD:Animal Friend,
			AD:Combat Reflexes,
			AD:Discriminatory Smell,
			AD:Fearlessness,
			AD:Fit,
			AD:Very Fit,
			AD:Hard to Kill,
			AD:Hard to Subdue,
			AD:Luck #codes(upto 2, downto 1),
			AD:Magic Resistance,
			AD:Rapid Healing,
			AD:Very Rapid Healing,
			AD:Recovery,
			AD:Signature Gear,
			PE:Weapon Bond (%Weapon%),
			AD:Temperature Tolerance #codes(upto 2, downto 1),
			AD:Resistant to Disease #codes(upto 2, downto 1),
			AD:Resistant to Poison #codes(upto 1, downto 1),
			#newitem(AD:Extra ST, 10/20, displaycost(9/18/+), mods(Extra ST, Size, No Fine Manipulators), initmods(Size, -10%, formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15) | Affects displayed ST score, +0%, gives(+Owner::Level to ST:ST), group(Extra ST), description(This modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove this modifier.)),description(The Extra ST advantage allows you to take extra levels of the attribute which you can then apply enhancements and limitations to. The "Affects displayed score" modifier causes the Extra ST advantage to affect the displayed attribute score. If you don't wish this advantage to affect the displayed score remove that modifier.)) #codes(upto 3, downto 1),
			#newitem(AD:Lifting ST, 3/6, gives(+1 to ST:Lifting ST), mods(Lifting ST, No Fine Manipulator, Size), page(B65), cat(Exotic, Physical), initmods(Size, -10%, formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15))) #codes(upto 3, downto 1),
			#newitem(AD:Striking ST, 5/10, displaycost(5/9/+), gives(+1 to ST:Striking ST), mods(Striking ST, No Fine Manipulator, Size), page(B89), cat(Exotic, Physical), initmods(Size, -10%, formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes), group(Size), page(B15))) #codes(upto 2, downto 1)_
		)_
	),
	select3(_
		text("Please select -10 points from the following Disadvantages"),
		tagwith(Barbarian(yes)),
		pointswanted(-10),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Easy to Read,
			DI:Gullibility,
			AD:Language - Native (Written) #codes(upto 0, downto 0),
			DI:Low TL #codes(upto 2, downto 1),
			DI:Odious Personal Habit (Unrefined manners) #codes(upto 1, downto 1),
			DI:Phobia (Machines) #codes(upto 1, downto 1),
			DI:Wealth #codes(upto 1, downto 1)_
		)_
	),
	select4(_
		text("Please select -20 points from the following Disadvantages"),
		tagwith(Barbarian(yes)),
		pointswanted(-20),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Barbarian is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			DI:Easy to Read,
			DI:Gullibility,
			AD:Language - Native (Written) #codes(upto 0, downto 0),
			DI:Low TL #codes(upto 2, downto 1),
			DI:Odious Personal Habit (Unrefined manners) #codes(upto 1, downto 1),
			DI:Phobia (Machines) #codes(upto 1, downto 1),
			DI:Wealth #codes(upto 1, downto 1),
			DI:Appearance #codes(upto 2, downto 1),
			DI:Bad Temper,
			DI:Berserk,
			DI:Bloodlust,
			DI:Compulsive Carousing,
			DI:Phobia (Crowds) #codes(upto 3, downto 3),
			DI:Gluttony,
			DI:Ham-Fisted #codes(upto 2, downto 1),
			QU:Horrible Hangovers,
			DI:Impulsiveness,
			DI:Overconfidence,
			DI:Sense of Duty (Adventuring companions) #codes(upto 2, downto 2)_
		)_
	),
	select5(_
		text("Please select a ranged weapon skill."),
		tagwith(Barbarian(yes)),
		pointswanted(4),
		itemswanted(1),
		list(_
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Harpoon) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Stick) #codes(upto 4pts, downto 4pts),
			SK:Bolas #codes(upto 4pts, downto 4pts),
			SK:Bow #codes(upto 4pts, downto 4pts),
			SK:Spear Thrower #codes(upto 4pts, downto 4pts),
			SK:Throwing #codes(upto 4pts, downto 4pts)_
		)_
	),
	select6(_
		text("Please select a Mimicry skill"),
		tagwith(Barbarian(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts)_
		)_
	),
	select7(_
		text("Please select an Animal Handling skill"),
		tagwith(Barbarian(yes)),
		pointswanted(2),
		itemswanted(1),
		list(_
			SK:Animal Handling #codes(upto 2pts, downto 2pts),
			SK:Animal Handling (Big Cats) #codes(upto 2pts, downto 2pts),
			SK:Animal Handling (Dogs) #codes(upto 2pts, downto 2pts),
			SK:Animal Handling (Equines) #codes(upto 2pts, downto 2pts),
			SK:Animal Handling (Raptors) #codes(upto 2pts, downto 2pts)_
		)_
	),
	select8(_
		text("Please select a Survival specialty."),
		tagwith(Barbarian(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select9(_
		text("Please select four of the following background skills"),
		tagwith(Barbarian(yes)),
		pointswanted(4),
		itemswanted(4),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Forced Entry #codes(upto 1pts),
			SK:Climbing #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Seamanship #codes(upto 1pts),
			SK:Carousing #codes(upto 1pts),
			SK:Lifting #codes(upto 1pts),
			SK:Skiing #codes(upto 1pts),
			SK:Observation #codes(upto 1pts)_
		)_
	),
	select10(#List(QuirkSelection))

Bard (Dungeon Fantasy), displaycost(250), cost(0),
	description(You're a magical minstrel who dabbles in a little of everything: the roguish pursuits of the thief (p.12), the wordplay of the swashbuckler (p.11), and the spellcraft of the wizard (p.13).),
	page(DF1:5),
	noresync(yes),
	sets(_
		{ST:ST}=11,
		{ST:DX}=12,
		{ST:IQ}=14,
		{ST:HT}=11,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=6.0,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	needs(_
	20 Spells_
		),
	adds(_
		{AD:Bardic Talent}=2,
		{AD:Charisma}=1,
		{AD:Musical Ability}=2,
		{AD:Voice},
		{SK:Acting}=2pts,
		{SK:Diplomacy}=1pts,
		{SK:Fast-Talk}=1pts,
		{SK:Musical Instrument}=2pts,
		{SK:Singing}=1pts,
		{SK:Performance}=1pts,
		{SK:Public Speaking}=1pts,
		{SK:Stealth}=2pts,
		{SK:Savoir-Faire (High Society)}=1pts,
		{SK:Interrogation}=1pts,
		{SK:Merchant}=1pts,
		{SK:Propaganda}=1pts,
		{SK:Streetwise}=1pts,
		{SK:Musical Composition}=1pts,
		{SK:Carousing}=1pts,
		{SK:Intimidation}=1pts,
		{SK:Detect Lies}=1pts,
		{SK:Heraldry}=1pts,
		{SK:Poetry}=1pts,
		%WeaponTypesAliasList%_
	),
	x(_
			#ChoiceList(_
				name(weapontypes),
				title(Combat Style),
				text(Choose your melee skill package.),
				picksallowed(1),
				method(bynumber),
		list(_
				"Smallsword@DX+3",
				"Shortsword@DX+3",
				"Saber@DX+3",
				"Rapier@DX+3",
				"Smallsword@DX+2 and Shield (Buckler)@DX+2",
				"Shortsword@DX+2 and Shield (Buckler)@DX+2",
				"Saber@DX+2 and Shield (Buckler)@DX+2",
				"Rapier@DX+2 and Shield (Buckler)@DX+2",
				"Smallsword@DX+2 and Main-Gauche@DX+1",
				"Shortsword@DX+2 and Main-Gauche@DX+1",
				"Saber@DX+2 and Main-Gauche@DX+1",
				"Rapier@DX+2 and Main-Gauche@DX+1",
				"Smallsword@DX+2 and Cloak@DX+1",
				"Shortsword@DX+2 and Cloak@DX+1",
				"Saber@DX+2 and Cloak@DX+1",
				"Rapier@DX+2 and Cloak@DX+1"_
			),
		aliaslist(_
					"{SK:Smallsword}=12pts",
					"{SK:Shortsword}=12pts",
					"{SK:Saber}=12pts",
					"{SK:Rapier}=12pts",
					"{SK:Smallsword}=8pts, {SK:Shield (Buckler)}=4pts",
					"{SK:Shortsword}=8pts, {SK:Shield (Buckler)}=4pts",
					"{SK:Saber}=8pts, {SK:Shield (Buckler)}=4pts",
					"{SK:Rapier}=8pts, {SK:Shield (Buckler)}=4pts",
					"{SK:Smallsword}=8pts, {SK:Main-Gauche}=4pts",
					"{SK:Shortsword}=8pts, {SK:Main-Gauche}=4pts",
					"{SK:Saber}=8pts, {SK:Main-Gauche}=4pts",
					"{SK:Rapier}=8pts, {SK:Main-Gauche}=4pts",
					"{SK:Smallsword}=8pts, {SK:Cloak}=4pts",
					"{SK:Shortsword}=8pts, {SK:Cloak}=4pts",
					"{SK:Saber}=8pts, {SK:Cloak}=4pts",
					"{SK:Rapier}=8pts, {SK:Cloak}=4pts"_
				)_
			)_
	),
	select1(#List(Languages)),
	select2(_
		text("Please select 25 points of Bardic abilities"),
		tagwith(Bard(yes)),
		pointswanted(atleast 20, upto 25),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	),
	select3(_
		text("Please select a further 25 points of advantages."),
		tagwith(Bard(yes)),
		pointswanted(25),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Advantages where Bard is "Yes", template(#newitem(AD:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(AD:%ListItem%)))),
			#list(GMAdvantages),
			#list(Bard Abilities),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra Fatigue Points #codes(upto 8, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 4),
			AD:Acute Hearing,
			AD:Appearance,
			AD:Bardic Talent #codes(upto 4, downto 3),
			AD:Charisma #codes(upto 6, downto 2),
			AD:Eidetic Memory,
			AD:Photographic Memory,
			PE:Honest Face,
			AD:Language Talent,
			AD:Language,
			AD:Language (Written),
			AD:Language (Spoken),
			AD:Luck,
			PE:No Hangover,
			PE:Penetrating Voice,
			AD:Signature Gear,
			AD:Smooth Operator #codes(upto 1, downto 1),
			AD:Wealth #codes(upto 2),
			AD:Wild Talent #codes(upto 1, downto 1),
			#newitem(AD:_Improve Musical Ability, 5/10, existing(AD:Musical Ability)) #codes(upto 4, downto 3)_
		)_
	),
	select4(_
		text("Please select -15 points of Disadvantages."),
		tagwith(Bard(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Chummy,
			DI:Gregarious,
			DI:Compulsive Carousing,
			DI:Lecherousness,
			DI:Sense of Duty (Adventuring companions) #codes(upto 2, downto 2),
			DI:Xenophilia_
		)_
	),
	select5(_
		text("Please select a further -15 points of Disadvantages"),
		tagwith(Bard(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Bard is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Curious,
			DI:Impulsiveness,
			DI:Overconfidence,
			DI:Trickster_
		)_
	),
	select6(_
		text("Please select a further -20 points of Disadvantages"),
		tagwith(Bard(yes)),
		pointswanted(-20),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Bard is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Chummy,
			DI:Gregarious,
			DI:Compulsive Carousing,
			DI:Lecherousness,
			DI:Sense of Duty (Adventuring companions) #codes(upto 2, downto 2),
			DI:Xenophilia,
			DI:Curious,
			DI:Impulsiveness,
			DI:Overconfidence,
			DI:Trickster,
			DI:Code of Honor (Gentleman's),
			DI:Compulsive Lying,
			DI:Odious Personal Habit (Continuous singing or strumming),
			DI:Post-Combat Shakes_
		)_
	),
	select7(_
		text("Please select a ranged weapon skill"),
		itemswanted(1),
		tagwith(Bard(yes)),
		pointswanted(2),
		list(_
			SK:Bow #codes(upto 2pts, downto 2pts),
			SK:Thrown Weapon (Knife) #codes(upto 2pts, downto 2pts),
			SK:Throwing #codes(upto 2pts, downto 2pts)_
		)_
	),
	select8(_
		text("Please select a current affairs specialty"),
		itemswanted(1),
		tagwith(Bard(yes)),
		pointswanted(1),
		list(_
			SK:Current Affairs ([Regional]) #codes(upto 1pts),
			SK:Current Affairs (Business) #codes(upto 1pts),
			SK:Current Affairs (Headline News) #codes(upto 1pts),
			SK:Current Affairs (High Culture) #codes(upto 1pts),
			SK:Current Affairs (People) #codes(upto 1pts),
			SK:Current Affairs (Politics) #codes(upto 1pts),
			SK:Current Affairs (Popular Culture) #codes(upto 1pts),
			SK:Current Affairs (Science & Technology) #codes(upto 1pts),
			SK:Current Affairs (Sports) #codes(upto 1pts),
			SK:Current Affairs (Travel) #codes(upto 1pts)_
		)_
	),
	select9(_
		text("Please select six of the following background skills"),
		itemswanted(6),
		tagwith(Bard(yes)),
		pointswanted(6),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Climbing #codes(upto 1pts),
			SK:Dancing #codes(upto 1pts),
			SK:Acrobatics #codes(upto 1pts),
			SK:Sleight of Hand #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Connoisseur #codes(upto 1pts),
			SK:Connoisseur (Dance) #codes(upto 1pts),
			SK:Connoisseur (Literature) #codes(upto 1pts),
			SK:Connoisseur (Music) #codes(upto 1pts),
			SK:Connoisseur (Visual Arts) #codes(upto 1pts),
			SK:Connoisseur (Wine) #codes(upto 1pts),
			SK:Disguise #codes(upto 1pts),
			SK:Teaching #codes(upto 1pts),
			SK:Writing #codes(upto 1pts),
			SK:Mimicry (Speech) #codes(upto 1pts),
			SK:Ventriloquism #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Sex Appeal #codes(upto 1pts),
			SK:Scrounging #codes(upto 1pts),
			SK:Observation #codes(upto 1pts)_
		)_
	),
	select10(_
		text("Choose a Fast-Draw specialty."),
		itemswanted(1),
		tagwith(Bard(yes)),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Fast-Draw #codes(upto 1pts),
			SK:Fast-Draw (Arrow) #codes(upto 1pts),
			SK:Fast-Draw (Knife) #codes(upto 1pts),
			SK:Fast-Draw (Sword) #codes(upto 1pts),
			SK:Fast-Draw (Two-Handed Sword)#codes(upto 1pts) _
		)_
	),
	select11(_
		text("Please select 20 points of bardic spells, or add 20 spells from Communication & Empathy or Mind Control college later."),
		tagwith(Bard(yes)),
		pointswanted(atleast 0, upto 20),
		itemswanted(atleast 0, upto 20),
		list(_
			#list(Bard Spells)_
		)_
	),
	select12(#List(QuirkSelection))

Cleric (Dungeon Fantasy), displaycost(250), cost(0),
	description(You're the mortal representative of the Powers of Good. You might not be the physical foe of Evil that is the holy warrior (p.7), but you're no cloistered idealist...),
	page(DF1:6),
	noresync(yes),
	sets(_
		{ST:ST}=12,
		{ST:DX}=12,
		{ST:IQ}=14,
		{ST:HT}=12,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=6.0,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	adds(_
		{SK:Theology ([Religion])}=1pts,
		{SK:Religious Ritual ([Religion])}=1pts,
		{SK:Surgery ([Race])}=2pts,
		{SK:First Aid ([Race])}=1pts,
		{SK:Diagnosis ([Race])}=1pts,
		{AD:Clerical Investment},
		{AD:Power Investiture (Holy)}=3,
		{SK:Esoteric Medicine (Holy)}=4pts,
		{SK:Exorcism}=4pts,
		{SK:Occultism}=1pts,
		{SK:Public Speaking}=1pts,
		{SK:Teaching}=1pts,
		%weapontypesaliaslist%,
		%spellsaliaslist%_
	),
	needs(20 Spells), ident(Holy),
	x(_
			#InputReplace("Please enter the name of your Religion:", "[Religion]", , "Theology/Religious Ritual"),
			#InputReplace("You must specialize by species - Physiology Modifiers apply (p. B181):", "[Race]", "Human", "First Aid/Diagnosis/Surgery"),
			#ChoiceList(_
				name(spells),
				title(Spell Lists),
				text(You may choose one of the following Cleric spell packages, or you may add 20 points in Cleric spells later:),
				picksallowed(1),
				method(bynumber),
				default(1),
				list(_
						#List(Cleric Spell List)_
					),
				aliaslist(_
						#List(Cleric Spell AliasList)_
						),
				alt1list(_
						#List(Cleric Spell Alt1List)_
						)_
					),
		#ChoiceList(_
				name(weapontypes),
				title(Combat specialty),
				text(Choose your melee skill package.),
				picksallowed(1),
				method(bynumber),
				list(_
						"Axe/Mace and Shield",
						"Broadsword and Shield",
						"Flail and Shield",
						"Staff" _
				),
				aliaslist(_
						"{SK:Axe/Mace}=8pts, {SK:Shield (Shield)}=4pts",
						"{SK:Broadsword}=8pts, {SK:Shield (Shield)}=4pts",
						"{SK:Flail}=8pts, {SK:Shield (Shield)}=4pts",
						"{SK:Staff}=12pts"_
					)_
				)_
	),
	select1(#List(Languages)),
	select2(_
		text("Please select 25 points in Holy abilities."),
		tagwith(Cleric(yes)),
		pointswanted(25),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#newitem(AD:_Power Investiture 4-5 (Holy), 10/20, existing(AD:Power Investiture (Holy))) #codes(upto 5, downto 4),
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	),
	select3(_
		text("Please select a further 20 points in abilities."),
		tagwith(Cleric(yes)),
		pointswanted(20),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Advantages where Cleric is "Yes", template(#newitem(AD:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(AD:%ListItem%)))),
			#list(GMAdvantages),
			#list(Holy Abilities),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Will #codes(upto 4, downto 1),
			AD:Extra Fatigue Points #codes(upto 6, downto 1),
			AD:Fearlessness,
			AD:Unfazeable,
			AD:Healer #codes(upto 2, downto 1),
			AD:Language,
			AD:Language (Spoken),
			AD:Language (Written),
			AD:Luck,
			AD:Mind Shield,
			#newitem(AD:_Power Investiture 4-6 (Holy), 10/20, existing(AD:Power Investiture (Holy))) #codes(upto 6, downto 4),
			AD:Resistant to Disease #codes(upto 2, downto 1),
			AD:Signature Gear_
		)_
	),
	select4(_
		text("Please select a 'Good' disadvantage."),
		tagwith(Cleric(yes)),
		pointswanted(-10),
		itemswanted(1),
		list(_
			#list(GMDisadvantages),
			DI:Honesty,
			DI:Sense of Duty (Coreligionists),
			DI:Vow (No edged weapons)_
		)_
	),
	select5(_
		text("Please select -15 points from the following disadvantages."),
		tagwith(Cleric(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Honesty,
			DI:Sense of Duty (Coreligionists),
			DI:Vow (No edged weapons),
			DI:Discipline of Faith (Mysticism),
			DI:Discipline of Faith (Ritualism),
			DI:Fanaticism #codes(upto 1, downto 1),
			DI:Intolerance ("Evil" religions),
			DI:Intolerance (All other religions),
			DI:Vow (Vegetarianism),
			DI:Vow (Chastity),
			DI:Wealth #codes(upto 2, downto 1)_
		)_
	),
	select6(_
		text("Please select a further -25 points from the following disadvantages."),
		tagwith(Cleric(yes)),
		pointswanted(-25),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Cleric is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Honesty,
			DI:Sense of Duty (Coreligionists),
			DI:Vow (No edged weapons),
			DI:Discipline of Faith (Mysticism),
			DI:Discipline of Faith (Ritualism),
			DI:Fanaticism #codes(upto 1, downto 1),
			DI:Intolerance ("Evil" religions),
			DI:Intolerance (All other religions),
			DI:Vow (Vegetarianism),
			DI:Vow (Chastity),
			DI:Wealth #codes(upto 2, downto 1),
			DI:Charitable,
			DI:Compulsive Generosity,
			DI:Miserliness,
			DI:Gluttony,
			DI:Overconfidence,
			DI:Overweight,
			DI:Fat,
			DI:Selfless,
			DI:Sense of Duty (Adventuring companions),
			DI:Stubbornness,
			DI:Truthfulness,
			DI:Weirdness Magnet_
		)_
	),
	select7(_
		text("Please select a ranged attack skill"),
		tagwith(Cleric(yes)),
		pointswanted(4),
		itemswanted(1),
		list(_
			SK:Innate Attack (Beam) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Breath) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Gaze) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Projectile) #codes(upto 4pts, downto 4pts),
			SK:Throwing #codes(upto 4pts, downto 4pts),
			SK:Sling #codes(upto 4pts, downto 4pts)_
		)_
	),
	select8(_
		text("Pick a Hidden Lore specialty"),
		tagwith(Cleric(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 1pts),
			SK:Hidden Lore (Spirit Lore) #codes(upto 1pts)_
		)_
	),
	select9(_
		text("Please select five background skills"),
		tagwith(Cleric(yes)),
		pointswanted(5),
		itemswanted(5),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Climbing #codes(upto 1pts),
			SK:Stealth #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Panhandling #codes(upto 1pts),
			SK:Savoir-Faire (High Society) #codes(upto 1pts),
			SK:Research #codes(upto 1pts),
			SK:Writing #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Scrounging #codes(upto 1pts),
			SK:Observation #codes(upto 1pts),
			SK:Search #codes(upto 1pts)_
		)_
	),
	select10(%spellsalt1list%#List(QuirkSelection))

Druid (Dungeon Fantasy), displaycost(250), cost(0),
	description(Your friends call you a "nature priest" but you're dedicated to Life above all.),
	page(DF1:6),
	noresync(yes),
	sets(_
		{ST:ST}=11,
		{ST:DX}=12,
		{ST:IQ}=14,
		{ST:HT}=13,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=6.00,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	adds(_
		{AD:Power Investiture (Druidic)}=3,
		{AD:Green Thumb}=1,
		{SK:Esoteric Medicine (Druidic)}=4pts,
		{SK:Herb Lore}=4pts,
		{SK:Naturalist}=2pts,
		{SK:Camouflage}=1pts,
		{SK:Disguise (Animals)}=1pts,
		{SK:Weather Sense}=1pts,
		{SK:Pharmacy (Herbal)}=1pts,
		{SK:Religious Ritual (Druidic)}=1pts,
		{SK:Theology (Druidic)}=1pts,
		{SK:Veterinary}=1pts,
		{SK:Climbing}=2pts,
		{SK:Stealth}=2pts,
		%weapontypesaliaslist%,
		%spellsaliaslist%_
	),
	needs(20 Spells), ident(Druidic),
	x(_
			#ChoiceList(_
				name(spells),
				title(Spell Lists),
				text(You may choose one of the following Druidic spell packages, or you may add 20 points in Druidic spells later:),
				picksallowed(1),
				method(bynumber),
				default(1),
				list(_
						#List(Druid Spell List)_
					),
					aliaslist(_
						#List(Druid Spell AliasList)_
					),
					alt1list(_
						#List(Druid Spell Alt1List)_
						)_
					),
			#ChoiceList(_
				name(weapontypes),
				title(Combat specialty),
				text(Choose your melee skill package.),
				picksallowed(1),
				method(bynumber),
				list(_
						"Axe/Mace and Shield",
						"Broadsword and Shield",
						"Spear and Shield",
						"Shortsword and Shield",
						"Spear only",
						"Staff only" _
					),
				aliaslist(_
						"{SK:Axe/Mace}=8pts, {SK:Shield (Shield)}=4pts",
						"{SK:Broadsword}=8pts, {SK:Shield (Shield)}=4pts",
						"{SK:Spear}=8pts, {SK:Shield (Shield)}=4pts",
						"{SK:Shortsword}=8pts, {SK:Shield (Shield)}=4pts",
						"{SK:Spear}=12pts",
						"{SK:Staff}=12pts"_
					)_
			)_
	),
	select1(#List(Languages)),
	select2(_
		text("Pick 20 points in Druidic abilities (p. 22); put leftovers into spells."),
		tagwith(Druid(yes)),
		pointswanted(20),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#newitem(AD:_Power Investiture 4-5 (Druidic), 10/20, existing(AD:Power Investiture (Druidic))) #codes(upto 5, downto 4),
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	),
	select3(_
		text("Pick a further 20 points chosen from additional Druidic abilities or the following advantages."),
		tagwith(Druid(yes)),
		pointswanted(20),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Advantages where Druid is "Yes", template(#newitem(AD:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(AD:%ListItem%)))),
			#list(GMAdvantages),
			#list(Druid Abilities),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Perception #codes(upto 4, downto 1),
			AD:Animal Friend #codes(upto 4, downto 1),
			AD:Extra Green Thumb #codes(upto 3, downto 1),
			AD:Healer #codes(upto 2, downto 1),
			AD:Luck #codes(upto 1, downto 1),
			AD:Intuition,
			AD:Mind Shield #codes(upto 5, downto 1),
			AD:Outdoorsman #codes(upto 2, downto 1),
			#newitem(AD:_Power Investiture 4-6 (Druidic), 10/20, existing(AD:Power Investiture (Druidic))) #codes(upto 6, downto 4),
			AD:Resistant to Disease #codes(upto 2, downto 1),
			AD:Signature Gear #codes(upto 20),
			AD:Spirit Empathy_
		)_
	),
	select4(_
		text("Please select -20 points from the following disadvantages."),
		tagwith(Druid(yes)),
		pointswanted(-20),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Discipline of Faith (Ritualism),
			DI:Discipline of Faith (Mysticism),
			DI:Sense of Duty (Nature),
			DI:Vow (Vegetarianism),
			DI:Vow (Never sleep indoors),
			DI:Wealth #codes(upto 2, downto 1)_
		)_
	),
	select5(_
		text("Please select -25 points from the following disadvantages."),
		tagwith(Druid(yes)),
		pointswanted(-25),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Druid is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Discipline of Faith (Ritualism),
			DI:Discipline of Faith (Mysticism),
			DI:Sense of Duty (Nature),
			DI:Vow (Vegetarianism),
			DI:Vow (Never sleep indoors),
			DI:Wealth #codes(upto 2, downto 1),
			DI:Intolerance (Urbanites),
			DI:Loner,
			DI:No Sense of Humor,
			DI:Odious Personal Habit ("Dirty Hippy"),
			DI:Overconfidence,
			DI:Phobia (Crowds),
			DI:Phobia (Fire),
			DI:Phobia (Machines),
			DI:Stubbornness,
			DI:Weirdness Magnet_
		)_
	),
	select6(_
		text("Please select a ranged weapon skill"),
		tagwith(Druid(yes)),
		pointswanted(4),
		itemswanted(1),
		list(_
			SK:Innate Attack (Beam) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Breath) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Gaze) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Projectile) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Stick) #codes(upto 4pts, downto 4pts),
			SK:Throwing #codes(upto 4pts, downto 4pts),
			SK:Bolas #codes(upto 4pts, downto 4pts),
			SK:Lasso #codes(upto 4pts, downto 4pts),
			SK:Blowpipe #codes(upto 4pts, downto 4pts),
			SK:Net #codes(upto 4pts, downto 4pts),
			SK:Sling #codes(upto 4pts, downto 4pts)_
		)_
	),
	select7(_
		text("Please select a Animal Handling specialty."),
		tagwith(Druid(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts)_
		)_
	),
	select8(_
		text("Please select a Hidden Lore specialty."),
		tagwith(Druid(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Elemental Lore) #codes(upto 1pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 1pts),
			SK:Hidden Lore (Nature Spirit Lore) #codes(upto 1pts)_
		)_
	),
	select9(_
		text("Please pick between Mimicry specialties"),
		tagwith(Druid(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts)_
		)_
	),
	select10(_
		text("Please select a Survival specialty."),
		tagwith(Druid(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select11(_
		text("Please select three of the following background skills"),
		tagwith(Druid(yes)),
		pointswanted(3),
		itemswanted(3),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Knife #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Animal Handling #codes(upto 1pts),
			SK:Hidden Lore #codes(upto 1pts),
			SK:Teaching #codes(upto 1pts),
			SK:Diagnosis #codes(upto 1pts),
			SK:Poisons #codes(upto 1pts),
			SK:Observation #codes(upto 1pts)_
		)_
	),
	select12(%SpellsAlt1List%#List(QuirkSelection))

Holy Warrior (Dungeon Fantasy), displaycost(250), cost(0),
	description(You fight for what's right - and the gods have your back.),
	page(DF1:7),
	noresync(yes),
	sets(_
		{ST:ST}=13,
		{ST:DX}=13,
		{ST:IQ}=12,
		{ST:HT}=13,
		{ST:Will}=14,
		{ST:Hit Points}=ST:ST,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=6.00,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	adds(_
		{AD:Born War-Leader}=1,
		{AD:Holiness}=2,
		{SK:Exorcism}=4pts,
		{SK:Brawling}=2pts,
		{SK:Wrestling}=4pts,
		{SK:Leadership}=1pts,
		{SK:Strategy}=2pts,
		{SK:Tactics}=2pts,
		{SK:Intimidation}=1pts,
		{SK:Religious Ritual}=1pts,
		{SK:Theology}=1pts,
		{SK:Meditation}=1pts,
		%weapontypesaliaslist%,
		{SK:Esoteric Medicine}=1pts_
	),
	creates(_
				"PE:Foes slain personally can't rise as undead, 1, page(B100)",
				"SK:Physiology ([Primary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology"))"=4pts,
				"SK:Psychology ([Primary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology"))"=4pts_
	),
	x(_
			#ChoiceList(_
				name(weapontypes),
				title(Combat specialty),
				text(Choose your melee skill package.),
				picksallowed(1),
				method(bynumber),
		list(_
				"Axe/Mace and Shield",
				"Broadsword and Shield",
				"Spear and Shield",
				"Flail and Shield",
				"Polearm",
				"Spear only",
				"Two-Handed Axe/Mace",
				"Two-Handed Sword",
				"Two-Handed Flail"_
	),
	aliaslist(_
				"{SK:Axe/Mace}=12pts, {SK:Shield (Shield)}=8pts",
				"{SK:Broadsword}=12pts, {SK:Shield (Shield)}=8pts",
				"{SK:Spear}=12pts, {SK:Shield (Shield)}=8pts",
				"{SK:Flail}=12pts, {SK:Shield (Shield)}=8pts",
				"{SK:Polearm}=20pts",
				"{SK:Spear}=20pts",
				"{SK:Two-Handed Axe/Mace}=20pts",
				"{SK:Two-Handed Sword}=20pts",
				"{SK:Two-Handed Flail}=20pts"_
			)_
		)_
	),
	select1(#List(Languages)),
	select2(_
		text("Select a Higher Purpose."),
		tagwith(HolyWarrior(yes)),
		pointswanted(5),
		itemswanted(1),
		list(_
			#newitem( AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(3), page(B59), cat(Supernatural, Mental) ),
			#newitem( AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(3), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select3(_
		text("Please select at least 25 points from Holy abilities. Leftovers may be spent on mundane advantages."),
		tagwith(HolyWarrior(yes)),
		pointswanted(50),
		itemswanted(atleast 1),
		list(_
			#list(GMAdvantages),
			#list(Holy Abilities),
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			AD:Luck,
			AD:Rapid Healing,
			AD:Recovery,
			AD:Signature Gear,
			AD:Unfazeable,
			AD:Enhanced Block #codes(upto 1, downto 1),
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 1, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Hit Points #codes(upto 3, downto 1),
			AD:Extra Will #codes(upto 5, downto 1),
			AD:Fearlessness #codes(upto 7, downto 1),
			AD:Hard to Kill #codes(upto 5, downto 1),
			AD:Hard to Subdue #codes(upto 5, downto 1),
			AD:Magic Resistance #codes(upto 12, downto 1),
			AD:Striking ST #codes(upto 2, downto 1),
			AD:Resistant to Disease #codes(upto 1, downto 1),
			AD:Resistant to Poison #codes(upto 1, downto 1),
			PE:Weapon Bond (%Weapon%),
			#newitem(AD:_Improve Born War-Leader, 5/10, existing(AD:Born War-Leader)) #codes(upto 4, downto 2),
			#newitem(AD:_Improve Holiness, 5/10, existing(AD:Holiness)) #codes(upto 4, downto 3),
			#newitem(_
				AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(3), page(B59), cat(Supernatural, Mental)_
			),
			#newitem(_
				AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(3), page(B59), cat(Supernatural, Mental)_
			)_
		)_
	),
	select4(_
		text("Select one of these disadvantages."),
		tagwith(HolyWarrior(yes)),
		pointswanted(-10),
		itemswanted(1),
		list(_
			#list(GMDisadvantages),
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select5(_
		text("Please select -15 points from the following disadvantages."),
		tagwith(HolyWarrior(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Charitable,
			DI:Compulsive Generosity,
			DI:Compulsive Vowing,
			DI:Discipline of Faith (Ritualism),
			DI:Discipline of Faith (Mysticism),
			DI:Fanaticism,
			DI:Selfless,
			DI:Truthfulness,
			DI:Intolerance ("Evil" religions),
			DI:Intolerance (All other religions),
			DI:Vow (Chastity) _
		)_
	),
	select6(_
		text("Please select another -15 points from these disadvantages."),
		tagwith(HolyWarrior(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where HolyWarrior is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Bloodlust,
			DI:Charitable,
			DI:Code of Honor (Chivalry),
			DI:Compulsive Generosity,
			DI:Compulsive Vowing,
			DI:Discipline of Faith (Ritualism),
			DI:Discipline of Faith (Mysticism),
			DI:Easy to Read,
			DI:Fanaticism,
			DI:No Sense of Humor,
			DI:Overconfidence,
			DI:Selfless,
			DI:Sense of Duty (Adventuring companions),
			DI:Stubbornness,
			DI:Truthfulness,
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry),
			DI:Intolerance ("Evil" religions),
			DI:Intolerance (All other religions), _
			DI:Vow (Chastity) _
		)_
	),
	select7(_
		text("Select a form of Hidden Lore."),
		tagwith(HolyWarrior(yes)),
		pointswanted(2),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 2pts, downto 2pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 2pts, downto 2pts)_
		)_
	),
	select8(_
		text("Select a ranged combat skill."),
		tagwith(HolyWarrior(yes)),
		pointswanted(4),
		itemswanted(1),
		list(_
			SK:Crossbow #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts),
			SK:Throwing #codes(upto 4pts, downto 4pts)_
		)_
	),
	select9(_
		text("Please select 5 background skills."),
		tagwith(HolyWarrior(yes)),
		pointswanted(5),
		itemswanted(5),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Fast-Draw #codes(upto 1pts),
			SK:Fast-Draw (Arrow) #codes(upto 1pts),
			SK:Fast-Draw (Balisong) #codes(upto 1pts),
			SK:Fast-Draw (Flexible) #codes(upto 1pts),
			SK:Fast-Draw (Knife) #codes(upto 1pts),
			SK:Fast-Draw (Shuriken) #codes(upto 1pts),
			SK:Fast-Draw (Stone) #codes(upto 1pts),
			SK:Fast-Draw (Sword) #codes(upto 1pts),
			SK:Fast-Draw (Tonfa) #codes(upto 1pts),
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),
			SK:Climbing #codes(upto 1pts),
			SK:Lance #codes(upto 1pts),
			SK:Stealth #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Interrogation #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Observation #codes(upto 1pts),
			#newitem(_
				SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences), x(#InputReplace({Please specify a monster type:}, {[Secondary Monster Type]}, {monster}, {Physiology}))#codes(upto 1pts)_
			),
			#newitem(_
				SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities), x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts)_
			),
			#newitem(_
				SK:Riding (Equines), DX/A, default(DX - 5, SK:Animal Handling - 3, SK:Riding - 10), page(B217), cat(_General, Animal) #codes(upto 1pts)_
			)_
		)_
	),
	select10(#List(QuirkSelection))

Knight (Dungeon Fantasy), displaycost(250), cost(0),
	description(Officially, you might not be a knight, but you're more dedicated than some fop living in a castle.),
	page(DF1:8),
	noresync(yes),
	sets(_
		{ST:ST}=14,
		{ST:DX}=14,
		{ST:IQ}=10,
		{ST:HT}=13,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=6.00,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	adds(_
		{AD:Born War-Leader}=2,
		{AD:Combat Reflexes},
		{AD:High Pain Threshold},
		{SK:Knife}=1pts,
		{SK:Leadership}=1pts,
		{SK:Shield (Shield)}=4pts,
		{SK:Connoisseur (Weapons)}=4pts,
		{SK:Strategy}=2pts,
		{SK:Tactics}=2pts_
	),
	select1(#List(Languages)),
	select2(_
		text("Select 60 points from the following advantages. Additional Born War-Leader should be deleted and replaced with an appropriate level of Born War-Leader."),
		tagwith(Knight(yes)),
		pointswanted(60),
		itemswanted(atleast 1),
		list(_
			#list(GMAdvantages),
			#list(Knight Abilities),
			PE:Alcohol Tolerance,
			PE:Penetrating Voice,
			PE:Weapon Bond (%Weapon%),
			AD:Fit,
			AD:Rapid Healing,
			AD:Recovery,
			AD:Signature Gear,
			AD:Very Fit,
			AD:Extra ST #codes(upto 6, downto 1),
			AD:Extra DX #codes(upto 3, downto 1),
			AD:Extra HT #codes(upto 6, downto 1),
			AD:Extra Hit Points #codes(upto 5, downto 1),
			AD:Extra Basic Speed #codes(upto 8, downto 1),
			AD:Enhanced Block #codes(upto 1, downto 1),
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 1, downto 1),
			AD:Fearlessness #codes(upto 5, downto 1),
			AD:Hard to Kill #codes(upto 5, downto 1),
			AD:Hard to Subdue #codes(upto 5, downto 1),
			AD:Luck #codes(upto 2, downto 1),
			AD:Striking ST #codes(upto 2, downto 1),
			AD:Weapon Master #codes(upto 6, downto 1),
			#newitem(AD:_Improve Born War-Leader, 5/10, existing(AD:Born War-Leader)) #codes(upto 4, downto 3)_
		)_
	),
	select3(_
		text("Please select -20 points from these disadvantages."),
		tagwith(Knight(yes)),
		pointswanted(-20),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Bad Temper,
			DI:Bloodlust,
			DI:Code of Honor (Pirate's),
			DI:Code of Honor (Soldier's),
			DI:Code of Honor (Chivalry),
			DI:One Eye,
			DI:Wounded,
			DI:Obsession (Slay a specific type of monster),
			DI:Sense of Duty (Nation),
			DI:Vow (Never refuse a challenge to combat) _
		)_
	),
	select4(_
		text("Select an additional -15 points from these disadvantages."),
		tagwith(Knight(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Knight is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Bad Temper,
			DI:Bully,
			DI:Bloodlust,
			DI:Code of Honor (Pirate's),
			DI:Code of Honor (Soldier's),
			DI:Code of Honor (Chivalry),
			DI:Compulsive Carousing,
			DI:Greed,
			DI:Honesty,
			DI:Lecherousness,
			DI:One Eye,
			DI:Overconfidence,
			DI:Sense of Duty (Adventuring companions),
			DI:Wounded,
			DI:Obsession (Slay a specific type of monster),
			DI:Sense of Duty (Nation),
			DI:Vow (Never refuse a challenge to combat) _
		)_
	),
	select5(_
		text("Please select an unarmed striking skill."),
		tagwith(Knight(yes)),
		pointswanted(2),
		itemswanted(1),
		list(_
			SK:Brawling #codes(upto 2pts, downto 2pts),
			SK:Boxing #codes(upto 2pts, downto 2pts)_
		)_
	),
	select6(_
		text("Please select an unarmed grappling skill."),
		tagwith(Knight(yes)),
		pointswanted(2),
		itemswanted(1),
		list(_
			SK:Sumo Wrestling #codes(upto 2pts, downto 2pts),
			SK:Wrestling #codes(upto 2pts, downto 2pts)_
		)_
	),
	select7(_
		text("Please select a ranged combat skill."),
		tagwith(Knight(yes)),
		pointswanted(4),
		itemswanted(1),
		list(_
			SK:Bow #codes(upto 4pts, downto 4pts),
			SK:Crossbow #codes(upto 4pts, downto 4pts),
			SK:Throwing #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts),
			SK:Sling #codes(upto 4pts, downto 4pts) _
		)_
	),
	select8(_
		text("Please select 24 points in weapons skills."),
		tagwith(Knight(yes)),
		pointswanted(24),
		itemswanted(atleast 1, upto 3),
		list(_
			SK:Axe/Mace #codes(upto 24pts, downto 8pts),
			SK:Lance #codes(upto 24pts, downto 8pts),
			SK:Broadsword #codes(upto 24pts, downto 8pts),
			SK:Polearm #codes(upto 24pts, downto 8pts),
			SK:Shortsword #codes(upto 24pts, downto 8pts),
			SK:Spear #codes(upto 24pts, downto 8pts),
			SK:Two-Handed Sword #codes(upto 24pts, downto 8pts),
			SK:Flail #codes(upto 24pts, downto 8pts),
			#newitem(_
				SK:Riding (Equines), DX/A, default(DX - 5, SK:Animal Handling - 3, SK:Riding - 10), page(B217), cat(_General, Animal) #codes(upto 8pts, downto 8pts)_
			)_
		)_
	),
	select9(_
		text("Select an Armoury skill."),
		tagwith(Knight(yes)),
		pointswanted(4),
		itemswanted(1),
		list(_
			SK:Armoury (Body Armor) #codes(upto 4pts, downto 4pts),
			SK:Armoury (Melee Weapons) #codes(upto 4pts, downto 4pts)_
		)_
	),
	select10(_
		text("Please select four background skills."),
		tagwith(Knight(yes)),
		pointswanted(4),
		itemswanted(4),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Forced Entry #codes(upto 1pts),
			SK:Climbing #codes(upto 1pts),
			SK:Stealth #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Savoir-Faire (High Society) #codes(upto 1pts),
			SK:Gambling #codes(upto 1pts),
			SK:Heraldry #codes(upto 1pts),
			SK:Streetwise #codes(upto 1pts),
			SK:Carousing #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Intimidation #codes(upto 1pts),
			SK:Scrounging #codes(upto 1pts),
			SK:Observation #codes(upto 1pts)_
		)_
	),
	select11(_
		text("Choose a Fast-Draw specialty."),
		itemswanted(1),
		tagwith(Knight(yes)),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Fast-Draw #codes(upto 1pts),
			SK:Fast-Draw (Arrow) #codes(upto 1pts),
			SK:Fast-Draw (Knife) #codes(upto 1pts),
			SK:Fast-Draw (Sword) #codes(upto 1pts),
			SK:Fast-Draw (Two-Handed Sword)#codes(upto 1pts) _
		)_
	),
	select12(#List(QuirkSelection))

Martial Artist (Dungeon Fantasy), displaycost(250), cost(0),
	description(You're a true master of barehanded combat and exotic weapons.),
	page(DF1:9),
	noresync(yes),
	sets(_
		{ST:ST}=11,
		{ST:DX}=16,
		{ST:IQ}=10,
		{ST:HT}=12,
		{ST:Hit Points}=ST:ST,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Will}=11,
		{ST:Basic Speed}=7.0,
		{ST:Basic Move}=8_
	),
	adds(_
		{AD:Chi Talent}=2,
		{AD:Trained by a Master},
		{DI:Disciplines of Faith (Chi Rituals)},
		{SK:Judo} = 2pts,
		{SK:Karate} = 2pts,
		{SK:Jumping}=1pts,
		{SK:Acrobatics}=2pts,
		{SK:Stealth}=1pts,
		{SK:Meditation}=2pts,
		{SK:Tactics}=4pts_
	),
	select1(#List(Languages)),
	select2(_
		text("Select 20 points in Chi abilities. Put extra points into special skills. If you spend only [17] points here, you can get Extra Attack as your next option."),
		tagwith(MartialArtist(yes)),
		pointswanted(upto 20),
		itemswanted(atleast 1),
		list(_
			#list(Martial Artist Abilities)_
		)_
	),
	select3(_
		text("Select an additional 20 points from Chi abilities or from the conventional advantages in this list. Additional Chi Talent should be deleted and Chi Talent improved accordingly. You may only only take Chi Mastery Extra Attack if you spent only [17] points on the last set of options."),
		tagwith(MartialArtist(yes)),
		pointswanted(atleast 20, upto 23),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Advantages where MartialArtist is "Yes", template(#newitem(AD:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(AD:%ListItem%)))),
			#list(GMAdvantages),
			#list(Martial Artist Abilities),
			PE:Weapon Bond (%Weapon%),
			AD:Ambidexterity,
			AD:Combat Reflexes,
			AD:Fit,
			AD:Very Fit,
			AD:Flexibility,
			AD:Double-Jointed,
			AD:High Pain Threshold,
			AD:Luck,
			AD:Signature Gear,
			AD:Unfazeable,
			AD:Enhanced Dodge #codes(upto 1, downto 1),
			AD:Enhanced Parry (bare hands) #codes(upto 2, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Will #codes(upto 4, downto 1),
			AD:Extra Perception #codes(upto 4, downto 1),
			AD:Extra Fatigue Points #codes(upto 6, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 1),
			AD:Extra Basic Move #codes(upto 2, downto 1),
			AD:Magic Resistance #codes(upto 10, downto 1),
			AD:Mind Shield #codes(upto 4, downto 1),
			AD:Wild Talent #codes(upto 1, downto 1),
			#newitem(AD:_Improve Chi Talent, 15/30, existing(AD:Chi Talent)) #codes(upto 3, downto 3),
			#newitem(_
				AD:Weapon Master (One Exotic Weapon), 20, page(B99), cat(Mundane, Physical) _
			)_
		)_
	),
	select4(text("Please select 25 points from among these disadvantages."), tagwith(MartialArtist(yes)),
		pointswanted(-25), itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Compulsive Vowing,
			DI:Honesty,
			DI:Social Stigma (Minority Group),
			DI:Code of Honor (Bushido),
			DI:Obsession (Perfect my art at any cost),
			DI:Vow (Always fight unarmed),
			DI:Vow (Silence),
			DI:Vow (Vegetarianism),
			DI:Wealth #codes(upto 3, downto 1) _
		)_
	),
	select5(_
		text("Select another -15 points from the following disadvantages."),
		tagwith(MartialArtist(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where MartialArtist is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			DI:Callous,
			DI:Compulsive Vowing,
			DI:Honesty,
			DI:Loner,
			DI:No Sense of Humor,
			DI:Overconfidence,
			DI:Sense of Duty (Adventuring companions),
			DI:Social Stigma (Minority Group),
			DI:Stubbornness,
			DI:Wealth #codes(upto 3, downto 1),
			DI:Code of Honor (Bushido),
			DI:Obsession (Perfect my art at any cost!),
			DI:Vow (Always fight unarmed),
			DI:Vow (Silence),
			DI:Vow (Vegetarianism) _
		)_
	),
	select6(_
		text("Select a thrown weapon."),
		tagwith(MartialArtist(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Thrown Weapon (Dart) #codes(upto 1pts),
			SK:Thrown Weapon (Knife) #codes(upto 1pts),
			SK:Thrown Weapon (Shuriken) #codes(upto 1pts),
			SK:Throwing #codes(upto 1pts),
			SK:Blowpipe #codes(upto 1pts),
			SK:Sling #codes(upto 1pts)_
		)_
	),
	select7(_
		text("Select up to 4 melee combat skills."),
		tagwith(MartialArtist(yes)),
		pointswanted(8),
		itemswanted(atleast 0, upto 4),
		list(_
			#newitem(SK:_Increase Judo, 2/6, existing(SK:Judo)) #codes(upto %points+6pts, downto %points+2pts),
			#newitem(SK:_Increase Karate, 2/6, existing(SK:Karate)) #codes(upto %points+6pts, downto %points+2pts),
			SK:Knife #codes(upto 4pts, downto 4pts),
			SK:Axe/Mace #codes(upto 4pts, downto 4pts),
			SK:Jitte/Sai #codes(upto 4pts, downto 4pts),
			SK:Shortsword #codes(upto 4pts, downto 4pts),
			SK:Smallsword #codes(upto 4pts, downto 4pts),
			SK:Staff #codes(upto 4pts, downto 4pts),
			SK:Tonfa #codes(upto 4pts, downto 4pts),
			SK:Flail #codes(upto 4pts, downto 4pts),
			SK:Kusari #codes(upto 4pts, downto 4pts)_
		)_
	),
	select8(_
		text("Please select three background skills."),
		tagwith(MartialArtist(yes)),
		pointswanted(3),
		itemswanted(3),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Fast-Draw #codes(upto 1pts),
			SK:Fast-Draw (Arrow) #codes(upto 1pts),
			SK:Fast-Draw (Balisong) #codes(upto 1pts),
			SK:Fast-Draw (Flexible) #codes(upto 1pts),
			SK:Fast-Draw (Knife) #codes(upto 1pts),
			SK:Fast-Draw (Shuriken) #codes(upto 1pts),
			SK:Fast-Draw (Stone) #codes(upto 1pts),
			SK:Fast-Draw (Sword) #codes(upto 1pts),
			SK:Fast-Draw (Tonfa) #codes(upto 1pts),
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),
			SK:Climbing #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Teaching #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Running #codes(upto 1pts),
			SK:Intimidation #codes(upto 1pts),
			SK:Observation #codes(upto 1pts)_
		)_
	),
	select9(_
		text("Please select seven Special Martial Arts skills. Flying Leap requires Power Blow. Body Control required Breath Control."),
		tagwith(MartialArtist(yes)),
		pointswanted(14),
		itemswanted(7),
		list(_
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),
	select10(#List(QuirkSelection))

Scout (Dungeon Fantasy), displaycost(250), cost(0),
	description(You're called "archer," "stalker," and "tracker," and you've filled all three roles in the past.),
	page(DF1:10),
	noresync(yes),
	sets(_
		{ST:ST}=13,
		{ST:DX}=14,
		{ST:IQ}=11,
		{ST:HT}=12,
		{ST:Perception}=14,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=7.00,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	adds(_
		{AD:Heroic Archer},
		{AD:Outdoorsman}=2,
		{SK:Bow}=16pts,
		{SK:Camouflage}=2pts,
		{SK:Fast-Draw (Arrow)}=1pts,
		{SK:Observation}=2pts,
		{SK:Tracking}=2pts,
		{SK:Climbing}=1pts,
		{SK:Stealth}=1pts,
		{SK:Gesture}=2pts,
		{SK:Cartography}=4pts,
		{SK:Shadowing}=4pts,
		{SK:Traps}=4pts,
		{SK:Mimicry (Bird Calls)}=2pts,
		{SK:Hiking}=2pts_
	),
	select1(#List(Languages)),
	select2(_
		text("Please select 20 points from among the following advantages. If you select Additional Outdoorsman you will want to delete it and increase your Outdoorsman Talent appropriately."),
		tagwith(Scout(yes)),
		pointswanted(20),
		itemswanted(atleast 1),
		list(_
			#list(GMAdvantages),
			#list(Scout Abilities),
			PE:Weapon Bond (%Weapon%),
			AD:Absolute Direction,
			AD:Combat Reflexes,
			AD:Danger Sense,
			AD:Fit,
			AD:High Pain Threshold,
			AD:Luck #codes(upto 2, downto 1),
			AD:Peripheral Vision,
			AD:Rapid Healing,
			AD:Signature Gear,
			AD:Very Fit,
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Perception #codes(upto 4, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 4),
			AD:Extra Basic Move #codes(upto 3, downto 1),
			AD:Acute Vision #codes(upto 10, downto 1),
			AD:Night Vision #codes(upto 9, downto 1),
			#newitem(AD:_Improve Outdoorsman, 10/20, existing(AD:Outdoorsman)) #codes(upto 4, downto 3),
			#newitem(_
				AD:Weapon Master (Bow), displaycost(20), cost(20), page(B99), cat(Mundane, Physical)_
			)_
		)_
	),
	select3(_
		text("Please select -15 points from among the following disadvantages."),
		tagwith(Scout(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Bloodlust,
			DI:Callous,
			DI:Greed,
			DI:Honesty,
			DI:Overconfidence,
			DI:Sense of Duty (Adventuring companions),
			DI:Stubbornness_
		)_
	),
	select4(_
		text("Please select another -35 points from the following disadvantages."),
		tagwith(Scout(yes)),
		pointswanted(-35),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Scout is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Bloodlust,
			DI:Code of Honor (Pirate's),
			DI:Code of Honor (Soldier's),
			DI:Callous,
			DI:Greed,
			DI:Honesty,
			DI:Loner,
			DI:No Sense of Humor,
			DI:Overconfidence,
			DI:Paranoia,
			DI:Sense of Duty (Adventuring companions),
			DI:Social Stigma (Disowned),
			DI:Stubbornness,
			DI:Intolerance (Urbanites),
			DI:Odious Personal Habit (Unwashed bushwhacker),
			DI:Phobia (Crowds),
			DI:Vow (Never sleep indoors),
			DI:Vow (Own no more than what can be carried)_
		)_
	),
	select5(_
		text("Please select your combat skills. You may take a weapon skill and shield or ignore shield and raise the weapon skill another level."),
		tagwith(Scout(yes)),
		pointswanted(12),
		itemswanted(atleast 1, upto 2),
		list(_
			SK:Broadsword #codes(upto 12pts, downto 8pts),
			SK:Shortsword #codes(upto 12pts, downto 8pts),
			SK:Spear #codes(upto 12pts, downto 8pts),
			SK:Staff #codes(upto 12pts, downto 12pts),
			SK:Shield (Shield) #codes(upto 4pts, downto 4pts)_
		)_
	),
	select6(_
		text("Please select a Navigation specialty"),
		tagwith(Scout(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Navigation (Sea) #codes(upto 1pts)_
		)_
	),
	select7(_
		text("Please select a Survival Specialty."),
		tagwith(Scout(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select8(_
		text("Please select up to 8 skills from the following list, extra points may be spent on any other skill you already have."),
		tagwith(Scout(yes)),
		pointswanted(8),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Skills where Scout is "yes",
				template(_
							#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%))_
						)_
					),
			#newitem(SK:_Increase Bow, existing(SK:Bow)),
			#newitem(SK:_Increase Camouflage, existing(SK:Camouflage)),
			#newitem(SK:_Increase Fast-Draw (Arrow), existing(SK:Fast-Draw (Arrow))),
			#newitem(SK:_Increase Observation, existing(SK:Observation)),
			#newitem(SK:_Increase Tracking, existing(SK:Tracking)),
			#newitem(SK:_Increase Climbing, existing(SK:Climbing)),
			#newitem(SK:_Increase Stealth, existing(SK:Stealth)),
			#newitem(SK:_Increase Gesture, existing(SK:Gesture)),
			#newitem(SK:_Increase Cartography, existing(SK:Cartography)),
			#newitem(SK:_Increase Shadowing, existing(SK:Shadowing)),
			#newitem(SK:_Increase Traps, existing(SK:Traps)),
			#newitem(SK:_Increase Mimicry (Bird Calls), existing(SK:Mimicry (Bird Calls))),
			#newitem(SK:_Increase Hiking, existing(SK:Hiking)),
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Brawling #codes(upto 1pts),
			SK:Fast-Draw #codes(upto 1pts),
			SK:Fast-Draw (Arrow) #codes(upto 1pts),
			SK:Fast-Draw (Balisong) #codes(upto 1pts),
			SK:Fast-Draw (Flexible) #codes(upto 1pts),
			SK:Fast-Draw (Knife) #codes(upto 1pts),
			SK:Fast-Draw (Shuriken) #codes(upto 1pts),
			SK:Fast-Draw (Stone) #codes(upto 1pts),
			SK:Fast-Draw (Sword) #codes(upto 1pts),
			SK:Fast-Draw (Tonfa) #codes(upto 1pts),
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),
			SK:Garrote #codes(upto 1pts),
			SK:Jumping #codes(upto 1pts),
			SK:Knife #codes(upto 1pts),
			SK:Knot-Tying #codes(upto 1pts),
			SK:Boating (Unpowered) #codes(upto 1pts),
			SK:Throwing #codes(upto 1pts),
			SK:Wrestling #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Seamanship #codes(upto 1pts),
			SK:Armoury (Missile Weapons) #codes(upto 1pts),
			SK:Prospecting #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Running #codes(upto 1pts),
			SK:Skiing #codes(upto 1pts),
			SK:Search #codes(upto 1pts),
			#newitem(_
				SK:Riding (Equines), DX/A, default(DX - 5, SK:Animal Handling - 3, SK:Riding - 10), page(B217), cat(_General, Animal), #codes(upto 1pts)_
			)_
		)_
	),
	select9(#List(QuirkSelection))

Swashbuckler (Dungeon Fantasy), displaycost(250), cost(0),
	description(You're living proof that the sword is mightier, speedier, and more stylish than, well, just about everything.),
	page(DF1:11),
	noresync(yes),
	sets(_
		{ST:ST}=11,
		{ST:DX}=15,
		{ST:IQ}=10,
		{ST:HT}=13,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=7.0,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	adds(_
		{AD:Combat Reflexes},
		{AD:Enhanced Parry (%Melee Weapon%)}=1,
		{AD:Luck}=1,
		{PE:Weapon Bond (%Weapon%)},
		{AD:Weapon Master}=1,
		%weapontypesaliaslist%,
		{SK:Jumping}=1pts,
		{SK:Fast-Draw (Knife)}=1pts,
		{SK:Fast-Draw (Sword)}=1pts,
		{SK:Acrobatics}=4pts,
		{SK:Wrestling}=2pts,
		{SK:Stealth}=1pts,
		{SK:Carousing}=1pts_
	),
	x(_
			#ChoiceList(_
				name(weapontypes),
				title(Combat Style),
				text(Choose your melee skill package.),
				picksallowed(1),
				method(bynumber),
				list(_
						"Broadsword@DX+4 and Buckler@DX+2",
						"Broadsword@DX+4 and Cloak@DX+1",
						"Broadsword@DX+4 and Main-Gauche@DX+1",
						"Broadsword@DX+3 and Buckler@DX+3",
						"Broadsword@DX+3 and Cloak@DX+2",
						"Broadsword@DX+3 and Main-Gauche@DX+2",
						"Broadsword@DX+5",
						"Rapier@DX+4 and Buckler@DX+2",
						"Rapier@DX+4 and Cloak@DX+1",
						"Rapier@DX+4 and Main-Gauche@DX+1",
						"Rapier@DX+3 and Buckler@DX+3",
						"Rapier@DX+3 and Cloak@DX+2",
						"Rapier@DX+3 and Main-Gauche@DX+2",
						"Rapier@DX+5",
						"Saber@DX+4 and Buckler@DX+2",
						"Saber@DX+4 and Cloak@DX+1",
						"Saber@DX+4 and Main-Gauche@DX+1",
						"Saber@DX+3 and Buckler@DX+3",
						"Saber@DX+3 and Cloak@DX+2",
						"Saber@DX+3 and Main-Gauche@DX+2",
						"Saber@DX+5",
						"Shortsword@DX+4 and Buckler@DX+2",
						"Shortsword@DX+4 and Cloak@DX+1",
						"Shortsword@DX+4 and Main-Gauche@DX+1",
						"Shortsword@DX+3 and Buckler@DX+3",
						"Shortsword@DX+3 and Cloak@DX+2",
						"Shortsword@DX+3 and Main-Gauche@DX+2",
						"Shortsword@DX+5",
						"Smallsword@DX+4 and Buckler@DX+2",
						"Smallsword@DX+4 and Cloak@DX+1",
						"Smallsword@DX+4 and Main-Gauche@DX+1",
						"Smallsword@DX+3 and Buckler@DX+3",
						"Smallsword@DX+3 and Cloak@DX+2",
						"Smallsword@DX+3 and Main-Gauche@DX+2",
						"Smallsword@DX+5"_
					),
			aliaslist(_
						"{SK:Broadsword}=16pts, {SK:Shield (Buckler)}=4pts",
						"{SK:Broadsword}=16pts, {SK:Cloak}=4pts",
						"{SK:Broadsword}=16pts, {SK:Main-Gauche}=4pts",
						"{SK:Broadsword}=12pts, {SK:Shield (Buckler)}=8pts",
						"{SK:Broadsword}=12pts, {SK:Cloak}=8pts",
						"{SK:Broadsword}=12pts, {SK:Main-Gauche}=8pts",
						"{SK:Broadsword}=20pts",
						"{SK:Rapier}=16pts, {SK:Shield (Buckler)}=4pts",
						"{SK:Rapier}=16pts, {SK:Cloak}=4pts",
						"{SK:Rapier}=16pts, {SK:Main-Gauche}=4pts",
						"{SK:Rapier}=12pts, {SK:Shield (Buckler)}=8pts",
						"{SK:Rapier}=12pts, {SK:Cloak}=8pts",
						"{SK:Rapier}=12pts, {SK:Main-Gauche}=8pts",
						"{SK:Rapier}=20pts",
						"{SK:Saber}=16pts, {SK:Shield (Buckler)}=4pts",
						"{SK:Saber}=16pts, {SK:Cloak}=4pts",
						"{SK:Saber}=16pts, {SK:Main-Gauche}=4pts",
						"{SK:Saber}=12pts, {SK:Shield (Buckler)}=8pts",
						"{SK:Saber}=12pts, {SK:Cloak}=8pts",
						"{SK:Saber}=12pts, {SK:Main-Gauche}=8pts",
						"{SK:Saber}=20pts",
						"{SK:Shortsword}=16pts, {SK:Shield (Buckler)}=4pts",
						"{SK:Shortsword}=16pts, {SK:Cloak}=4pts",
						"{SK:Shortsword}=16pts, {SK:Main-Gauche}=4pts",
						"{SK:Shortsword}=12pts, {SK:Shield (Buckler)}=8pts",
						"{SK:Shortsword}=12pts, {SK:Cloak}=8pts",
						"{SK:Shortsword}=12pts, {SK:Main-Gauche}=8pts",
						"{SK:Shortsword}=20pts",
						"{SK:Smallsword}=16pts, {SK:Shield (Buckler)}=4pts",
						"{SK:Smallsword}=16pts, {SK:Cloak}=4pts",
						"{SK:Smallsword}=16pts, {SK:Main-Gauche}=4pts",
						"{SK:Smallsword}=12pts, {SK:Shield (Buckler)}=8pts",
						"{SK:Smallsword}=12pts, {SK:Cloak}=8pts",
						"{SK:Smallsword}=12pts, {SK:Main-Gauche}=8pts",
						"{SK:Smallsword}=20pts"_
					)_
				)_
	),
	select1(#List(Languages)),
	select2(_
		text("Please select 60 points from the following advantages."),
		tagwith(Swashbuckler(yes)),
		pointswanted(60),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Advantages where name includes "Enhanced Parry", template(#newitem(AD:_Increase %ListItem%, displaycost(varies), existing(AD:%ListItem%)) )),
			#list(GMAdvantages),
			#list(Swashbuckler Abilities),
			AD:Ambidexterity,
			PE:Alcohol Tolerance,
			AD:Daredevil,
			PE:No Hangover,
			AD:Perfect Balance,
			AD:Rapier Wit,
			AD:Signature Gear,
			AD:Appearance #codes(upto 5, downto 1),
			AD:Charisma #codes(upto 12, downto 1),
			AD:Enhanced Dodge #codes(upto 1, downto 1),
			AD:Extra Attack #codes(upto 1, downto 1),
			AD:Extra ST #codes(upto 6, downto 1),
			AD:Extra DX #codes(upto 3, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 1),
			AD:Extra Basic Move #codes(upto 2, downto 1),
			AD:Serendipity #codes(upto 4, downto 1),
			AD:Striking ST #codes(upto 2, downto 1),
			#newitem(AD:_Improve Luck, 15/45, existing(AD:Luck)) #codes(upto 3, downto 2)_
		)_
	),
	select3(_
		text("Please choose -15 points in disadvantages."),
		tagwith(Swashbuckler(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Code of Honor (Pirate's),
			DI:Code of Honor (Gentleman's),
			#newitem(_
				DI:Obssession (Become the best swordsman in the world.), -10, displaycost(-10*), mods(Self-Control), page(B146), cat(Mundane, Mental),
					initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ) _
				),
			#newitem(DI:Vow (Use only weapon of choice.), -5, page(B160), cat(Mundane, Mental)),
			#newitem(DI:Vow (Never refuse a challenge of combat.), -10, page(B160), cat(Mundane, Mental)),
			#newitem(DI:Vow (Challenge every swordsman to combat.), -15, page(B160), cat(Mundane, Mental)),
			#newitem(DI:Vow (Never wear armor.), -5, page(B160), cat(Mundane, Mental))_
		)_
	),
	select4(_
		text("Please choose -15 points from these disadvantages."),
		tagwith(Swashbuckler(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where name is "Obsession", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Impulsiveness,
			DI:Overconfidence,
			DI:Short Attention Span,
			DI:Trickster _
		)_
	),
	select5(_
		text("Please select another -20 points from these disadvantages."),
		tagwith(Swashbuckler(yes)),
		pointswanted(-20),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Swashbuckler is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Code of Honor (Pirate's),
			DI:Code of Honor (Gentleman's),
			#newitem(_
				DI:Obssession (Become the best swordsman in the world.), -10, displaycost(-10*), mods(Self-Control), page(B146), cat(Mundane, Mental),
					initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) ) _
				),
			#newitem(DI:Vow (Use only weapon of choice.), -5, page(B160), cat(Mundane, Mental)),
			#newitem(DI:Vow (Never refuse a challenge of combat.), -10, page(B160), cat(Mundane, Mental)),
			#newitem(DI:Vow (Challenge every swordsman to combat.), -15, page(B160), cat(Mundane, Mental)),
			#newitem(DI:Vow (Never wear armor.), -5, page(B160), cat(Mundane, Mental)),
			DI:Impulsiveness,
			DI:Overconfidence,
			DI:Short Attention Span,
			DI:Trickster,
			DI:Chummy,
			DI:Gregarious,
			DI:Compulsive Carousing,
			DI:Compulsive Spending,
			DI:Greed,
			DI:Jealousy,
			DI:Lecherousness,
			DI:One Eye,
			DI:Sense of Duty (Adventuring Companions),
			DI:Wounded _
		)_
	),
	select6(_
		text("Select a thrown weapon."),
		tagwith(Swashbuckler(yes)),
		pointswanted(2),
		itemswanted(1),
		list(_
			SK:Throwing #codes(upto 2pts, downto 2pts),
			SK:Thrown Weapon (Knife) #codes(upto 2pts, downto 2pts)_
		)_
	),
	select7(_
		text("Please choose one unarmed striking skill."),
		tagwith(Swashbuckler(yes)),
		pointswanted(2),
		itemswanted(1),
		list(_
			SK:Brawling #codes(upto 2pts, downto 2pts),
			SK:Boxing #codes(upto 2pts, downto 2pts)_
		)_
	),
	select8(_
		text("Please select a social background skill."),
		tagwith(Swashbuckler(yes)),
		pointswanted(2),
		itemswanted(1),
		list(_
			SK:Savoir-Faire (High Society) #codes(upto 2pts, downto 2pts),
			SK:Streetwise #codes(upto 2pts, downto 2pts) _
		)_
	),
	select9(_
		text("Please select seven background skills."),
		tagwith(Swashbuckler(yes)),
		pointswanted(7),
		itemswanted(7),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Fast-Draw #codes(upto 1pts),
			SK:Fast-Draw (Arrow) #codes(upto 1pts),
			SK:Fast-Draw (Balisong) #codes(upto 1pts),
			SK:Fast-Draw (Flexible) #codes(upto 1pts),
			SK:Fast-Draw (Knife) #codes(upto 1pts),
			SK:Fast-Draw (Shuriken) #codes(upto 1pts),
			SK:Fast-Draw (Stone) #codes(upto 1pts),
			SK:Fast-Draw (Sword) #codes(upto 1pts),
			SK:Fast-Draw (Tonfa) #codes(upto 1pts),
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),
			SK:Climbing #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Seamanship #codes(upto 1pts),
			SK:Connoisseur #codes(upto 1pts),
			SK:Connoisseur (Dance) #codes(upto 1pts),
			SK:Connoisseur (Literature) #codes(upto 1pts),
			SK:Connoisseur (Music) #codes(upto 1pts),
			SK:Connoisseur (Visual Arts) #codes(upto 1pts),
			SK:Connoisseur (Wine) #codes(upto 1pts),
			SK:Fast-Talk #codes(upto 1pts),
			SK:Gambling #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Sex Appeal #codes(upto 1pts),
			SK:Intimidation #codes(upto 1pts),
			SK:Scrounging #codes(upto 1pts),
			SK:Search #codes(upto 1pts) _
		)_
	),
	select10(#List(QuirkSelection))

Thief (Dungeon Fantasy), displaycost(250), cost(0),
	description(You're a "procurement expert," whatever unflattering terms others may use. You take things that need taking.),
	page(DF1:12),
	noresync(yes),
	sets(_
		{ST:ST}=11,
		{ST:DX}=15,
		{ST:IQ}=13,
		{ST:HT}=11,
		{ST:Perception}=14,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=6.00,
		{ST:Basic Move}=7_
	),
	adds(_
		{AD:Flexibility},
		{AD:High Manual Dexterity}=1,
		{AD:Perfect Balance},
		{SK:Forced Entry}=1pts,
		{SK:Climbing}=1pts,
		{SK:Filch}=2pts,
		{SK:Stealth}=12pts,
		{SK:Escape}=1pts,
		{SK:Pickpocket}=2pts,
		{SK:Lockpicking}=4pts,
		{SK:Traps}=4pts,
		{SK:Acrobatics}=1pts,
		{SK:Sleight of Hand}=1pts,
		{SK:Gesture}=1pts,
		{SK:Holdout}=2pts,
		{SK:Shadowing}=2pts,
		{SK:Smuggling}=2pts,
		{SK:Streetwise}=2pts,
		{SK:Search}=2pts,
		{SK:Urban Survival}=2pts,
		{SK:Brawling}=1pts,
		{SK:Gambling}=1pts,
		{SK:Carousing}=1pts _
	),
	select1(#List(Languages)),
	select2(_
		text("Please select 30 points from the following advantages and perks."),
		tagwith(Thief(yes)),
		pointswanted(30),
		itemswanted(atleast 1),
		list(_
			#list(GMAdvantages),
			#list(Thief Abilities),
			#newitem(AD:Double-Jointed, +10, existing(AD:Flexibility)) #codes(upto 2, downto 2),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra Perception #codes(upto 6, downto 1),
			AD:Extra Basic Move #codes(upto 2, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 1),
			AD:Ambidexterity,
			AD:Catfall,
			AD:Combat Reflexes,
			AD:Danger Sense,
			AD:Enhanced Dodge #codes(upto 2, downto 1),
			AD:Gizmo #codes(upto 3, downto 1),
			#newitem(AD:_Improve High Manual Dexterity, 5/10, existing(AD:High Manual Dexterity)) #codes(upto 3, downto 2),
			PE:Honest Face,
			AD:Luck #codes(upto 2, downto1 ),
			AD:Night Vision #codes(upto 9, downto 1),
			AD:Peripheral Vision,
			AD:Serendipity,
			AD:Signature Gear,
			AD:Surprise Striking ST #codes(upto 2, downto 1),
			AD:Wealth #codes(upto 2, downto 1)_
		)_
	),
	select3(_
		text("Please select one of the following disadvantages."),
		tagwith(Thief(yes)),
		pointswanted(-15),
		itemswanted(1),
		list(_
			#list(GMDisadvantages),
			DI:Greed,
			DI:Kleptomania,
			DI:Trickster _
		)_
	),
	select4(_
		text("Please select one of the following disadvantages."),
		tagwith(Thief(yes)),
		pointswanted(-5),
		itemswanted(1),
		list(_
			#list(GMDisadvantages),
			DI:Callous,
			DI:Code of Honor (Pirate's),
			DI:Curious _
		)_
	),
	select5(_
		text("Please select -20 points from the following disadvantages."),
		tagwith(Thief(yes)),
		pointswanted(-20),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Thief is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Bad Temper,
			DI:Bloodlust,
			DI:Callous,
			DI:Code of Honor (Pirate's),
			DI:Compulsive Carousing,
			DI:Compulsive Gambling,
			DI:Compulsive Lying,
			DI:Compulsive Spending,
			DI:Cowardice,
			DI:Curious,
			DI:Greed,
			DI:Kleptomania,
			DI:Laziness,
			DI:Lecherousness,
			DI:Loner,
			DI:One Eye,
			DI:Overconfidence,
			DI:Post-Combat Shakes,
			DI:Sense of Duty (Adventuring companions),
			DI:Skinny,
			DI:Social Stigma (Criminal Record),
			DI:Trickster _
		)_
	),
	select6(_
		text("Please select 2 points in a weapon skill or skills."),
		tagwith(Thief(yes)),
		pointswanted(2),
		itemswanted(atleast 1),
		list(_
			SK:Rapier #codes(upto 2pts),
			SK:Saber #codes(upto 2pts),
			SK:Shortsword #codes(upto 2pts),
			SK:Smallsword #codes(upto 2pts),
			SK:Shield (Buckler) #codes(upto 1pts),
			SK:Cloak #codes(upto 1pts),
			SK:Main-Gauche #codes(upto 1pts) _
		)_
	),
	select7(_
		text("Please select one of the following ranged combat skills."),
		tagwith(Thief(yes)),
		pointswanted(1),
		itemswanted(1),
		list(_
			SK:Crossbow #codes(upto 1pts),
			SK:Thrown Weapon (Knife) #codes(upto 1pts),
			SK:Bow #codes(upto 1pts),
			SK:Throwing #codes(upto 1pts),
			SK:Sling #codes(upto 1pts)_
		)_
	),
	select8(_
		text("Select up to 7 points on any of the following skills, extra points may be spent on any other skill you already have."),
		tagwith(Thief(yes)),
		pointswanted(7),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Skills where Thief is "yes",
			  template(_
						#newitem(SK:_Increase %ListItem%, existing(SK:%ListItem%))_
			  )_
			),
			#newitem(SK:_Increase Forced Entry, existing(SK:Forced Entry)),
			#newitem(SK:_Increase Climbing, existing(SK:Climbing)),
			#newitem(SK:_Increase Filch, existing(SK:Filch)),
			#newitem(SK:_Increase Stealth, existing(SK:Stealth)),
			#newitem(SK:_Increase Escape, existing(SK:Escape)),
			#newitem(SK:_Increase Pickpocket, existing(SK:Pickpocket)),
			#newitem(SK:_Increase Lockpicking, existing(SK:Lockpicking)),
			#newitem(SK:_Increase Traps, existing(SK:Traps)),
			#newitem(SK:_Increase Acrobatics, existing(SK:Acrobatics)),
			#newitem(SK:_Increase Sleight of Hand, existing(SK:Sleight of Hand)),
			#newitem(SK:_Increase Gesture, existing(SK:Gesture)),
			#newitem(SK:_Increase Holdout, existing(SK:Holdout)),
			#newitem(SK:_Increase Shadowing, existing(SK:Shadowing)),
			#newitem(SK:_Increase Smuggling, existing(SK:Smuggling)),
			#newitem(SK:_Increase Streetwise, existing(SK:Streetwise)),
			#newitem(SK:_Increase Search, existing(SK:Search)),
			#newitem(SK:_Increase Urban Survival, existing(SK:Urban Survival)),
			#newitem(SK:_Increase Brawling, existing(SK:Brawling)),
			#newitem(SK:_Increase Gambling, existing(SK:Gambling)),
			#newitem(SK:_Increase Carousing, existing(SK:Carousing)),
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Fast-Draw #codes(upto 1pts),
			SK:Fast-Draw (Arrow) #codes(upto 1pts),
			SK:Fast-Draw (Balisong) #codes(upto 1pts),
			SK:Fast-Draw (Flexible) #codes(upto 1pts),
			SK:Fast-Draw (Knife) #codes(upto 1pts),
			SK:Fast-Draw (Shuriken) #codes(upto 1pts),
			SK:Fast-Draw (Stone) #codes(upto 1pts),
			SK:Fast-Draw (Sword) #codes(upto 1pts),
			SK:Fast-Draw (Tonfa) #codes(upto 1pts),
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),
			SK:Garrote #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Panhandling #codes(upto 1pts),
			SK:Seamanship #codes(upto 1pts),
			SK:Cartography #codes(upto 1pts),
			SK:Connoisseur #codes(upto 1pts),
			SK:Connoisseur (Dance) #codes(upto 1pts),
			SK:Connoisseur (Literature) #codes(upto 1pts),
			SK:Connoisseur (Music) #codes(upto 1pts),
			SK:Connoisseur (Visual Arts) #codes(upto 1pts),
			SK:Connoisseur (Wine) #codes(upto 1pts),
			SK:Disguise #codes(upto 1pts),
			SK:Fast-Talk #codes(upto 1pts),
			SK:Forgery #codes(upto 1pts),
			SK:Poisons #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Scrounging #codes(upto 1pts),
			SK:Lip-Reading #codes(upto 1pts),
			SK:Observation #codes(upto 1pts) _
		)_
	),
	select9(#List(QuirkSelection))

Wizard (Dungeon Fantasy), displaycost(250), cost(0),
	description(Your knowlege of magic is deeper than that of the cleric or druid. The party needs your mighty wizardry.),
	page(DF1:13),
	noresync(yes),
	sets(_
		{ST:ST}=10,
		{ST:DX}=12,
		{ST:IQ}=15,
		{ST:HT}=11,
		{ST:Perception}=12,
		{ST:Fatigue Points}=14,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Basic Speed}=6.00,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	adds(_
			AD:Magery 0,
			AD:Magery=3,
			SK:Occultism=2pts,
			SK:Alchemy=8pts,
			SK:Thaumatology=1pts,
			SK:Research=1pts,
			SK:Speed-Reading=1pts,
			SK:Teaching=1pts,
			SK:Writing=1pts,
			SK:Meditation=2pts,
			SK:Hazardous Materials (Magical),
			%weaponaliaslist%_
	),
	needs(%spellsaliaslist%),
	x(_
		#ChoiceList(_
				name(weapon),
				title(Weapon Choice),
				text(Choose your primary weapon set:),
				picksallowed(1),
				method(bynumber),
				default(1),
				list(_
						"Staff",
						"Smallsword & Shield (Buckler)"_
					),
				aliaslist(_
					{SK:Staff = 8pts},
					{SK:Smallsword = 4pts, SK:Shield (Buckler) = 4pts}_
					)_
				),
		#ChoiceList(_
				name(spells),
				title(Spell Lists),
				text(You may choose one of the following Wizard spell packages, or you may add 30 points in spells later:),
				picksallowed(1),
				method(bynumber),
				default(1),
			list(_
					#list(Wizard Spell List)_
				),
			aliaslist(_
					#list(Wizard Spell AliasList)_
				),
		alt1list(_
				#List(Wizard Spell Alt1List)_
				)_
		)_
	),
	select1(#List(Languages)),
	select2(_
		text("Please select 30 points from the following advantages."),
		tagwith(Wizard(yes)),
		pointswanted(30),
		itemswanted(atleast 1),
		list(_
			#list(GMAdvantages),
			#list(Wizard Abilities),
			AD:Eidetic Memory,
			AD:Intuition,
			AD:Language Talent,
			AD:Mind Shield,
			AD:Photographic Memory,
			AD:Signature Gear,
			AD:Spirit Empathy,
			#newitem(_
				AD:Wild Talent, 20, displaycost(21), mods(Wild Talent), page(B99), cat(Supernatural, Mental),
					initmods(Retention, +25%, group(Wild Talent), page(B99) _
					| Focused, -20%, group(Wild Talent), page(B100))_
				),
			#newitem(AD:_Magery 4-6, 10/20, existing(AD:Magery)) #codes(upto 6, downto 4),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra Will #codes(upto 5, downto 1),
			AD:Extra Fatigue Points #codes(upto 10, downto 1),
			AD:Gizmo #codes(upto 3, downto 1),
			AD:Language #codes(upto 3, downto 1),
			AD:Luck #codes(upto 2, downto 1) _
		)_
	),
	select3(_
		text("Please select -15 points from the following disadvantages."),
		tagwith(Wizard(yes)),
		pointswanted(-15),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Curious,
			DI:Frightens Animals,
			#newitem(_
				DI:Obsession (To become the world's most powerful...), -10, displaycost(-10*), mods(Self-Control), page(B146), cat(Mundane, Mental),
					initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )_
					),
			DI:Pyromania,
			DI:Skinny,
			DI:Social Stigma (Excommunicated),
			DI:Unfit,
			DI:Very Unfit,
			DI:Weirdness Magnet,
			DI:Unnatural Feature #codes(upto 5, downto 1)_
		)_
	),
	select4(_
		text("Please select -20 points from the following disadvantages."),
		tagwith(Wizard(yes)),
		pointswanted(-20),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where Wizard is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Absent-Mindedness,
			DI:Bad Temper,
			DI:Clueless,
			DI:Combat Paralysis,
			DI:Cowardice,
			DI:Curious,
			DI:Frightens Animals,
			DI:Hard of Hearing,
			DI:Klutz,
			DI:Loner,
			DI:Low Pain Threshold,
			QU:Nervous Stomach,
			DI:Oblivious,
			DI:Overconfidence,
			DI:Post-Combat Shakes,
			DI:Pyromania,
			DI:Sense of Duty (Adventuring Companions),
			DI:Skinny,
			DI:Social Stigma (Excommunicated),
			DI:Stubbornness,
			DI:Unfit,
			DI:Very Unfit,
			DI:Weirdness Magnet,
			DI:Unnatural Feature #codes(upto 5, downto 1),
			#newitem(_
				DI:Obsession (To become the world's most powerful...), -10, displaycost(-10*), mods(Self-Control), page(B146), cat(Mundane, Mental),
					initmods( You resist on a roll of 12 or less (quite often), *1, shortname(12 or less), group(Self-Control), page(B121) )_
			)_
		)_
	),
	select5(_
		text("Please select a form of Hidden Lore."),
		tagwith(Wizard(yes)),
		pointswanted(2),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 2pts, downto 2pts),
			SK:Hidden Lore (Spirit Lore) #codes(upto 2pts, downto 2pts),
			SK:Hidden Lore (Magical Items Lore) #codes(upto 2pts, downto 2pts),
			SK:Hidden Lore (Magical Writings Lore) #codes(upto 2pts, downto 2pts)_
		)_
	),
	select6(_
		text("Select one ranged combat skill."),
		tagwith(Wizard(yes)),
		pointswanted(4),
		itemswanted(1),
		list(_
			SK:Innate Attack (Beam) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Breath) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Gaze) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Projectile) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Dart) #codes(upto 4pts, downto 4pts),
			SK:Throwing #codes(upto 4pts, downto 4pts),
			SK:Sling #codes(upto 4pts, downto 4pts)_
		)_
	),
	select7(_
		text("Please select nine background skills."),
		tagwith(Wizard(yes)),
		pointswanted(9),
		itemswanted(9),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Climbing #codes(upto 1pts),
			SK:Stealth #codes(upto 1pts),
			SK:Body Sense #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Savoir-Faire (High Society) #codes(upto 1pts),
			SK:Cartography #codes(upto 1pts),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Magical Items Lore) #codes(upto 1pts),
			SK:Hidden Lore (Magical Writings Lore) #codes(upto 1pts),
			SK:Hidden Lore (Spirit Lore) #codes(upto 1pts),
			SK:Diplomacy #codes(upto 1pts),
			SK:Strategy #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Scrounging #codes(upto 1pts),
			SK:Strategy (Land) #codes(upto 1pts),
			SK:Strategy (Naval) #codes(upto 1pts),
			#newitem(_
				SK:Fast-Draw (Potion), DX/E, page(B194), cat(_General, Combat/Weapons - Melee Combat, Combat/Weapons - Ranged Combat), #codes(upto 1pts)_
			),
			#newitem(_
				SK:Physiology, IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),
				x(#InputToTag("You must specialize by monster type - Physiology Modifiers apply (p. B181):", nameext, "Monster Type", "Physiology")) _
			)_
		)_
	),
	select8(%spellsalt1list%#List(QuirkSelection))

*******************************************************************************************************\[STOP]
[EQUIPMENT]
******************************************************************************************************\[START]
*<Dungeon Fantasy - Armor - Low Tech Armor Suits>
#MergeTags in EQ:Cloth Armor Suit with "mods(Armor,Armor - Cloth)"
#MergeTags in EQ:Leather Armor Suit with "mods(Armor,Armor - Leather,Armor - Hard Leather)"
#MergeTags in EQ:Light Scale Suit with "mods(Armor,Armor - Metal)"
#MergeTags in EQ:Mail Suit with "mods(Armor,Armor - Metal,Armor - Mail)"
#MergeTags in EQ:Steel Laminate Suit with "mods(Armor,Armor - Metal,Armor - Plate)"
#MergeTags in EQ:Plate Suit with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"

*<Dungeon Fantasy - Armor - Low Tech Body Armor>
#MergeTags in EQ:Fur Loincloth with "mods(Armor,Armor - Leather)"
#MergeTags in EQ:Fur Tunic with "mods(Armor,Armor - Leather)"
#MergeTags in EQ:Bronze Breastplate with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"
#MergeTags in EQ:Bronze Corselet with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"
#MergeTags in EQ:Cloth Armor with "mods(Armor,Armor - Cloth)"
#MergeTags in EQ:Leather Armor with "mods(Armor,Armor - Leather,Armor - Hard Leather)"
#MergeTags in EQ:Leather Jacket with "mods(Armor,Armor - Leather)"
#MergeTags in EQ:Light Scale Armor with "mods(Armor,Armor - Metal)"
#MergeTags in EQ:Lorica Segmentata with "mods(Armor,Armor - Metal,Armor - Plate)"
#MergeTags in EQ:Mail Hauberk with "mods(Armor,Armor - Metal,Armor - Mail)"
#MergeTags in EQ:Mail Shirt with "mods(Armor,Armor - Metal,Armor - Mail)"
#MergeTags in EQ:Scale Armor with "mods(Armor,Armor - Metal)"
#MergeTags in EQ:Double Mail Hauberk with "mods(Armor,Armor - Metal,Armor - Mail)"
#MergeTags in EQ:Heavy Steel Corselet with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"
#MergeTags in EQ:Steel Breastplate with "mods(Armor,Armor - Metal,Armor - Plate)"
#MergeTags in EQ:Steel Corselet with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"
#MergeTags in EQ:Steel Laminate Plate with "mods(Armor,Armor - Metal,Armor - Plate)"
#MergeTags in EQ:Buff Leather Coat with "mods(Armor,Armor - Leather,Armor - Hard Leather)"

*<Dungeon Fantasy - Armor - Low Tech Limb Armor>
#MergeTags in EQ:Bronze Armbands with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"
#MergeTags in EQ:Bronze Greaves with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"
#MergeTags in EQ:Cloth Sleeves with "mods(Armor,Armor - Cloth)"
#MergeTags in EQ:Heavy Leather Leggings with "mods(Armor,Armor - Leather,Armor - Hard Leather)"
#MergeTags in EQ:Heavy Leather Sleeves with "mods(Armor,Armor - Leather,Armor - Hard Leather)"
#MergeTags in EQ:Leather Leggings with "mods(Armor,Armor - Leather)"
#MergeTags in EQ:Leather Pants with "mods(Armor,Armor - Leather)"
#MergeTags in EQ:Studded Leather Skirt with "mods(Armor,Armor - Leather,Armor - Hard Leather)"
#MergeTags in EQ:Mail Leggings with "mods(Armor,Armor - Metal,Armor - Mail)"
#MergeTags in EQ:Mail Sleeves with "mods(Armor,Armor - Metal,Armor - Mail)"
#MergeTags in EQ:Scale Leggings with "mods(Armor,Armor - Metal)"
#MergeTags in EQ:Scale Sleeves with "mods(Armor,Armor - Metal)"
#MergeTags in EQ:Heavy Plate Arms with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"
#MergeTags in EQ:Heavy Plate Legs with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"
#MergeTags in EQ:Plate Arms with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"
#MergeTags in EQ:Plate Legs with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"

*<Dungeon Fantasy - Armor - Low Tech Headgear>
#MergeTags in EQ:Bronze Helmet with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"
#MergeTags in EQ:Bronze Pot-Helmet with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"
#MergeTags in EQ:Cloth Cap with "mods(Armor,Armor - Cloth)"
#MergeTags in EQ:Leather Cap with "mods(Armor,Armor - Leather)"
#MergeTags in EQ:Leather Helm with "mods(Armor,Armor - Leather,Armor - Hard Leather)"
#MergeTags in EQ:Legionary Helmet with "mods(Armor,Armor - Metal,Armor - Plate)"
#MergeTags in EQ:Mail Coif with "mods(Armor,Armor - Metal,Armor - Mail)"
#MergeTags in EQ:Barrel Helm with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"
#MergeTags in EQ:Face Mask with "mods(Armor,Armor - Metal,Armor - Plate)"
#MergeTags in EQ:Greathelm with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Heavy Plate)"
#MergeTags in EQ:Pot-Helm with "mods(Armor,Armor - Metal,Armor - Plate)"

*<Dungeon Fantasy - Armor - Low Tech Gloves & Footwear>
#MergeTags in EQ:Cloth Gloves with "mods(Armor,Armor - Cloth)"
#MergeTags in EQ:Leather Gloves with "mods(Armor,Armor - Leather,Armor - Hard Leather)"
#MergeTags in EQ:Gauntlets with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"
#MergeTags in EQ:Heavy Gauntlets with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"
#MergeTags in EQ:Sandals with "mods(Armor,Armor - Leather)"
#MergeTags in EQ:Shoes with "mods(Armor,Armor - Leather)"
#MergeTags in EQ:Boots with "mods(Armor,Armor - Leather,Armor - Hard Leather)"
#MergeTags in EQ:Sollerets with "mods(Armor,Armor - Metal,Armor - Plate,Armor - Bronze Plate)"

************************************************************************************************************************
*GURPS Low-Tech Armor *************** HARD LEATHER
************************************************************************************************************************
#MergeTags in "EQ:Leather, Medium (%Body Armor_1alias%%Body Armor_alt2list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Leather, Heavy (%Body Armor_1alias%%Body Armor_alt2list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Layered Leather, Light (%Body Armor_1alias%%Body Armor_alt2list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Layered Leather, Medium (%Body Armor_1alias%%Body Armor_alt2list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Layered Leather, Heavy (%Body Armor_1alias%%Body Armor_alt2list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Hardened Leather, Medium (%Body Armor_1alias%%Body Armor_alt2list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Hardened Leather, Heavy (%Body Armor_1alias%%Body Armor_alt2list%)" with "mods(Armor - Hard Leather)"

#MergeTags in "EQ:Leather, Medium (%Helmet_Alt1List%%options1alias%%optionsalt2list%%Paddingalt1list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Leather, Heavy (%Helmet_Alt1List%%options1alias%%optionsalt2list%%Paddingalt1list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Layered Leather, Light (%Helmet_Alt1List%%options1alias%%optionsalt2list%%Paddingalt1list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Layered Leather, Medium (%Helmet_Alt1List%%options1alias%%optionsalt2list%%Paddingalt1list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Layered Leather, Heavy (%Helmet_Alt1List%%options1alias%%optionsalt2list%%Paddingalt1list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Hardened Leather, Medium (%Helmet_Alt1List%%options1alias%%optionsalt2list%%Paddingalt1list%)" with "mods(Armor - Hard Leather)"
#MergeTags in "EQ:Hardened Leather, Heavy (%Helmet_Alt1List%%options1alias%%optionsalt2list%%Paddingalt1list%)" with "mods(Armor - Hard Leather)"

*******************************************************************************************************\[STOP]
[EQUIPMENT]
******************************************************************************************************\[START]
<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Camping & Survival Gear>
#ReplaceTags in "EQ:Blanket" with "description(Notes: A warm bedroll.)"
Canteen, basecost(10), baseweight(3), description(Notes: Canteen. Miniature wooden barrel on a strap. Won't shatter in combat! Holds 1 quart of liquid (2 lbs. if water).), page(DF1:23), mods(Equipment), isparent(yes)
#ReplaceTags in "EQ:Personal Basics" with "description(Notes: Minimum gear for camping: -2 to any Survival roll without it. Includes utensils, tinderbox, and flint and steel.)"
#ReplaceTags in "EQ:Pouch" with "description(Notes: Holds 3 lbs. of small items (coins, personal basics, etc.))"
#ReplaceTags in "EQ:Purse" with "description(Notes: Holds 3 lbs. of small items (coins, personal basics, etc.))"
#Clone "EQ:Traveler's Rations" as "EQ:Rations"

#ReplaceTags in "EQ:Sleeping Fur" with "description(Notes: A winter bedroll, suitable for ice caves, arctic adventures, etc.)"
"Sundial, Miniature", basecost(40), baseweight(1), description(Notes:On a neck chain. Tells time, and allows Navigation at only -1 for equipment - but only in sunlight.), page(DF1:23), mods(Equipment)
Water (per pint), techlvl(0), basecost(0), baseweight(1), description(TL:0), page(B288), mods(Equipment)
Water (per half-pint), techlvl(0), basecost(0), baseweight(0.5), description(TL:0), page(B288), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Containers>
"Barrel", basecost(65), baseweight(20), description(Notes: Holds 5 gallons of liquid (40 lbs. if water). DR 1, HP 11), page(DF1:24), mods(Equipment), isparent(yes)
"Bottle", basecost(3), baseweight(1), description(Notes: Holds 1 quart of liquid (2 lbs. if water). DR 1, HP 4), page(DF1:24), mods(Equipment), isparent(yes)
"Bottle, Small", basecost(2), baseweight(0.5), description(Notes: Holds 1 pint of liquid (1 lb. if water). DR 1, HP 2), page(DF1:24), mods(Equipment), isparent(yes)
"Bucket", basecost(15), baseweight(4), description(Notes: With rope handle. Holds 1 gallon of liquid (8 lbs. if water). DR 1, HP 6), page(DF1:24), mods(Equipment), isparent(yes)
"Chest, Wooden", basecost(200), baseweight(40), description(Notes: Holds 400 lbs. or 5 cubic feet of loot. Has brackets for two poles; add Basic Lift of carriers to assess encumbrance. DR 2, HP 14), page(DF1:24), mods(Equipment), isparent(yes)
"Sack", basecost(30), baseweight(3), description(Notes: Holds 40 lbs. of loot. Requires two hands or a pole. DR 1, HP 5), page(DF1:24), mods(Equipment), isparent(yes)
"Strongbox, Iron", basecost(250), baseweight(15), description(Notes: Holds 40 lbs. of coins or other small items. DR 12, HP 10), page(DF1:24), mods(Equipment), isparent(yes)
"Vial, Crystal", basecost(5), baseweight(0.25), description(Notes: Holds half a pint of liquid (0.5 lb. if water). Thick, with stopper - good for collecting corrosive blood, etc. DR 1, HP 1), page(DF1:24), mods(Equipment), isparent(yes)

<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Light Sources>
"Candle, Beeswax", basecost(5), baseweight(1), description(Notes: Sufficient to read by. Lasts 24 hrs.), page(B288), mods(Equipment)
"Candle, Tallow", basecost(0.5), baseweight(1), description(Notes: Smell may attract monsters! Lasts 12 hrs.), page(B288), mods(Equipment)
Lantern, basecost(20), baseweight(2), description(Notes: Eliminates darkness penalties in a two-yard radius. Requires a hand. Burns for 24 hours on 1 pint of oil.), page(DF1:24), mods(Equipment)
Oil (per pint), basecost(2), baseweight(1), description(Notes: For lanterns. Not useful as a flaming weapon.), page(DF1:24), mods(Equipment)
Torch, basecost(3), baseweight(1), description(Notes: Eliminates darkness penalties in a two-yard radius. Requires a hand. Burns for 1hr.), page(DF1:24), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Medical Gear>
Bandages, basecost(10), baseweight(1), description(Notes: Cloth bandages for half-dozen wounds. Basic equipment for First Aid skill.), page(DF1:24), mods(Equipment)
First Aid Kit, basecost(50), baseweight(2), description(Notes: A complete kit for treating wounds. +1 to First Aid skill.), page(DF1:24), mods(Equipment), conditional(+1 to "SK:First Aid")
Surgical Instruments, basecost(300), baseweight(15), description(Notes: Basic equipment for Surgery skill. Also useful for removing mana organs, eyeballs, etc., from dead monsters without ruining them.), page(DF1:24), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Miscellaneous Hardware>
#MergeTags in "EQ:Cord, 3/16'' (per 10 yards)" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Miscellaneous Hardware)"
#Clone "EQ:Iron Spike, Piton" as "EQ:Iron Spike"

#MergeTags in "EQ:Iron Spike" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Miscellaneous Hardware)"
"Ladder, 10'", basecost(25), baseweight(15), description(Notes: Wooden. For scaling walls and crossing chasms.), page(DF1:24), modifiers(Equipment)
#MergeTags in "EQ:Pole, 6'" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Miscellaneous Hardware)"
#MergeTags in "EQ:Pole, 10'" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Miscellaneous Hardware)"
#MergeTags in "EQ:Rope, 3/8'' (per 10 yards)" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Miscellaneous Hardware)"
#MergeTags in "EQ:Rope, 3/4'' (per 10 yards)" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Miscellaneous Hardware)"

<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Musical Instruments>
Drum, basecost(40), baseweight(2), description(Notes: Audible for miles! Two-handed.), page(DF1:24), modifiers(Equipment)
Harp, basecost(250), baseweight(3), description(Notes: Can play softly enough not to be heard through a door. Two-handed.), page(DF1:24), modifiers(Equipment)
Zither, basecost(250), baseweight(3), description(Notes: Can play softly enough not to be heard through a door. Two-handed.), page(DF1:24), modifiers(Equipment)
Horn, basecost(100), baseweight(2), description(Notes: Audible for miles! Two-handed; speech is impossible.), page(DF1:24), modifiers(Equipment)
Stringed, basecost(150), baseweight(5), description(Notes: Cittern, lute, oud, etc. Two-handed.), page(DF1:24), modifiers(Equipment)
#Clone "EQ:Stringed" as "EQ:Cittern"
#Clone "EQ:Stringed" as "EQ:Lute"
#Clone "EQ:Stringed" as "EQ:Oud"
Whistle, basecost(5), baseweight(0.1), description(Notes: For signalling - not suitable for Bard-Song.), page(DF1:24), modifiers(Equipment)
Woodwind, basecost(40), baseweight(1), description(Notes: Bamboo flute, tin whistle, or similar. Two-handed; speech is impossible.), page(DF1:24), modifiers(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Tools>
#MergeTags in "EQ:Balance & Weights" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Tools)"
"Crowbar, 3'", basecost(20), baseweight(3), description(Notes: Treat as small mace in combat, at -1 to skill.), page(DF1:24), calcrange(yes),
		newmode(Swing, damage(sw+2), damtype(cr), reach(1), parry(0U), minst(10), notes([1]), skillused(SK:Axe/Mace-1, ST:DX-6, SK:Flail-5, SK:Two-Handed Axe/Mace-4)),
		newmode(Thrown, damage(sw+2), damtype(cr), acc(1), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), shots(T(1)), minst(10), bulk(-3), skillused(SK:Thrown Weapon (Axe/Mace)-1, ST:DX-5))
File, basecost(40), baseweight(1), description(Notes: Can saw through hinge, padlock, etc., in (DR + HP) minutes.)
Hatchet (tool), basecost(15), baseweight(2), description(Notes: For Forced Entry, cutting firewood, etc. Treat as a hatchet in combat, at -1 to skill.), page(DF1:24), mods(Equipment), calcrange(yes),
	newmode(Swing, damage(sw), damtype(cut), reach(1), parry(0), minst(8), notes([1]), skillused(SK:Axe/Mace-1, ST:DX-6, SK:Flail-5, SK:Two-Handed Axe/Mace-4)),
	newmode(Thrown, damage(sw), damtype(cut), acc(1), rangehalfdam(ST*1.5), rangemax(ST*2.5), rof(1), shots(T(1)), minst(8), bulk(-2), skillused(SK:Thrown Weapon (Axe/Mace)-1, ST:DX-5))
Mallet, basecost(15), baseweight(3), page(DF1:24), mods(Equipment), calcrange(yes),
	newmode(Swing, damage(sw+2), damtype(cr), reach(1), parry(0U), minst(10), notes([1]), skillused(SK:Axe/Mace-1, ST:DX-6, SK:Flail-5, SK:Two-Handed Axe/Mace-4)),
	newmode(Thrown, damage(sw+2), damtype(cr), acc(1), rangehalfdam(ST*1), rangemax(ST*1.5), rof(1), shots(T(1)), minst(10), bulk(-3), skillused(SK:Thrown Weapon (Axe/Mace)-1, ST:DX-5))
#MergeTags in "EQ:Pickaxe" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Tools)"
#MergeTags in "EQ:Saw" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Tools)"
#MergeTags in "EQ:Shovel" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Tools)"
"Tool Kit, Backpack (Armoury)", basecost(600), baseweight(20), description(Notes: Basic equipment for one of Armoury, Smith, etc. Other skills can use it, but at -2.), page(DF1:24), mods(Equipment)
"Tool Kit, Backpack (Smith)", basecost(600), baseweight(20), description(Notes: Basic equipment for one of Armoury, Smith, etc. Other skills can use it, but at -2.), page(DF1:24), mods(Equipment)
"Tool Kit, Backpack (Carpentry)", basecost(600), baseweight(20), description(Notes: Basic equipment for one of Armoury, Smith, etc. Other skills can use it, but at -2.), page(DF1:24), mods(Equipment)
"Tool Kit, Backpack (Masonry)", basecost(600), baseweight(20), description(Notes: Basic equipment for one of Armoury, Smith, etc. Other skills can use it, but at -2.), page(DF1:24), mods(Equipment)
#MergeTags in "EQ:Wheelbarrow" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Tools)"

<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Weapon & Combat Accessories>
"Lanyard, chain", basecost(15), baseweight(0.5), description(Notes: Lets you retrieve a dropped weapon on a DX roll. Each attempt requires a ready maneuver. Can be cut: -6 to hit, DR4, HP 6.), page(DF1:24), mods(Equipment)
Hip Quiver, description(Holds 20 arrows or bolts), basecost(15), baseweight(1), page(DF1:24), mods(Equipment), isparent(yes)
"Hip Quiver, Large", description(Holds 50 arrows or bolts. Two compartments), basecost(30), baseweight(2), page(DF1:24), mods(Equipment), isparent(yes)
Shoulder Quiver, description(Holds 12 arrows or bolts), basecost(10), baseweight(0.5), page(DF1:24), mods(Equipment), isparent(yes)
Whetstone, description(For sharpening weapons), basecost(5), baseweight(1), page(DF1:24), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment, Dungeon Fantasy - Miscellaneous Equipment - Writing Equipment>
"Paper, 20 sheets", basecost(20), baseweight(1), description(Notes: Paper, 20 Sheets. Heavy papyrus or similar, suitable for maps or magical writings.), page(DF1:24), mods(Equipment)
#MergeTags in "EQ:Scribe's Kit" with "cat(Dungeon Fantasy, Dungeon Fantasy - Miscellaneous Equipment , Dungeon Fantasy - Miscellaneous Equipment - Writing Equipment)"

<Dungeon Fantasy, Dungeon Fantasy - Special Orders, Dungeon Fantasy - Special Orders - Adventure-Wear>
Anti-Garrote Collar, basecost(35), baseweight(1), description(Notes: Gives +4 DR vs. strangling and garroting damage (but not neck blows). Can be worn with armor.), page(DF1:25), mods(Equipment)
Delver's Webbing, basecost(160), baseweight(3), description(Notes: Belt and suspenders with pouches for 20 lbs. of potions, gadgets, knives, etc. Readying a carried item takes just one Ready maneuver - and is a free action with a suitable Fast-Draw roll. Gives +1 to DX and Fast-Draw rolls to reach these items. Rumored to be the work of brownies!), page(DF1:25), mods(Equipment), isparent(yes)
"Helmet Lamp", description(Notes: Shuttered, hands-free lantern that throws a five-yard beam. Attaches to all popular helmet patterns. Burns for 12 hours on 1 pint of oil.), basecost(100), baseweight(2), page(DF1:25), mods(Equipment), isparent(yes)
"Potion Belt", description(Notes: Belt with four slots, each of which can carry one 'grenade' bottle or two potion vials. Wearer can reach them with Ready or Fast-Draw. Padding removes risk of accidental breakage and gives containers +2 DR vs. deliberate attacks.), basecost(60), baseweight(1), page(DF1:25), mods(Equipment), isparent(yes)
"Quick-Release Backpack", description(Notes: Holds 40 lbs. of gear. Dropping it is a free action. Items liable to break if dropped must check for this (1 on 1d if unsure).), basecost(300), baseweight(3), page(DF1:25), mods(Equipment), isparent(yes)

<Dungeon Fantasy, Dungeon Fantasy - Special Orders, Dungeon Fantasy - Special Orders - Camping and Survival Gear>
"Alchemist's Matches", description(Start fires in just one second! Waterproof tin of 50. May set fire to a pack if dropped (1 on 1d).), basecost(15), baseweight(0.25)
"Compass", description(Allows Navigation rolls at no penalty for equipment.), basecost(50), baseweight(5), page(DF1:25), mods(Equipment)
"Dwarven Rations", description(One meal of nasty, hard bread. A steady diet (a month or more) gives Resistant to Poison (+3) while continued. One meal), basecost(5), baseweight(1), page(DF1:25), mods(Equipment)
"Elven Rations", description(Tasty wafers of Essential Food. Three meals.), basecost(15), baseweight(0.5), page(DF1:25), mods(Equipment)
"Timed Candle", description(Alchemist's mixture burns at a precise rate for 12 hours. Marked in hours and minutes. Handy for timing spell durations - especially underground!), basecost(5), baseweight(1), page(DF1:25), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Special Orders, Dungeon Fantasy - Special Orders - Combat Accessories>
"Bandoleer", description( Carries 6 lbs. of throwing weapons (24 daggers, 12 packs of caltrops, 30 nageteppo, etc.). Wearer can reach them with Ready or Fast-Draw.), basecost(60), baseweight(1), page(DF1:25), mods(Equipment)
"Crossbow Rest", description(Lets a standing crossbowman brace while aiming. Takes a Ready to set up.), basecost(40), baseweight(2), page(DF1:25), mods(Equipment)
"Crossbow Sight", description(+1 Acc for aimed shots. Iron, not fragile glass.), basecost(100), baseweight(1), page(DF1:25), mods(Equipment)
"Crossbow Sling", description(Totes a loaded crossbow 'hands free,' a Ready maneuver away from shooting. Weapon safely re-slings itself when dropped (a free action).), basecost(200), baseweight(2), page(DF1:25), mods(Equipment)
"Dwarven Whetstone", description(Gives edged weapons +1 damage for sharpness with first blow that connects after sharpening (1 minute/weapon).), basecost(500), baseweight(1), page(DF1:25), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Special Orders, Dungeon Fantasy - Special Orders - Covert Ops and Security Gear>
"Bit and Brace", description(Useful for drilling peepholes. Does sw-2(2) pi++ per second to wood.), basecost(120), baseweight(5), page(DF1:25), mods(Equipment)
"Caltrops (Per hex)", description(Take a Ready maneuver to deploy. Victims who miss a Vision-2 roll step on a number of spikes equal to margin of failure. Each inflicts thr-3 imp - based on his ST - to the foot. Caltrops that penetrate DR continue to do damage each turn until removed (two Ready maneuvers).), basecost(5), baseweight(0.5), page(DF1:25), mods(Equipment)
"Climbing Spikes", description(Strap-on spikes for both hands and feet allow scaling of vertical surfaces at no penalty.), basecost(400), baseweight(4), page(DF1:25), mods(Equipment)
"Disguise Kit", description(+1 to Disguise skill.), basecost(800), baseweight(10), page(DF1:25), mods(Equipment)
"Giant Spider Silk Cord (Per 10 yards)", description(Supports 360 lbs.), basecost(100), baseweight(0.5), page(DF1:25), mods(Equipment)
"Grapnel", description(Throw to STx2 yards. Supports 300 lbs.), basecost(80), baseweight(2), page(DF1:25), mods(Equipment)
"Lockpicks", description(Basic equipment for Lockpicking skill.), basecost(50), baseweight(0.1), page(DF1:25), mods(Equipment)
"Lockpicks, Good", description(Good quality equipment for Lockpicking skill: +1 to skill.), basecost(250), baseweight(0.5), page(DF1:25), mods(Equipment)
"Lockpicks, Fine", description(Fine quality equipment for Lockpicking skill: +2 to skill.), basecost(1000), baseweight(2), page(DF1:25), mods(Equipment)
"Nageteppo, Flash", description(When hurled, everyone within 10 yards of where it lands must roll vs. HT or suffer Blindness (a Vision-Based affliction). Roll vs. HT to recover every turn.), basecost(40), baseweight(0.2), page(DF1:25), mods(Equipment)
"Nageteppo, Smoke", description(When hurled, fills a two-yard radius with smoke (-10 to Vision) for 5 seconds.), basecost(40), baseweight(0.2), page(DF1:25), mods(Equipment)
"Padlock, Cheap", description(For chests, strongboxes, etc. Cheap ones have DR 3, HP 4, and give +5 to Lockpicking;), basecost(20), baseweight(1), page(DF1:25), mods(Equipment)
"Padlock, Good", description(For chests, strongboxes, etc. Good ones have DR 6, HP 5, and give no Lockpicking modifier;), basecost(400), baseweight(2), page(DF1:25), mods(Equipment)
"Padlock, Fine", description(For chests, strongboxes, etc. Fine ones have DR 12, HP 5, and give -5 to Lockpicking;), basecost(8000), baseweight(2), page(DF1:25), mods(Equipment)
"Portable Ladder, 30'", description(Wooden slats attached to two hooked ropes. No Climbing roll required, once attached. Fits in a pack.), basecost(200), baseweight(10), page(DF1:25), mods(Equipment)
"Portable Ram", description(Miniature, steel-capped ram with handles requires two to four users. Does sw+3d+1 cr every three sec- onds. Use highest ST plus 1/5 the total of all other ST scores.), basecost(150), baseweight(35), page(DF1:25), mods(Equipment)
"Shackles", description(DR 4, HP 10.), basecost(200), baseweight(2), page(DF1:25), mods(Equipment)
"Snorkel, 6'", description(Airtight bamboo tube with mouthpiece.), basecost(30), baseweight(1), page(DF1:25), mods(Equipment)
"Spy's Horn", description(Carefully shaped hollow horn, open at both ends, allows a Hearing roll to listen through doors, shutters, etc., at a penalty equal to barrier's (DR + HP)/5.), basecost(100), baseweight(2), page(DF1:25), mods(Equipment)
"Traps, Mini-trap", description(Spring-loaded leg-hold traps. Roll vs. Traps to set. If chained or staked down, victim must break free from trap's ST to move away; 1d-1 cr, ST 8.), basecost(80), baseweight(2.5), page(DF1:25), mods(Equipment)
"Traps, Man trap", description(Spring-loaded leg-hold traps. Roll vs. Traps to set. If chained or staked down, victim must break free from trap's ST to move away; 1d+1 cr, ST 12.), basecost(180), baseweight(6), page(DF1:25), mods(Equipment)
"Traps, Monster trap", description(Spring-loaded leg-hold traps. Roll vs. Traps to set. If chained or staked down, victim must break free from trap's ST to move away; 1d+3 cr, ST 16.), basecost(320), baseweight(11), page(DF1:25), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Special Orders, Dungeon Fantasy - Special Orders - Esoteric Supplies>
"Backpack Alchemy Lab", description( Basic equipment for identifying potions and magic items with Alchemy skill; -2 to brew potions in the field.), basecost(1000), baseweight(10), page(DF1:25), mods(Equipment)
"Healer's Kit", description(Basic equipment for one specialty of Esoteric Medicine skill. Also gives +1 to First Aid skill.), basecost(200), baseweight(10), page(DF1:25), mods(Equipment)
"Holy Symbol", description(Ordinary religious symbol made of wood, cheap metal, etc., and blessed only by user's personal faith.), basecost(50), baseweight(1), page(DF1:25), mods(Equipment)
"Holy Symbol, Blessed", description(Sanctified by a high priest. Gives +1 to rolls for Exorcism, True Faith, etc. (but not clerical spells).), basecost(250), baseweight(1), page(DF1:25), mods(Equipment)
"Holy Symbol, High", description(Sanctified by head of religious order. Gives +2 to rolls for Exorcism, True Faith, etc.), basecost(1000), baseweight(1), page(DF1:25), mods(Equipment)
"Holy Water", description(Small bottle holds enough (1/2 pint) to damage an unholy creature with a suitable Weakness. Hurl it using the 'grenade' rules; see Concoctions (p.28).), basecost(15), baseweight(1), page(DF1:25), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Special Orders, Dungeon Fantasy - Special Orders - Information>
"Manual", description(Allows default rolls for one 'information' skill that normally has no default - Alchemy, Hidden Lore, etc. Roll at IQ-4 if Easy, IQ-5 if Average, IQ-6 if Hard, or IQ-7 if Very Hard.), basecost(100), baseweight(6), page(DF1:25), mods(Equipment)
"Map", description(Rugged, foldable, and reliable map of explored dungeon, city, forest, etc. Unreliable maps are cheaper), basecost(100), baseweight(0.1), page(DF1:25), mods(Equipment)
"Tome", description(As manual, but also gives those who know the skill +1 to identify items, do research, etc.), basecost(500), baseweight(12), page(DF1:25), mods(Equipment)

<Dungeon Fantasy, Dungeon Fantasy - Special Orders, Dungeon Fantasy - Special Orders - Optics>
"Bull's-Eye Lantern", description(Shuttered lantern with lens throws a 10yard beam. Requires a hand. Burns for 6 hours on 1 pint of oil.), basecost(100), baseweight(2), page(DF1:25), mods(Equipment), isparent(yes)
"Burning Glass", description(Sets fires - but only in sunlight.), basecost(40), baseweight(0.25), page(DF1:25), mods(Equipment)
"Corrective Spectacles", description(Mitigator for Bad Sight. Large and heavy, like bottle-bottoms. Give DR 1 to eyes, but break if this is penetrated!), basecost(150), baseweight(0.5), page(DF1:25), mods(Equipment)
"Mirror, Hand", description(Glass-covered bronze or lead. Useful for peering around corners.), basecost(15), baseweight(1), page(DF1:25), mods(Equipment)
"Mirror, Tall", description(Glass-covered bronze or lead. Large enough to reflect Medusa's gaze or fool stupid goblins.), basecost(125), baseweight(10), page(DF1:25), mods(Equipment)
"Telescope", description(Gives Telescopic Vision 1 (2x magnification).), basecost(500), baseweight(6), page(DF1:25), mods(Equipment)
"Tinted Goggles", description('Alchemist's goggles' grant Protected Vision, at the cost of -5 to Vision rolls. Give DR 1 to the eyes, but break if this is penetrated!), basecost(150), baseweight(0.5), page(DF1:25), mods(Equipment)

<Dungeon Fantasy - Concoctions - Chemicals>
"Acid (Grenade)", description(Ordinary acid inflicts 1d-3 corrosion damage; DR protects normally. Can instead be used to burn through a mundane lock in 3d minutes.), basecost(10), baseweight(1), page(DF1:28), mods(Equipment)
"Alchemist's Fire (Grenade)", description(Self-igniting sticky oil! A direct hit causes 1d burning damage/second for 30 seconds or until the target rolls on ground; armor DR protects at 1/5 normal. Tossed at the ground, it creates a two-yard-radius fire (1d-1 burn/second) for 30 seconds.), basecost(100), baseweight(1), page(DF1:28), mods(Equipment)
"Glow Vial (Utility)", description(Once separate pill is dropped into vial, glows brightly enough to eliminate darkness penalties in a two-yard radius for 12 hours. Includes cord for wearing around neck, light shows, etc. Liquid can instead be used to mark a glowing path through one typical dungeon level.), basecost(30), baseweight(0.5), page(DF1:28), mods(Equipment)

<Dungeon Fantasy - Concoctions - Natural Preparations>
"Anti-Toxin (Drinkable)", description(Herbal antidote for one specific non-alchemical poison or venom. Completely halts effects of that toxin after 1d minutes.), basecost(20), baseweight(0.5), page(DF1:28), mods(Equipment)
"Garlic (Bundle)", description(Repels vampires.), basecost(5), baseweight(0.25), page(DF1:28), mods(Equipment)
"Wolfsbane (Bundle)", description(Repels lycanthropes.), basecost(5), baseweight(0.25), page(DF1:28), mods(Equipment)

<Dungeon Fantasy - Concoctions - Poisons>
"Bladeblack (Utility)", description(Deadliest manmade blade venom, from the legendary Assassins' Guild. A living victim must make an immediate HT-5 roll or suffer 6d injury.), basecost(1000), baseweight(0.5), page(DF1:28), mods(Equipment)
"Demon's Brew (Grenade)", description(Respiratory agent made from demon ichor. Fumes affect a two-yard radius. Anything that breathes takes 2d injury, or only 1d with a HT roll.), basecost(500), baseweight(1), page(DF1:28), mods(Equipment)
"Monster Drool (Utility)", description(Generic blade venom made from giant centipedes, spiders, or whatever else is in season. Often used on whole quivers of arrows because it's cheap. A living victim must make an immediate HT roll or suffer 2 points of injury.), basecost(20), baseweight(0.5), page(DF1:28), mods(Equipment)
"Oozing Doom (Grenade)", description(Contact agent made from slimes. Soaks clothing - or enters cracks in manmade or natural armor - in DR seconds. Living victims then take 2d injury, or only 1d with a HT roll.), basecost(100), baseweight(1), page(DF1:28), mods(Equipment)

<Dungeon Fantasy - Concoctions - Potions>
"Agility Potion (Drinkable)", description(+1d DX for 1 hour.), basecost(700), baseweight(0.5), page(DF1:29), mods(Equipment)
"Alchemical Antidote (Drinkable)", description(Instantly negates all potions currently affecting the drinker.), basecost(400), baseweight(0.5), page(DF1:29), mods(Equipment)
"Alkahest (Grenade)", description('Universal solvent' inflicts 1d corrosion injury on any tangible foe, bypassing DR. Alternatively, dissolves a lock made from any metal in 1d minutes.), basecost(1650), baseweight(1), page(DF1:29), mods(Equipment)
"Balm of Regeneration (Drinkable)", description(Salve, not a potion. Heals user 2 HP at the cost of 1 FP, once per second, until he reaches either full HP or 0 FP.), basecost(900), baseweight(0.5), page(DF1:29), mods(Equipment)
"Death Potion (Grenade)", description(Fumes affect a two-yard radius. Targets that breathe take 4d injury, or only 2d with a HT roll.), basecost(1000), baseweight(1), page(DF1:29), mods(Equipment)
"Fire Resistance Potion (Drinkable)", description(Immunity to fire damage for 1d hours.), basecost(500), baseweight(0.5), page(DF1:29), mods(Equipment)
"Flight Potion (Drinkable)", description(Flight at Move 10 for 1 hour.), basecost(3000), baseweight(0.5), page(DF1:29), mods(Equipment)
"Great Healing Potion (Drinkable)", description(Heals 4d HP.), basecost(1000), baseweight(0.5), page(DF1:29), mods(Equipment)
"Invisibility Potion (Drinkable)", description(Grants invisibility for 1d •10 minutes or until user attacks, casts a spell, etc.), basecost(2250), baseweight(0.5), page(DF1:29), mods(Equipment)
"Invulnerability Potion (Drinkable)", description(+3 DR, cumulative with other DR, for 1d+1 hours.), basecost(2100), baseweight(0.5), page(DF1:29), mods(Equipment)
"Liquid Ice (Grenade)", description(Target takes 2d burning damage on contact due to extreme cold - not fire. Armor DR protects at 1/5 normal.), basecost(250), baseweight(1), page(DF1:29), mods(Equipment)
"Magebane (Grenade)", description(Fumes affect a two-yard radius. Wizards who breathe them can't cast spells for 1 hour.), basecost(1400), baseweight(1), page(DF1:29), mods(Equipment)
"Magic Resistance Potion (Drinkable)", description(+5 Magic Resistance (and -5 to wizardly spells) for 1 hour.), basecost(1600), baseweight(0.5), page(DF1:29), mods(Equipment)
"Major Healing Potion (Drinkable)", description(Heals 2d HP.), basecost(350), baseweight(0.5), page(DF1:29), mods(Equipment)
"Minor Healing Potion (Drinkable)", description(Heals 1d HP.), basecost(120), baseweight(0.5), page(DF1:29), mods(Equipment)
"Paut (Drinkable)", description(Restores 4 FP depleted for magic.), basecost(135), baseweight(0.5), page(DF1:29), mods(Equipment)
"Perception Potion (Drinkable)", description(+6 to Sense rolls for 3d•5 minutes.), basecost(700), baseweight(0.5), page(DF1:29), mods(Equipment)
"Sleep Potion (Grenade)", description(Fumes affect a two-yard radius. Living beings who breathe them must roll HT-4 or sleep for 16-HT hours.), basecost(500), baseweight(1), page(DF1:29), mods(Equipment)
"Speed Potion (Drinkable)", description(+1 Basic Speed and Move per dose (up to +3), for 3d•4 minutes.), basecost(550), baseweight(0.5), page(DF1:29), mods(Equipment)
"Strength Potion (Drinkable)", description(+1d ST (but no extra HP!) for 1 hour.), basecost(250), baseweight(0.5), page(DF1:29), mods(Equipment)
"Thieves' Oil (Utility)", description(Rubbed on the body, gives +5 to all rolls to escape bonds, squeeze through openings, and break free for 1d hours.), basecost(700), baseweight(0.5), page(DF1:29), mods(Equipment)
"True Water (Utility)", description(Purifies up to 100 gallons of water in a manmade container.), basecost(750), baseweight(0.5), page(DF1:29), mods(Equipment)
"Universal Antidote (Drinkable)", description(Instantly cures all poisons affecting the drinker.), basecost(750), baseweight(0.5), page(DF1:29), mods(Equipment)
"Weakness Potion (Grenade)", description(Fumes affect a two-yard radius. Living beings who breathe them have -3 ST/dose (up to -12 ST) for 1d minutes.), basecost(800), baseweight(1), page(DF1:29), mods(Equipment)
"Wisdom Potion (Drinkable)", description(+1 IQ for 1 hour.), basecost(1500), baseweight(0.5), page(DF1:29), mods(Equipment)

*******************************************************************************************************\[STOP]
[MODIFIERS]
******************************************************************************************************\[START]
<Equipment>
_Power Item, 0, shortname(Power Item), page(DF1:28), group(Equipment),
	gives(_
		=+@if(owner::cost > 26000 THEN 40 ELSE _
		@if(owner::cost > 18000 THEN 35 ELSE _
		@if(owner::cost > 12000 THEN 30 ELSE _
		@if(owner::cost > 7000 THEN 25 ELSE _
		@if(owner::cost > 6200 THEN 20 ELSE _
		@if(owner::cost > 5500 THEN 19 ELSE _
		@if(owner::cost > 4900 THEN 18 ELSE _
		@if(owner::cost > 4300 THEN 17 ELSE _
		@if(owner::cost > 3800 THEN 16 ELSE _
		@if(owner::cost > 3300 THEN 15 ELSE _
		@if(owner::cost > 2800 THEN 14 ELSE _
		@if(owner::cost > 2400 THEN 13 ELSE _
		@if(owner::cost > 2000 THEN 12 ELSE _
		@if(owner::cost > 1700 THEN 11 ELSE _
		@if(owner::cost > 1400 THEN 10 ELSE _
		@if(owner::cost > 1100 THEN 9 ELSE _
		@if(owner::cost > 880 THEN 8 ELSE _
		@if(owner::cost > 670 THEN 7 ELSE _
		@if(owner::cost > 490 THEN 6 ELSE _
		@if(owner::cost > 340 THEN 5 ELSE _
		@if(owner::cost > 220 THEN 4 ELSE _
		@if(owner::cost > 120 THEN 3 ELSE _
		@if(owner::cost > 50 THEN 2 ELSE 1_
		))))))))))))))))))))))) to ST:Power Item _
	)

Dungeon Fantasy: Power Item, 0, shortname(Power Item), page(DF1:28), group(Equipment),
	gives(_
		=+@if(owner::cost > 26000 THEN 40 ELSE _
		@if(owner::cost > 18000 THEN 35 ELSE _
		@if(owner::cost > 12000 THEN 30 ELSE _
		@if(owner::cost > 7000 THEN 25 ELSE _
		@if(owner::cost > 6200 THEN 20 ELSE _
		@if(owner::cost > 5500 THEN 19 ELSE _
		@if(owner::cost > 4900 THEN 18 ELSE _
		@if(owner::cost > 4300 THEN 17 ELSE _
		@if(owner::cost > 3800 THEN 16 ELSE _
		@if(owner::cost > 3300 THEN 15 ELSE _
		@if(owner::cost > 2800 THEN 14 ELSE _
		@if(owner::cost > 2400 THEN 13 ELSE _
		@if(owner::cost > 2000 THEN 12 ELSE _
		@if(owner::cost > 1700 THEN 11 ELSE _
		@if(owner::cost > 1400 THEN 10 ELSE _
		@if(owner::cost > 1100 THEN 9 ELSE _
		@if(owner::cost > 880 THEN 8 ELSE _
		@if(owner::cost > 670 THEN 7 ELSE _
		@if(owner::cost > 490 THEN 6 ELSE _
		@if(owner::cost > 340 THEN 5 ELSE _
		@if(owner::cost > 220 THEN 4 ELSE _
		@if(owner::cost > 120 THEN 3 ELSE _
		@if(owner::cost > 50 THEN 2 ELSE 1_
		))))))))))))))))))))))) to ST:Power Item _
	)

Dungeon Fantasy: Oversized Equipment, *2, page(DF1:28), gives(*2 to owner::baseweight), shortname(Oversized), tier(1), group(Equipment)

Dungeon Fantasy: Oversized Tool, *1.5, page(DF1:27), tier(1), group(Equipment),
	gives(_
		*1.5 to owner::baseweight,
		*1.5 to owner::minst,
		+$/textindexedvalue( {$modetag(damage)},
			( "sw+4", 2 ), ( "thr+4", 2 ),
			( "sw+5", 2 ), ( "thr+5", 2 ),
			( "sw+6", 3 ), ( "thr+6", 3 ),
			( "sw+7", 3 ), ( "thr+7", 3 ),
			( "sw+8", 4 ), ( "thr+8", 4 ),
			( "sw+9", 4 ), ( "thr+9", 4 ),
			( "sw+10", 5 ), ( "thr+10", 5 ),
		else 1 ) to owner::damage$ listAs "Damage bonus from Oversized"_
	),
	shortname(Oversized)

<Money>
Trading Character Points for Money, +1/+2, gives(+500 to ST:Money, +500 to ST:Remaining Funds listAs "Trading Character Points for Money"), page(B26)

<_Power Modifier>
Bard Song, -30%, group(_Power Modifier), page(DF1:21)
Chi, -10%, group(_Power Modifier), page(DF1:21)
Druidic, -10%, group(_Power Modifier), page(DF1:22)
Holy, -10%, group(_Power Modifier), page(DF1:22)

<True Faith>
Turning, +65%, group(True Faith), page(DF1:22)

<Melee Quality>
Dungeon Fantasy: Quality: Balanced, +4 CF, gives(=+1 to owner::skillscore), page(DF1:26), group(Melee Quality), shortname(Balanced)
* Balanced: +1 to skill with any melee weapon or projectile (arrow, bolt etc.), or +1 Acc with a blowpipe, bow, or crossbow. All weapons except sticks and improvised weapons: +4 CF.

Dungeon Fantasy: Materials: Dwarven, +4 CF, displaycost(+4CF), gives(=nobase to owner::parry$, =+0 to owner::parry), page(DF1:26), group(Melee Quality), shortname(Dwarven)
* Dwarven: Changes a Parry of 0U to 0, letting a weapon that can't normally parry and attack on the same turn do just that. Doesn't prevent the weapon from becoming unready after attacking (á on ST). Any unbalanced weapon: +4 CF.
* FIXME: Can be applied to any weapon - should actually be restricted to 0U weapons that aren't Meteoric, Orichalcum, or Silver.

Dungeon Fantasy: Materials: Meteoric, +19 CF, page(DF1:27), group(Melee Quality), shortname(Meteoric)
* Meteoric†: Meteoric iron is immune to magic - Reverse Missiles, Steelwraith, Turn Blade, and so on won't stop it, and Shape Metal, Shatter, and the like can't destroy it. Of course, it can't benefit from enchantments, weapon-enhancing spells, or magical repairs. Any metal weapon: +19 CF.
* FIXME: Can be applied to any weapon - should actually be restricted to weapons that aren't Dwarven, Orichalcum, or Silver.

Dungeon Fantasy: Materials: Orichalcum, +29 CF, gives(=nobase$ to owner::break), page(DF1:27), group(Melee Quality), shortname(Orichalcum)
* FIXME: Can be applied to any weapon - should actually be restricted to weapons that aren't Dwarven, Meteoric, or Silver.

Dungeon Fantasy: Materials: Ornate, +1 CF/+4 CF/+9 CF, conditional(+1 to ST:Reaction), upto(3), page(DF1:27), group(Melee Quality), shortname(Ornate)
Dungeon Fantasy: Materials: Silver, +19 CF, gives(=+2 to owner::break), page(DF1:27), group(Melee Quality), shortname(Silver)
* FIXME: Can be applied to any weapon - should actually be restricted to weapons that aren't Dwarven, Meteoric, or Orichalcum.

"Dungeon Fantasy: Materials: Silver-coated", +2 CF, page(DF1:27), group(Melee Quality), shortname(Silver-coated)

_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Melee Quality), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)

Dungeon Fantasy: Oversized Weapon, *1.5, page(DF1:27), tier(1),
	gives(_
		*1.5 to owner::baseweight,
		*1.5 to owner::minst,
		+$/textindexedvalue( {$modetag(damage)},
			( "sw+4", 2 ), ( "thr+4", 2 ),
			( "sw+5", 2 ), ( "thr+5", 2 ),
			( "sw+6", 3 ), ( "thr+6", 3 ),
			( "sw+7", 3 ), ( "thr+7", 3 ),
			( "sw+8", 4 ), ( "thr+8", 4 ),
			( "sw+9", 4 ), ( "thr+9", 4 ),
			( "sw+10", 5 ), ( "thr+10", 5 ),
		else 1 ) to owner::damage$ listAs "Damage bonus from Oversized"_
	),
	shortname(Oversized),
	group(Melee Quality)
* Oversized: plus 1/2 of damage bonus, round down,  minimum 1

<Cutting Class Quality>
Dungeon Fantasy: Quality: Fine, +9 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(DF1:26), group(Cutting Class Quality), shortname(Fine)

<Crushing/Imp Class Quality>
Dungeon Fantasy: Quality: Fine, +2 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Quality: Fine", -1 to owner::break), page(DF1:26), group(Crushing/Imp Class Quality), shortname(Fine)

<Sword Class Quality>
Dungeon Fantasy: Quality: Fine, +3 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine", -1 to owner::break), page(DF1:26), group(Sword Class Quality), shortname(Fine)
Dungeon Fantasy: Quality: Very Fine, +19 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Very Fine", -2 to owner::break), page(DF1:26), group(Sword Class Quality), shortname(Very Fine)

<Bow Quality>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Bow Quality), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)
Dungeon Fantasy: Quality: Balanced, +4 CF, gives(=+1 to owner::acc), page(DF1:26), group(Bow Quality), shortname(Balanced)

* Elven: Lets a bow shoot at +2 to ST for range and damage purposes; e.g., a ST 11 elf could draw a ST 13 bow. Any bow (not crossbow): +16 CF.
* Dungeon Fantasy: Elven, +1600%, gives(=nobase$ to owner::damagebasedon, ="ST:Striking ST"+2 to owner::damagebasedon), page(DF1:26), group(Bow Quality), shortname(Elven)
Dungeon Fantasy: Materials: Elven, +16 CF, gives(+2 to owner::effectivest), page(DF1:26), group(Bow Quality), shortname(Elven)
* FIXED: does not actually adjust weapon strength.

Dungeon Fantasy: Quality: Fine, +3 CF, gives(*1.2 to owner::rangehalfdam, *1.2 to owner::rangemax), page(DF1:26), group(Bow Quality), shortname(Fine)
Dungeon Fantasy: Materials: Ornate, +1 CF/+4 CF/+9 CF, conditional(+1 to ST:Reaction), upto(3), page(DF1:27), group(Bow Quality), shortname(Ornate)

Dungeon Fantasy: Oversized Weapon, *1.5, page(DF1:27), tier(1),
	gives(_
		*1.5 to owner::baseweight,
		*1.5 to owner::minst,
		+$/textindexedvalue( {$modetag(damage)},
			( "sw+4", 2 ), ( "thr+4", 2 ), ( "@thr(me::weaponst)+4", 2 ),
			( "sw+5", 2 ), ( "thr+5", 2 ), ( "@thr(me::weaponst)+5", 2 ),
			( "sw+6", 3 ), ( "thr+6", 3 ), ( "@thr(me::weaponst)+6", 3 ),
			( "sw+7", 3 ), ( "thr+7", 3 ), ( "@thr(me::weaponst)+7", 3 ),
			( "sw+8", 4 ), ( "thr+8", 4 ), ( "@thr(me::weaponst)+8", 4 ),
			( "sw+9", 4 ), ( "thr+9", 4 ), ( "@thr(me::weaponst)+9", 4 ),
			( "sw+10", 5 ), ( "thr+10", 5 ), ( "@thr(me::weaponst)+10", 5 ),
		else 1 ) to owner::damage$ listAs "Damage bonus from Oversized"_
	),
	shortname(Oversized),
	group(Bow Quality)
* Oversized: plus 1/2 of damage bonus, round down,  minimum 1

<Arrow>
Dungeon Fantasy: Quality: Balanced, +4 CF, gives(=+1 to owner::skillscore), shortname(Finef)
Dungeon Fantasy: Materials: Silver, +19 CF, gives(=+2 to owner::break), page(DF1:27), group(Arrow), shortname(Silver)
"Dungeon Fantasy: Materials: Silver-coated", +2 CF, page(DF1:27), group(Arrow), shortname(Silver-coated)
Dungeon Fantasy: Materials: Meteoric, +19 CF, page(DF1:27), group(Melee Quality), shortname(Meteoric)
Dungeon Fantasy: Materials: Orichalcum, +29 CF, gives(=nobase$ to owner::break), page(DF1:27), group(Melee Quality), shortname(Orichalcum)

<Shield>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Shield), page(DF1:14), shortname(Weapon Bond)
Dungeon Fantasy: Quality: Balanced, +4 CF, gives(=+1 to owner::skillscore), page(DF1:27), group(Shield), shortname(Balanced)
Dungeon Fantasy: Materials: Dwarven, +4 CF, gives(=*2 to owner::baseweight, +1 owner::damage), page(DF1:27), group(Shield), shortname(Dwarven)
Dungeon Fantasy: Quality: Fine, +9 CF, gives(=*3/4 to owner::baseweight), page(DF1:27), group(Shield), shortname(Fine)
Dungeon Fantasy: Materials: Meteoric, +99 CF, gives(=*2 to owner::baseweight, +1 owner::damage), page(DF1:27), group(Shield), shortname(Meteoric)
Dungeon Fantasy: Materials: Ornate, +1 CF/+4 CF/+9 CF, conditional(+1 to ST:Reaction), upto(3), page(DF1:27), group(Shield), shortname(Ornate)
"Dungeon Fantasy: Materials: Mirrored", +2 CF/+6 CF, upto(1), levelnames(,), page(DF1:27), group(Shield), shortname(Mirrored),
			formula(_
					@if(_
						@ownerhasmod(Dungeon Fantasy: Materials: Meteoric) + _
						@ownerhasmod(Dungeon Fantasy: Materials: Orichalcum) + _
						@ownerhasmod(Dungeon Fantasy: Materials: Dwarven) _
						> 0 THEN 2 ELSE 6_
						)_
					), forceformula(yes)

* fixme: try to implement needs() or something
* fixme: add a mode for reflecting curses
Dungeon Fantasy: Materials: Orichalcum, +149 CF, gives(*2/3 to owner::baseweight), page(DF1:27), group(Shield), shortname(Orichalcum)
Dungeon Fantasy: Oversized Shield, *1.5, page(DF1:27), tier(1), group(Shield),
	gives(_
		*1.5 to owner::baseweight,
		*1.5 to owner::minst,
		+$/textindexedvalue( {$modetag(damage)},
			( "sw+4", 2 ), ( "thr+4", 2 ),
			( "sw+5", 2 ), ( "thr+5", 2 ),
			( "sw+6", 3 ), ( "thr+6", 3 ),
			( "sw+7", 3 ), ( "thr+7", 3 ),
			( "sw+8", 4 ), ( "thr+8", 4 ),
			( "sw+9", 4 ), ( "thr+9", 4 ),
			( "sw+10", 5 ), ( "thr+10", 5 ),
		else 1 ) to owner::damage$ listAs "Damage bonus from Oversized"_
	),
	shortname(Oversized)
* Oversized: plus 1/2 of damage bonus, round down,  minimum 1

<Armor>
Dungeon Fantasy: Fine, +9 CF, gives(=*3/4 to owner::baseweight), page(DF1:27), group(Armor), shortname(Fine)
Dungeon Fantasy: Ornate, +1 CF/+4 CF/+9 CF, conditional(+1 to ST:Reaction), upto(3), page(DF1:27), group(Armor), shortname(Ornate)
Dungeon Fantasy: Oversized Armor, *2, page(DF1:28), gives(*2 to owner::baseweight), shortname(Oversized), tier(1)

<Armor - Cloth>
* Giant Spider Silk: Improves cloth armor from DR 1 to DR 2, and allows it to be worn under other armor, for +2 DR, with- out the DX penalty for layering. +99 CF.
Dungeon Fantasy: Giant Spider Silk, +99 CF, gives(+1 to owner::dr), page(DF1:27), group(Armor - Cloth), shortname(Giant Spider Silk)

<Armor - Hard Leather>
* Dragonhide*: Any hard leather armor (DR 2) can be drag- onhide. This provides from +1 to +4 DR, depending on the dragon's age (elder dragonhide has up to +7 DR, but isn't for sale). It also gives -3 reactions from dragons! Weight and cost depend on DR bonus (treat ìneg.î weight as 0.5 lb to begin with): +1 DR is 1.25 times weight and +37 CF; +2 DR is 1.5 times weight and +44 CF; +3 DR is 1.75 times weight and +52 CF; and +4 DR is 2 times weight and +59 CF.
Dungeon Fantasy: Dragonhide, +37 CF/+44 CF/+52 CF/+59 CF, gives(+1 to owner::dr, =*@indexedvalue(me::level, 1.25, 1.5, 1.75, 2) to owner::baseweight), upto(4), page(DF1:27), group(Armor - Hard Leather), shortname(Dragonhide)

<Armor - Metal>
* Meteoric†: Resists magic as for the weapon modifier (above). Any metal armor: +19 CF.
Dungeon Fantasy: Meteoric, +19 CF, page(DF1:27), group(Armor - Metal), shortname(Meteoric)

<Armor - Mail>
* Elven: Elven mail uses the higher DR listed for the base armor against all damage - don't reduce its DR vs. crushing blows. Any mail: +3 CF.
Dungeon Fantasy: Elven, +3 CF, page(DF1:27), group(Armor - Metal), shortname(Elven)

* Thieves': Blackened mail woven for maximum flexibility and minimum noise. Ignore its weight for encumbrance purposes when making Climbing and Stealth rolls. Any mail: +3 CF.
"Dungeon Fantasy: Thieves'", +3 CF, page(DF1:27), group(Armor - Metal), shortname(Thieves)

<Armor - Plate>
* Spiked: Lets the wearer roll DX-4 to stab each foe in close combat with him for 1d-2 imp, once per turn, as a free action. Anyone who strikes him with an unarmed attack is hit immediately and automatically - and a bite, slam, or Constriction Attack means that attacker suffers maximum damage (4 points). Any plate armor: +2 CF.
Dungeon Fantasy: Spiked, +2 CF, page(DF1:27), group(Armor - Plate),
	addmode(Spikes, damage(1d-2), damtype(imp), reach(C), skillused(ST:DX-4), parry(No)), shortname(Spiked)

<Armor - Bronze Plate>
* Orichalcum*†: Provides full DR at just1/3 the usual weight! Any bronze plate armor (assume that gauntlets and sollerets can be bronze): +29 CF.
Dungeon Fantasy: Materials: Orichalcum, +29 CF, gives(=*1/3 to owner::baseweight), page(DF1:27), group(Armor - Bronze Plate), shortname(Orichalcum)

<Armor - Heavy Plate>
* Dwarven*: Dwarves can forge any DR 6-7 plate armor to be extra-thick. This raises weight: +1 DR weighs 1.2 times as much, +2 DR weighs 1.4 times as much, and +3 DR weighs 1.6 times as much. Cost depends on DR bonus: +1 DR is +1 CF, +2 DR is +2 CF, and +3 DR is +3 CF.
Dungeon Fantasy: Dwarven, +1 CF/+2 CF/+3 CF, gives(+1 to owner::dr, =*@indexedvalue(me::level, 1.2, 1.4, 1.6, 1.8) to owner::baseweight), page(DF1:27), group(Armor - Heavy Plate), shortname(Dwarven)

*******************************************************************************************************\[STOP]
[SPELLS]
******************************************************************************************************\[START]

<~Druidic - Air>
<~Druidic - Animal>
<~Druidic - Body Control>
<~Druidic - Communication & Empathy>
<~Druidic - Earth>
<~Druidic - Enchantment>
<~Druidic - Fire>
<~Druidic - Food>
<~Druidic - Gate>
<~Druidic - Healing>
<~Druidic - Illusion & Creation>
<~Druidic - Knowledge>
<~Druidic - Light & Darkness>
<~Druidic - Making & Breaking>
<~Druidic - Meta-Spells>
<~Druidic - Mind Control>
<~Druidic - Movement>
<~Druidic - Necromancy>
<~Druidic - Plant>
<~Druidic - Protection & Warning>
<~Druidic - Sound>
<~Druidic - Technological>
<~Druidic - Technology>
<~Druidic - Water>
<~Druidic - Weather>
<~Druidic PI 1>
<~Druidic PI 2>
<~Druidic PI 3>
<~Druidic PI 4>
<~Druidic PI 5>
<~Druidic PI 6>
<~Holy - Air>
<~Holy - Animal>
<~Holy - Body Control>
<~Holy - Communication & Empathy>
<~Holy - Earth>
<~Holy - Enchantment>
<~Holy - Fire>
<~Holy - Food>
<~Holy - Gate>
<~Holy - Healing>
<~Holy - Illusion & Creation>
<~Holy - Knowledge>
<~Holy - Light & Darkness>
<~Holy - Making & Breaking>
<~Holy - Meta-Spells>
<~Holy - Mind Control>
<~Holy - Movement>
<~Holy - Necromancy>
<~Holy - Plant>
<~Holy - Protection & Warning>
<~Holy - Sound>
<~Holy - Technological>
<~Holy - Technology>
<~Holy - Water>
<~Holy - Weather>
<~Holy PI 1>
<~Holy PI 2>
<~Holy PI 3>
<~Holy PI 4>
<~Holy PI 5>
<~Holy PI 6>

<~Druidic>

* PI 1
#Clone "SP:Beast-Rouser"  as "SP:Beast-Rouser (Druidic)"
#ReplaceTags in "SP:Beast-Rouser (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Beast-Soother"  as "SP:Beast-Soother (Druidic)"
#ReplaceTags in "SP:Beast-Soother (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Detect Magic"  as "SP:Detect Magic (Druidic)"
#ReplaceTags in "SP:Detect Magic (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Knowledge), shortcat(Dru, K), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Detect Poison"  as "SP:Detect Poison (Druidic)"
#ReplaceTags in "SP:Detect Poison (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Protection & Warning, ~Druidic - Healing), shortcat(Dru, Pr, H), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Extinguish Fire"  as "SP:Extinguish Fire (Druidic)"
#ReplaceTags in "SP:Extinguish Fire (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Fire), shortcat(Dru, Fi), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Find Direction"  as "SP:Find Direction (Druidic)"
#ReplaceTags in "SP:Find Direction (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Knowledge), shortcat(Dru, K), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Hawk Vision"  as "SP:Hawk Vision (Druidic)"
#ReplaceTags in "SP:Hawk Vision (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Light & Darkness), shortcat(Dru, L), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Identify Plant"  as "SP:Identify Plant (Druidic)"
#ReplaceTags in "SP:Identify Plant (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Master"  as "SP:Master (Druidic)"
#ReplaceTags in "SP:Master (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:No-Smell"  as "SP:No-Smell (Druidic)"
#ReplaceTags in "SP:No-Smell (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Purify Air"  as "SP:Purify Air (Druidic)"
#ReplaceTags in "SP:Purify Air (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Purify Earth"  as "SP:Purify Earth (Druidic)"
#ReplaceTags in "SP:Purify Earth (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Earth, ~Druidic - Plant), shortcat(Dru, Ea, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Purify Water"  as "SP:Purify Water (Druidic)"
#ReplaceTags in "SP:Purify Water (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Quick March"  as "SP:Quick March (Druidic)"
#ReplaceTags in "SP:Quick March (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Movement), shortcat(Dru, Mo), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Recover Energy"  as "SP:Recover Energy (Druidic)"
#ReplaceTags in "SP:Recover Energy (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Healing), shortcat(Dru, H), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Seek Coastline"  as "SP:Seek Coastline (Druidic)"
#ReplaceTags in "SP:Seek Coastline (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Seek Earth"  as "SP:Seek Earth (Druidic)"
#ReplaceTags in "SP:Seek Earth (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Seek Food"  as "SP:Seek Food (Druidic)"
#ReplaceTags in "SP:Seek Food (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Food), shortcat(Dru, Fo), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Seek Pass"  as "SP:Seek Pass (Druidic)"
#ReplaceTags in "SP:Seek Pass (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Seek Plant"  as "SP:Seek Plant (Druidic)"
#ReplaceTags in "SP:Seek Plant (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Seek Water"  as "SP:Seek Water (Druidic)"
#ReplaceTags in "SP:Seek Water (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Sense Life"  as "SP:Sense Life (Druidic)"
#ReplaceTags in "SP:Sense Life (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Communication & Empathy), shortcat(Dru, C), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Tell Position"  as "SP:Tell Position (Druidic)"
#ReplaceTags in "SP:Tell Position (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Knowledge), shortcat(Dru, K), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Umbrella"  as "SP:Umbrella (Druidic)"
#ReplaceTags in "SP:Umbrella (Druidic)" with "cat(~Druidic, ~Druidic PI 1, ~Druidic - Water, ~Druidic - Protection & Warning), shortcat(Dru, Wa, Pr), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), magery(PI 1), description(Prereq: Power Investiture (Druidic) 1)"

* PI 2
#Clone "SP:Bird Control"  as "SP:Bird Control (Druidic)"
#ReplaceTags in "SP:Bird Control (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Fish Control"  as "SP:Fish Control (Druidic)"
#ReplaceTags in "SP:Fish Control (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Mammal Control"  as "SP:Mammal Control (Druidic)"
#ReplaceTags in "SP:Mammal Control (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Reptile Control"  as "SP:Reptile Control (Druidic)"
#ReplaceTags in "SP:Reptile Control (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Vermin Control"  as "SP:Vermin Control (Druidic)"
#ReplaceTags in "SP:Vermin Control (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Beast Link"  as "SP:Beast Link (Druidic)"
#ReplaceTags in "SP:Beast Link (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Beast Seeker"  as "SP:Beast Seeker (Druidic)"
#ReplaceTags in "SP:Beast Seeker (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Beast Speech"  as "SP:Beast Speech (Druidic)"
#ReplaceTags in "SP:Beast Speech (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Bless Plants"  as "SP:Bless Plants (Druidic)"
#ReplaceTags in "SP:Bless Plants (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Cure Disease"  as "SP:Cure Disease (Druidic)"
#ReplaceTags in "SP:Cure Disease (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Healing), shortcat(Dru, H), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Fog"  as "SP:Fog (Druidic)"
#ReplaceTags in "SP:Fog (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Weather, ~Druidic - Water), shortcat(Dru, We, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Frost"  as "SP:Frost (Druidic)"
#ReplaceTags in "SP:Frost (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Weather, ~Druidic - Water), shortcat(Dru, We, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Heal Plant"  as "SP:Heal Plant (Druidic)"
#ReplaceTags in "SP:Heal Plant (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Hide Path"  as "SP:Hide Path (Druidic)"
#ReplaceTags in "SP:Hide Path (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Know Location"  as "SP:Know Location (Druidic)"
#ReplaceTags in "SP:Know Location (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Knowledge), shortcat(Dru, K), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Light Tread"  as "SP:Light Tread (Druidic)"
#ReplaceTags in "SP:Light Tread (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Movement), shortcat(Dru, Mo), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Mystic Mist"  as "SP:Mystic Mist (Druidic)"
#ReplaceTags in "SP:Mystic Mist (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Protection & Warning), shortcat(Dru, Pr), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Neutralize Poison"  as "SP:Neutralize Poison (Druidic)"
#ReplaceTags in "SP:Neutralize Poison (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Healing), shortcat(Dru, H), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Pathfinder"  as "SP:Pathfinder (Druidic)"
#ReplaceTags in "SP:Pathfinder (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Knowledge), shortcat(Dru, K), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Plant Growth"  as "SP:Plant Growth (Druidic)"
#ReplaceTags in "SP:Plant Growth (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Plant Vision"  as "SP:Plant Vision (Druidic)"
#ReplaceTags in "SP:Plant Vision (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant, ~Druidic - Knowledge), shortcat(Dru, Pl, K), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Pollen Cloud"  as "SP:Pollen Cloud (Druidic)"
#ReplaceTags in "SP:Pollen Cloud (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Predict Earth Movement"  as "SP:Predict Earth Movement (Druidic)"
#ReplaceTags in "SP:Predict Earth Movement (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Predict Weather"  as "SP:Predict Weather (Druidic)"
#ReplaceTags in "SP:Predict Weather (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Weather, ~Druidic - Air), shortcat(Dru, We, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Purify Food"  as "SP:Purify Food (Druidic)"
#ReplaceTags in "SP:Purify Food (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Food), shortcat(Dru, Fo), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Repel Vermin"  as "SP:Repel Vermin (Druidic)"
#ReplaceTags in "SP:Repel Vermin (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Repel Fish"  as "SP:Repel Fish (Druidic)"
#ReplaceTags in "SP:Repel Fish (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Repel Reptile"  as "SP:Repel Reptile (Druidic)"
#ReplaceTags in "SP:Repel Reptile (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Repel Bird"  as "SP:Repel Bird (Druidic)"
#ReplaceTags in "SP:Repel Bird (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Repel Mammal"  as "SP:Repel Mammal (Druidic)"
#ReplaceTags in "SP:Repel Mammal (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Repel Hybrids"  as "SP:Repel Hybrids (Druidic)"
#ReplaceTags in "SP:Repel Hybrids (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Rider"  as "SP:Rider (Druidic)"
#ReplaceTags in "SP:Rider (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Rider Within"  as "SP:Rider Within (Druidic)"
#ReplaceTags in "SP:Rider Within (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Shape Air"  as "SP:Shape Air (Druidic)"
#ReplaceTags in "SP:Shape Air (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Shape Earth"  as "SP:Shape Earth (Druidic)"
#ReplaceTags in "SP:Shape Earth (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Shape Plant"  as "SP:Shape Plant (Druidic)"
#ReplaceTags in "SP:Shape Plant (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Shape Water"  as "SP:Shape Water (Druidic)"
#ReplaceTags in "SP:Shape Water (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Spider Silk"  as "SP:Spider Silk (Druidic)"
#ReplaceTags in "SP:Spider Silk (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Wall of Wind"  as "SP:Wall of Wind (Druidic)"
#ReplaceTags in "SP:Wall of Wind (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Weather Dome"  as "SP:Weather Dome (Druidic)"
#ReplaceTags in "SP:Weather Dome (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Protection & Warning, ~Druidic - Weather), shortcat(Dru, Pr, We), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Windstorm"  as "SP:Windstorm (Druidic)"
#ReplaceTags in "SP:Windstorm (Druidic)" with "cat(~Druidic, ~Druidic PI 2, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), magery(PI 2), description(Prereq: Power Investiture (Druidic) 2)"

* PI 3
#Clone "SP:Animate Plant"  as "SP:Animate Plant (Druidic)"
#ReplaceTags in "SP:Animate Plant (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Beast Summoning"  as "SP:Beast Summoning (Druidic)"
#ReplaceTags in "SP:Beast Summoning (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Blossom"  as "SP:Blossom (Druidic)"
#ReplaceTags in "SP:Blossom (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Breathe Water"  as "SP:Breathe Water (Druidic)"
#ReplaceTags in "SP:Breathe Water (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Water, ~Druidic - Air), shortcat(Dru, Wa, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Clouds"  as "SP:Clouds (Druidic)"
#ReplaceTags in "SP:Clouds (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Weather, ~Druidic - Air), shortcat(Dru, We, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Conceal"  as "SP:Conceal (Druidic)"
#ReplaceTags in "SP:Conceal (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Create Plant"  as "SP:Create Plant (Druidic)"
#ReplaceTags in "SP:Create Plant (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:False Tracks"  as "SP:False Tracks (Druidic)"
#ReplaceTags in "SP:False Tracks (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Forest Warning"  as "SP:Forest Warning (Druidic)"
#ReplaceTags in "SP:Forest Warning (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Freeze"  as "SP:Freeze (Druidic)"
#ReplaceTags in "SP:Freeze (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Instant Neutralize Poison"  as "SP:Instant Neutralize Poison (Druidic)"
#ReplaceTags in "SP:Instant Neutralize Poison (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Healing), shortcat(Dru, H), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Melt Ice"  as "SP:Melt Ice (Druidic)"
#ReplaceTags in "SP:Melt Ice (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Plant Control"  as "SP:Plant Control (Druidic)"
#ReplaceTags in "SP:Plant Control (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Plant Sense"  as "SP:Plant Sense (Druidic)"
#ReplaceTags in "SP:Plant Sense (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Plant Speech"  as "SP:Plant Speech (Druidic)"
#ReplaceTags in "SP:Plant Speech (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Protect Animal"  as "SP:Protect Animal (Druidic)"
#ReplaceTags in "SP:Protect Animal (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Animal, ~Druidic - Protection & Warning), shortcat(Dru, An, Pr), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Rain"  as "SP:Rain (Druidic)"
#ReplaceTags in "SP:Rain (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Weather, ~Druidic - Air, ~Druidic - Water), shortcat(Dru, We, Ai, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Rain of Nuts"  as "SP:Rain of Nuts (Druidic)"
#ReplaceTags in "SP:Rain of Nuts (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Rejuvenate Plant"  as "SP:Rejuvenate Plant (Druidic)"
#ReplaceTags in "SP:Rejuvenate Plant (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Remember Path"  as "SP:Remember Path (Druidic)"
#ReplaceTags in "SP:Remember Path (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Knowledge), shortcat(Dru, K), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Resist Cold"  as "SP:Resist Cold (Druidic)"
#ReplaceTags in "SP:Resist Cold (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Fire), shortcat(Dru, Fi), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Resist Lightning"  as "SP:Resist Lightning (Druidic)"
#ReplaceTags in "SP:Resist Lightning (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Weather, ~Druidic - Air, ~Druidic - Protection & Warning), shortcat(Dru, We, Ai, Pr), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Resist Pressure"  as "SP:Resist Pressure (Druidic)"
#ReplaceTags in "SP:Resist Pressure (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Protection & Warning), shortcat(Dru, Pr), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Snow"  as "SP:Snow (Druidic)"
#ReplaceTags in "SP:Snow (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Weather, ~Druidic - Air, ~Druidic - Water), shortcat(Dru, We, Ai, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Snow Shoes"  as "SP:Snow Shoes (Druidic)"
#ReplaceTags in "SP:Snow Shoes (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Summon Earth Elemental"  as "SP:Summon Earth Elemental (Druidic)"
#ReplaceTags in "SP:Summon Earth Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Summon Air Elemental"  as "SP:Summon Air Elemental (Druidic)"
#ReplaceTags in "SP:Summon Air Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Summon Fire Elemental"  as "SP:Summon Fire Elemental (Druidic)"
#ReplaceTags in "SP:Summon Fire Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Fire), shortcat(Dru, Fi), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Summon Water Elemental"  as "SP:Summon Water Elemental (Druidic)"
#ReplaceTags in "SP:Summon Water Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Swim"  as "SP:Swim (Druidic)"
#ReplaceTags in "SP:Swim (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Movement, ~Druidic - Water), shortcat(Dru, Mo, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Tangle Growth"  as "SP:Tangle Growth (Druidic)"
#ReplaceTags in "SP:Tangle Growth (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Walk Through Plants"  as "SP:Walk Through Plants (Druidic)"
#ReplaceTags in "SP:Walk Through Plants (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Walk Through Wood"  as "SP:Walk Through Wood (Druidic)"
#ReplaceTags in "SP:Walk Through Wood (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Water Vision"  as "SP:Water Vision (Druidic)"
#ReplaceTags in "SP:Water Vision (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Water, ~Druidic - Knowledge), shortcat(Dru, Wa, K), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Waves"  as "SP:Waves (Druidic)"
#ReplaceTags in "SP:Waves (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Weather, ~Druidic - Water), shortcat(Dru, We, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Whirlpool"  as "SP:Whirlpool (Druidic)"
#ReplaceTags in "SP:Whirlpool (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Wind"  as "SP:Wind (Druidic)"
#ReplaceTags in "SP:Wind (Druidic)" with "cat(~Druidic, ~Druidic PI 3, ~Druidic - Weather, ~Druidic - Air), shortcat(Dru, We, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"

* PI 4
#Clone "SP:Beast Possession"  as "SP:Beast Possession (Druidic)"
#ReplaceTags in "SP:Beast Possession (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Blight"  as "SP:Blight (Druidic)"
#ReplaceTags in "SP:Blight (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Body of Slime"  as "SP:Body of Slime (Druidic)"
#ReplaceTags in "SP:Body of Slime (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Body of Water"  as "SP:Body of Water (Druidic)"
#ReplaceTags in "SP:Body of Water (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Body of Wind"  as "SP:Body of Wind (Druidic)"
#ReplaceTags in "SP:Body of Wind (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Body of Wood"  as "SP:Body of Wood (Druidic)"
#ReplaceTags in "SP:Body of Wood (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Control Earth Elemental"  as "SP:Control Earth Elemental (Druidic)"
#ReplaceTags in "SP:Control Earth Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Control Air Elemental"  as "SP:Control Air Elemental (Druidic)"
#ReplaceTags in "SP:Control Air Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Control Fire Elemental"  as "SP:Control Fire Elemental (Druidic)"
#ReplaceTags in "SP:Control Fire Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Fire), shortcat(Dru, Fi), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Control Water Elemental"  as "SP:Control Water Elemental (Druidic)"
#ReplaceTags in "SP:Control Water Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Create Animal"  as "SP:Create Animal (Druidic)"
#ReplaceTags in "SP:Create Animal (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Illusion & Creation), shortcat(Dru, I), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Create Spring"  as "SP:Create Spring (Druidic)"
#ReplaceTags in "SP:Create Spring (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Dispel Magic"  as "SP:Dispel Magic (Druidic)"
#ReplaceTags in "SP:Dispel Magic (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Meta-Spells), shortcat(Dru, Me), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Dry Spring"  as "SP:Dry Spring (Druidic)"
#ReplaceTags in "SP:Dry Spring (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Frostbite"  as "SP:Frostbite (Druidic)"
#ReplaceTags in "SP:Frostbite (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Hail"  as "SP:Hail (Druidic)"
#ReplaceTags in "SP:Hail (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Weather, ~Druidic - Water), shortcat(Dru, We, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Lightning"  as "SP:Lightning (Druidic)"
#ReplaceTags in "SP:Lightning (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Weather, ~Druidic - Air), shortcat(Dru, We, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Plant Form"  as "SP:Plant Form (Druidic)"
#ReplaceTags in "SP:Plant Form (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Sandstorm"  as "SP:Sandstorm (Druidic)"
#ReplaceTags in "SP:Sandstorm (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Air, ~Druidic - Earth), shortcat(Dru, Ai, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Shapeshifting ([Animal])"  as "SP:Shapeshifting ([Animal]; Druidic)"
#ReplaceTags in "SP:Shapeshifting ([Animal]; Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Storm"  as "SP:Storm (Druidic)"
#ReplaceTags in "SP:Storm (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Weather, ~Druidic - Air, ~Druidic - Water), shortcat(Dru, We, Ai, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Strike Barren"  as "SP:Strike Barren (Druidic)"
#ReplaceTags in "SP:Strike Barren (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Body Control, ~Druidic - Necromancy), shortcat(Dru, B, N), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Tide"  as "SP:Tide (Druidic)"
#ReplaceTags in "SP:Tide (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Weather, ~Druidic - Water), shortcat(Dru, We, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Wither Plant"  as "SP:Wither Plant (Druidic)"
#ReplaceTags in "SP:Wither Plant (Druidic)" with "cat(~Druidic, ~Druidic PI 4, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), magery(PI 4), description(Prereq: Power Investiture (Druidic) 4)"

* PI 5
#Clone "SP:Alter Terrain"  as "SP:Alter Terrain (Druidic)"
#ReplaceTags in "SP:Alter Terrain (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Arboreal Immurement"  as "SP:Arboreal Immurement (Druidic)"
#ReplaceTags in "SP:Arboreal Immurement (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Create Earth Elemental"  as "SP:Create Earth Elemental (Druidic)"
#ReplaceTags in "SP:Create Earth Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Create Air Elemental"  as "SP:Create Air Elemental (Druidic)"
#ReplaceTags in "SP:Create Air Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Air), shortcat(Dru, Ai), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Create Fire Elemental"  as "SP:Create Fire Elemental (Druidic)"
#ReplaceTags in "SP:Create Fire Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Fire), shortcat(Dru, Fi), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Create Water Elemental"  as "SP:Create Water Elemental (Druidic)"
#ReplaceTags in "SP:Create Water Elemental (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Entombment"  as "SP:Entombment (Druidic)"
#ReplaceTags in "SP:Entombment (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting ([Variation])"  as "SP:Partial Shapeshifting ([Variation]; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting ([Variation]; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Chameleon Eyes)"  as "SP:Partial Shapeshifting (Chameleon Eyes; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Chameleon Eyes; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Crocodile Jaws)"  as "SP:Partial Shapeshifting (Crocodile Jaws; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Crocodile Jaws; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Elephant Trunk)"  as "SP:Partial Shapeshifting (Elephant Trunk; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Elephant Trunk; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Feathered Arms)"  as "SP:Partial Shapeshifting (Feathered Arms; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Feathered Arms; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Fish Tail)"  as "SP:Partial Shapeshifting (Fish Tail; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Fish Tail; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Mountain Goat Hooves)"  as "SP:Partial Shapeshifting (Mountain Goat Hooves; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Mountain Goat Hooves; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Saber Teeth)"  as "SP:Partial Shapeshifting (Saber Teeth; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Saber Teeth; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Scorpion Tail)"  as "SP:Partial Shapeshifting (Scorpion Tail; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Scorpion Tail; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Serpent's Fangs)"  as "SP:Partial Shapeshifting (Serpent's Fangs; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Serpent's Fangs; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Skunk Tail)"  as "SP:Partial Shapeshifting (Skunk Tail; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Skunk Tail; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Spider Arms)"  as "SP:Partial Shapeshifting (Spider Arms; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Spider Arms; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Tiger Paws)"  as "SP:Partial Shapeshifting (Tiger Paws; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Tiger Paws; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Toad Tongue)"  as "SP:Partial Shapeshifting (Toad Tongue; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Toad Tongue; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Partial Shapeshifting (Turtle Shell)"  as "SP:Partial Shapeshifting (Turtle Shell; Druidic)"
#ReplaceTags in "SP:Partial Shapeshifting (Turtle Shell; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Permanent Beast Possession"  as "SP:Permanent Beast Possession (Druidic)"
#ReplaceTags in "SP:Permanent Beast Possession (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Permanent Shapeshifting ([Animal])"  as "SP:Permanent Shapeshifting ([Animal]; Druidic)"
#ReplaceTags in "SP:Permanent Shapeshifting ([Animal]; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Plant Form Other"  as "SP:Plant Form Other (Druidic)"
#ReplaceTags in "SP:Plant Form Other (Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Plant), shortcat(Dru, Pl), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Shapeshift Others ([Animal])"  as "SP:Shapeshift Others ([Animal]; Druidic)"
#ReplaceTags in "SP:Shapeshift Others ([Animal]; Druidic)" with "cat(~Druidic, ~Druidic PI 5, ~Druidic - Animal), shortcat(Dru, An), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), magery(PI 5), description(Prereq: Power Investiture (Druidic) 5)"

* PI 6
#Clone "SP:Earthquake"  as "SP:Earthquake (Druidic)"
#ReplaceTags in "SP:Earthquake (Druidic)" with "cat(~Druidic, ~Druidic PI 6, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=6|ST:Druidic PI=6), magery(PI 6), description(Prereq: Power Investiture (Druidic) 6)"
#Clone "SP:Geyser"  as "SP:Geyser (Druidic)"
#ReplaceTags in "SP:Geyser (Druidic)" with "cat(~Druidic, ~Druidic PI 6, ~Druidic - Water), shortcat(Dru, Wa), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=6|ST:Druidic PI=6), magery(PI 6), description(Prereq: Power Investiture (Druidic) 6)"
#Clone "SP:Move Terrain"  as "SP:Move Terrain (Druidic)"
#ReplaceTags in "SP:Move Terrain (Druidic)" with "cat(~Druidic, ~Druidic PI 6, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=6|ST:Druidic PI=6), magery(PI 6), description(Prereq: Power Investiture (Druidic) 6)"
#Clone "SP:Volcano"  as "SP:Volcano (Druidic)"
#ReplaceTags in "SP:Volcano (Druidic)" with "cat(~Druidic, ~Druidic PI 6, ~Druidic - Earth), shortcat(Dru, Ea), CountAsNeed(Druidic), ident(Druidic), prereqcount(), needs(AD:Power Investiture (Druidic)=6|ST:Druidic PI=6), magery(PI 6), description(Prereq: Power Investiture (Druidic) 6)"

<~Holy>

* PI 1
#Clone "SP:Armor"  as "SP:Armor (Holy)"
#ReplaceTags in "SP:Armor (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Protection & Warning), shortcat(Ho, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Aura"  as "SP:Aura (Holy)"
#ReplaceTags in "SP:Aura (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Body-Reading"  as "SP:Body-Reading (Holy)"
#ReplaceTags in "SP:Body-Reading (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Bravery"  as "SP:Bravery (Holy)"
#ReplaceTags in "SP:Bravery (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Mind Control), shortcat(Ho, Mi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Cleansing"  as "SP:Cleansing (Holy)"
#ReplaceTags in "SP:Cleansing (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Coolness"  as "SP:Coolness (Holy)"
#ReplaceTags in "SP:Coolness (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Water, ~Holy - Protection & Warning), shortcat(Ho, Wa, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Detect Magic"  as "SP:Detect Magic (Holy)"
#ReplaceTags in "SP:Detect Magic (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Detect Poison"  as "SP:Detect Poison (Holy)"
#ReplaceTags in "SP:Detect Poison (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Protection & Warning, ~Holy - Healing), shortcat(Ho, Pr, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Final Rest"  as "SP:Final Rest (Holy)"
#ReplaceTags in "SP:Final Rest (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing, ~Holy - Necromancy), shortcat(Ho, H, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Lend Energy"  as "SP:Lend Energy (Holy)"
#ReplaceTags in "SP:Lend Energy (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Lend Vitality"  as "SP:Lend Vitality (Holy)"
#ReplaceTags in "SP:Lend Vitality (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Light"  as "SP:Light (Holy)"
#ReplaceTags in "SP:Light (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Light & Darkness), shortcat(Ho, L), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Might"  as "SP:Might (Holy)"
#ReplaceTags in "SP:Might (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Body Control), shortcat(Ho, B), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Minor Healing"  as "SP:Minor Healing (Holy)"
#ReplaceTags in "SP:Minor Healing (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Purify Air"  as "SP:Purify Air (Holy)"
#ReplaceTags in "SP:Purify Air (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Air), shortcat(Ho, Ai), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Purify Water"  as "SP:Purify Water (Holy)"
#ReplaceTags in "SP:Purify Water (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Water), shortcat(Ho, Wa), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Recover Energy"  as "SP:Recover Energy (Holy)"
#ReplaceTags in "SP:Recover Energy (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Sense Life"  as "SP:Sense Life (Holy)"
#ReplaceTags in "SP:Sense Life (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Communication & Empathy), shortcat(Ho, C), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Sense Spirit"  as "SP:Sense Spirit (Holy)"
#ReplaceTags in "SP:Sense Spirit (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Share Vitality"  as "SP:Share Vitality (Holy)"
#ReplaceTags in "SP:Share Vitality (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Shield"  as "SP:Shield (Holy)"
#ReplaceTags in "SP:Shield (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Protection & Warning), shortcat(Ho, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Silence"  as "SP:Silence (Holy)"
#ReplaceTags in "SP:Silence (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Sound), shortcat(Ho, S), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Stop Bleeding"  as "SP:Stop Bleeding (Holy)"
#ReplaceTags in "SP:Stop Bleeding (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Test Food"  as "SP:Test Food (Holy)"
#ReplaceTags in "SP:Test Food (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Food), shortcat(Ho, Fo), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Thunderclap"  as "SP:Thunderclap (Holy)"
#ReplaceTags in "SP:Thunderclap (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Sound), shortcat(Ho, S), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Umbrella"  as "SP:Umbrella (Holy)"
#ReplaceTags in "SP:Umbrella (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Water, ~Holy - Protection & Warning), shortcat(Ho, Wa, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Vigor"  as "SP:Vigor (Holy)"
#ReplaceTags in "SP:Vigor (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Body Control), shortcat(Ho, B), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Warmth"  as "SP:Warmth (Holy)"
#ReplaceTags in "SP:Warmth (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Fire, ~Holy - Protection & Warning), shortcat(Ho, Fi, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"
#Clone "SP:Watchdog"  as "SP:Watchdog (Holy)"
#ReplaceTags in "SP:Watchdog (Holy)" with "cat(~Holy, ~Holy PI 1, ~Holy - Protection & Warning), shortcat(Ho, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=1|ST:Holy PI=1), magery(PI 1), description(Prereq: Power Investiture (Holy) 1)"

* PI 2
#Clone "SP:Awaken"  as "SP:Awaken (Holy)"
#ReplaceTags in "SP:Awaken (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Clean"  as "SP:Clean (Holy)"
#ReplaceTags in "SP:Clean (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Making & Breaking), shortcat(Ho, Ma), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Command"  as "SP:Command (Holy)"
#ReplaceTags in "SP:Command (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Mind Control), shortcat(Ho, Mi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Compel Truth"  as "SP:Compel Truth (Holy)"
#ReplaceTags in "SP:Compel Truth (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Communication & Empathy), shortcat(Ho, C), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Continual Light"  as "SP:Continual Light (Holy)"
#ReplaceTags in "SP:Continual Light (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Light & Darkness), shortcat(Ho, L), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Create Water"  as "SP:Create Water (Holy)"
#ReplaceTags in "SP:Create Water (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Water), shortcat(Ho, Wa), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Glow"  as "SP:Glow (Holy)"
#ReplaceTags in "SP:Glow (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Light & Darkness), shortcat(Ho, L), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Great Voice"  as "SP:Great Voice (Holy)"
#ReplaceTags in "SP:Great Voice (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Sound), shortcat(Ho, S), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Healing Slumber"  as "SP:Healing Slumber (Holy)"
#ReplaceTags in "SP:Healing Slumber (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Major Healing"  as "SP:Major Healing (Holy)"
#ReplaceTags in "SP:Major Healing (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Peaceful Sleep"  as "SP:Peaceful Sleep (Holy)"
#ReplaceTags in "SP:Peaceful Sleep (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Mind Control), shortcat(Ho, Mi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Persuasion"  as "SP:Persuasion (Holy)"
#ReplaceTags in "SP:Persuasion (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Communication & Empathy), shortcat(Ho, C), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Purify Food"  as "SP:Purify Food (Holy)"
#ReplaceTags in "SP:Purify Food (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Food), shortcat(Ho, Fo), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Relieve Sickness"  as "SP:Relieve Sickness (Holy)"
#ReplaceTags in "SP:Relieve Sickness (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Remove Contagion"  as "SP:Remove Contagion (Holy)"
#ReplaceTags in "SP:Remove Contagion (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Resist Acid"  as "SP:Resist Acid (Holy)"
#ReplaceTags in "SP:Resist Acid (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Water, ~Holy - Protection & Warning), shortcat(Ho, Wa, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Resist Cold"  as "SP:Resist Cold (Holy)"
#ReplaceTags in "SP:Resist Cold (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Fire), shortcat(Ho, Fi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Resist Disease"  as "SP:Resist Disease (Holy)"
#ReplaceTags in "SP:Resist Disease (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing, ~Holy - Protection & Warning), shortcat(Ho, H, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Resist Fire"  as "SP:Resist Fire (Holy)"
#ReplaceTags in "SP:Resist Fire (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Fire), shortcat(Ho, Fi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Resist Lightning"  as "SP:Resist Lightning (Holy)"
#ReplaceTags in "SP:Resist Lightning (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Weather, ~Holy - Air, ~Holy - Protection & Warning), shortcat(Ho, We, Ai, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Resist Pain"  as "SP:Resist Pain (Holy)"
#ReplaceTags in "SP:Resist Pain (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Body Control), shortcat(Ho, B), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Resist Poison"  as "SP:Resist Poison (Holy)"
#ReplaceTags in "SP:Resist Poison (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing, ~Holy - Protection & Warning), shortcat(Ho, H, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Resist Pressure"  as "SP:Resist Pressure (Holy)"
#ReplaceTags in "SP:Resist Pressure (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Protection & Warning), shortcat(Ho, Pr), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Restore Hearing"  as "SP:Restore Hearing (Holy)"
#ReplaceTags in "SP:Restore Hearing (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Restore Memory"  as "SP:Restore Memory (Holy)"
#ReplaceTags in "SP:Restore Memory (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Restore Sight"  as "SP:Restore Sight (Holy)"
#ReplaceTags in "SP:Restore Sight (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Restore Speech"  as "SP:Restore Speech (Holy)"
#ReplaceTags in "SP:Restore Speech (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Seeker"  as "SP:Seeker (Holy)"
#ReplaceTags in "SP:Seeker (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Soilproof"  as "SP:Soilproof (Holy)"
#ReplaceTags in "SP:Soilproof (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Making & Breaking), shortcat(Ho, Ma), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Stop Spasm"  as "SP:Stop Spasm (Holy)"
#ReplaceTags in "SP:Stop Spasm (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Body Control, ~Holy - Healing), shortcat(Ho, B, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Summon Spirit"  as "SP:Summon Spirit (Holy)"
#ReplaceTags in "SP:Summon Spirit (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Truthsayer"  as "SP:Truthsayer (Holy)"
#ReplaceTags in "SP:Truthsayer (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Communication & Empathy), shortcat(Ho, C), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Turn Spirit"  as "SP:Turn Spirit (Holy)"
#ReplaceTags in "SP:Turn Spirit (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Turn Zombie"  as "SP:Turn Zombie (Holy)"
#ReplaceTags in "SP:Turn Zombie (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"
#Clone "SP:Wall of Light"  as "SP:Wall of Light (Holy)"
#ReplaceTags in "SP:Wall of Light (Holy)" with "cat(~Holy, ~Holy PI 2, ~Holy - Light & Darkness), shortcat(Ho, L), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=2|ST:Holy PI=2), magery(PI 2), description(Prereq: Power Investiture (Holy) 2)"

* PI 3
#Clone "SP:Affect Spirits"  as "SP:Affect Spirits (Holy)"
#ReplaceTags in "SP:Affect Spirits (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Astral Vision"  as "SP:Astral Vision (Holy)"
#ReplaceTags in "SP:Astral Vision (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Knowledge, ~Holy - Necromancy), shortcat(Ho, K, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Breathe Water"  as "SP:Breathe Water (Holy)"
#ReplaceTags in "SP:Breathe Water (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Water, ~Holy - Air), shortcat(Ho, Wa, Ai), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Command Spirit ([Spirit])"  as "SP:Command Spirit ([Spirit]; Holy)"
#ReplaceTags in "SP:Command Spirit ([Spirit]; Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Create Food"  as "SP:Create Food (Holy)"
#ReplaceTags in "SP:Create Food (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Food), shortcat(Ho, Fo), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Cure Disease"  as "SP:Cure Disease (Holy)"
#ReplaceTags in "SP:Cure Disease (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Dispel Possession"  as "SP:Dispel Possession (Holy)"
#ReplaceTags in "SP:Dispel Possession (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Communication & Empathy), shortcat(Ho, C), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Flaming Weapon"  as "SP:Flaming Weapon (Holy)"
#ReplaceTags in "SP:Flaming Weapon (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Fire), shortcat(Ho, Fi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Great Healing"  as "SP:Great Healing (Holy)"
#ReplaceTags in "SP:Great Healing (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Magic Resistance"  as "SP:Magic Resistance (Holy)"
#ReplaceTags in "SP:Magic Resistance (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Neutralize Poison"  as "SP:Neutralize Poison (Holy)"
#ReplaceTags in "SP:Neutralize Poison (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Oath"  as "SP:Oath (Holy)"
#ReplaceTags in "SP:Oath (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Mind Control), shortcat(Ho, Mi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Relieve Madness"  as "SP:Relieve Madness (Holy)"
#ReplaceTags in "SP:Relieve Madness (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Healing, ~Holy - Mind Control), shortcat(Ho, H, Mi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Relieve Paralysis"  as "SP:Relieve Paralysis (Holy)"
#ReplaceTags in "SP:Relieve Paralysis (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Repel Spirits"  as "SP:Repel Spirits (Holy)"
#ReplaceTags in "SP:Repel Spirits (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Restoration"  as "SP:Restoration (Holy)"
#ReplaceTags in "SP:Restoration (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:See Secrets"  as "SP:See Secrets (Holy)"
#ReplaceTags in "SP:See Secrets (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Silver Tongue"  as "SP:Silver Tongue (Holy)"
#ReplaceTags in "SP:Silver Tongue (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Sound), shortcat(Ho, S), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Stone to Flesh"  as "SP:Stone to Flesh (Holy)"
#ReplaceTags in "SP:Stone to Flesh (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Earth), shortcat(Ho, Ea), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Stop Paralysis"  as "SP:Stop Paralysis (Holy)"
#ReplaceTags in "SP:Stop Paralysis (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Strengthen Will"  as "SP:Strengthen Will (Holy)"
#ReplaceTags in "SP:Strengthen Will (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Mind Control), shortcat(Ho, Mi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Sunbolt"  as "SP:Sunbolt (Holy)"
#ReplaceTags in "SP:Sunbolt (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Light & Darkness), shortcat(Ho, L), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Sunlight"  as "SP:Sunlight (Holy)"
#ReplaceTags in "SP:Sunlight (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Light & Darkness), shortcat(Ho, L), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Suspended Animation"  as "SP:Suspended Animation (Holy)"
#ReplaceTags in "SP:Suspended Animation (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Water to Wine"  as "SP:Water to Wine (Holy)"
#ReplaceTags in "SP:Water to Wine (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Food), shortcat(Ho, Fo), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"
#Clone "SP:Wisdom"  as "SP:Wisdom (Holy)"
#ReplaceTags in "SP:Wisdom (Holy)" with "cat(~Holy, ~Holy PI 3, ~Holy - Mind Control), shortcat(Ho, Mi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=3|ST:Holy PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"

* PI 4
#Clone "SP:Astral Block"  as "SP:Astral Block (Holy)"
#ReplaceTags in "SP:Astral Block (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Banish"  as "SP:Banish (Holy)"
#ReplaceTags in "SP:Banish (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Cleansing"  as "SP:Cleansing (Holy)"
#ReplaceTags in "SP:Cleansing (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Continual Sunlight"  as "SP:Continual Sunlight (Holy)"
#ReplaceTags in "SP:Continual Sunlight (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Light & Darkness), shortcat(Ho, L), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Dispel Magic"  as "SP:Dispel Magic (Holy)"
#ReplaceTags in "SP:Dispel Magic (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Astrology)"  as "SP:Divination (Astrology; Holy)"
#ReplaceTags in "SP:Divination (Astrology; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Augury)"  as "SP:Divination (Augury; Holy)"
#ReplaceTags in "SP:Divination (Augury; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Cartomancy)"  as "SP:Divination (Cartomancy; Holy)"
#ReplaceTags in "SP:Divination (Cartomancy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Crystal-Gazing)"  as "SP:Divination (Crystal-Gazing; Holy)"
#ReplaceTags in "SP:Divination (Crystal-Gazing; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Dactylomancy)"  as "SP:Divination (Dactylomancy; Holy)"
#ReplaceTags in "SP:Divination (Dactylomancy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Extispicy)"  as "SP:Divination (Extispicy; Holy)"
#ReplaceTags in "SP:Divination (Extispicy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Gastromancy)"  as "SP:Divination (Gastromancy; Holy)"
#ReplaceTags in "SP:Divination (Gastromancy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Geomancy)"  as "SP:Divination (Geomancy; Holy)"
#ReplaceTags in "SP:Divination (Geomancy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Lecanomancy)"  as "SP:Divination (Lecanomancy; Holy)"
#ReplaceTags in "SP:Divination (Lecanomancy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Numerology)"  as "SP:Divination (Numerology; Holy)"
#ReplaceTags in "SP:Divination (Numerology; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Oneiromancy)"  as "SP:Divination (Oneiromancy; Holy)"
#ReplaceTags in "SP:Divination (Oneiromancy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Physiognomy)"  as "SP:Divination (Physiognomy; Holy)"
#ReplaceTags in "SP:Divination (Physiognomy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Pyromancy)"  as "SP:Divination (Pyromancy; Holy)"
#ReplaceTags in "SP:Divination (Pyromancy; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Sortilege)"  as "SP:Divination (Sortilege; Holy)"
#ReplaceTags in "SP:Divination (Sortilege; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Divination (Symbol-Casting)"  as "SP:Divination (Symbol-Casting; Holy)"
#ReplaceTags in "SP:Divination (Symbol-Casting; Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Knowledge), shortcat(Ho, K), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Essential Food"  as "SP:Essential Food (Holy)"
#ReplaceTags in "SP:Essential Food (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Food), shortcat(Ho, Fo), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Gift of Letters"  as "SP:Gift of Letters (Holy)"
#ReplaceTags in "SP:Gift of Letters (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Communication & Empathy), shortcat(Ho, C), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Gift of Tongues"  as "SP:Gift of Tongues (Holy)"
#ReplaceTags in "SP:Gift of Tongues (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Communication & Empathy), shortcat(Ho, C), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Instant Neutralize Poison"  as "SP:Instant Neutralize Poison (Holy)"
#ReplaceTags in "SP:Instant Neutralize Poison (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Instant Restoration"  as "SP:Instant Restoration (Holy)"
#ReplaceTags in "SP:Instant Restoration (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Monk's Banquet"  as "SP:Monk's Banquet (Holy)"
#ReplaceTags in "SP:Monk's Banquet (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Food), shortcat(Ho, Fo), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Regeneration"  as "SP:Regeneration (Holy)"
#ReplaceTags in "SP:Regeneration (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Suspend Curse"  as "SP:Suspend Curse (Holy)"
#ReplaceTags in "SP:Suspend Curse (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"
#Clone "SP:Vigil"  as "SP:Vigil (Holy)"
#ReplaceTags in "SP:Vigil (Holy)" with "cat(~Holy, ~Holy PI 4, ~Holy - Mind Control), shortcat(Ho, Mi), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=4|ST:Holy PI=4), magery(PI 4), description(Prereq: Power Investiture (Holy) 4)"

* PI 5
#Clone "SP:Bless"  as "SP:Bless (Holy)"
#ReplaceTags in "SP:Bless (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"
#Clone "SP:Curse"  as "SP:Curse (Holy)"
#ReplaceTags in "SP:Curse (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"
#Clone "SP:Earthquake"  as "SP:Earthquake (Holy)"
#ReplaceTags in "SP:Earthquake (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Earth), shortcat(Ho, Ea), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"
#Clone "SP:Entrap Spirit"  as "SP:Entrap Spirit (Holy)"
#ReplaceTags in "SP:Entrap Spirit (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"
#Clone "SP:Instant Regeneration"  as "SP:Instant Regeneration (Holy)"
#ReplaceTags in "SP:Instant Regeneration (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Healing), shortcat(Ho, H), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"
#Clone "SP:Pentagram"  as "SP:Pentagram (Holy)"
#ReplaceTags in "SP:Pentagram (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"
#Clone "SP:Remove Curse"  as "SP:Remove Curse (Holy)"
#ReplaceTags in "SP:Remove Curse (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"
#Clone "SP:Storm"  as "SP:Storm (Holy)"
#ReplaceTags in "SP:Storm (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Weather, ~Holy - Air, ~Holy - Water), shortcat(Ho, We, Ai, Wa), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"
#Clone "SP:Suspend Mana"  as "SP:Suspend Mana (Holy)"
#ReplaceTags in "SP:Suspend Mana (Holy)" with "cat(~Holy, ~Holy PI 5, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=5|ST:Holy PI=5), magery(PI 5), description(Prereq: Power Investiture (Holy) 5)"

* PI 6
#Clone "SP:Bind Spirit ([Spirit])"  as "SP:Bind Spirit ([Spirit]; Holy)"
#ReplaceTags in "SP:Bind Spirit ([Spirit]; Holy)" with "cat(~Holy, ~Holy PI 6, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=6|ST:Holy PI=6), magery(PI 6), description(Prereq: Power Investiture (Holy) 6)"
#Clone "SP:Bind Spirit (Banshees)"  as "SP:Bind Spirit (Banshees; Holy)"
#ReplaceTags in "SP:Bind Spirit (Banshees; Holy)" with "cat(~Holy, ~Holy PI 6, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=6|ST:Holy PI=6), magery(PI 6), description(Prereq: Power Investiture (Holy) 6)"
#Clone "SP:Bind Spirit (Manitous)"  as "SP:Bind Spirit (Manitous; Holy)"
#ReplaceTags in "SP:Bind Spirit (Manitous; Holy)" with "cat(~Holy, ~Holy PI 6, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=6|ST:Holy PI=6), magery(PI 6), description(Prereq: Power Investiture (Holy) 6)"
#Clone "SP:Bind Spirit (Specters)"  as "SP:Bind Spirit (Specters; Holy)"
#ReplaceTags in "SP:Bind Spirit (Specters; Holy)" with "cat(~Holy, ~Holy PI 6, ~Holy - Necromancy), shortcat(Ho, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=6|ST:Holy PI=6), magery(PI 6), description(Prereq: Power Investiture (Holy) 6)"
#Clone "SP:Drain Mana"  as "SP:Drain Mana (Holy)"
#ReplaceTags in "SP:Drain Mana (Holy)" with "cat(~Holy, ~Holy PI 6, ~Holy - Meta-Spells), shortcat(Ho, Me), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=6|ST:Holy PI=6), magery(PI 6), description(Prereq: Power Investiture (Holy) 6)"
#Clone "SP:Sanctuary"  as "SP:Sanctuary (Holy)"
#ReplaceTags in "SP:Sanctuary (Holy)" with "cat(~Holy, ~Holy PI 6, ~Holy - Gate), shortcat(Ho, G), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=6|ST:Holy PI=6), magery(PI 6), description(Prereq: Power Investiture (Holy) 6)"
#Clone "SP:Resurrection"  as "SP:Resurrection (Holy)"
#ReplaceTags in "SP:Resurrection (Holy)" with "cat(~Holy, ~Holy PI 6, ~Holy - Healing, ~Holy - Necromancy), shortcat(Ho, H, N), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=6|ST:Holy PI=6), magery(PI 6), description(Prereq: Power Investiture (Holy) 6)"
#Clone "SP:Planar Summons ([Plane])"  as "SP:Planar Summons (Divine Servitor; Holy)"
#ReplaceTags in "SP:Planar Summons (Divine Servitor; Holy)" with "cat(~Holy, ~Holy PI 6, ~Holy - Gate), shortcat(Ho, G), CountAsNeed(Holy), ident(Holy), prereqcount(), needs(AD:Power Investiture (Holy)=6|ST:Holy PI=6), magery(PI 6), description(Prereq: Power Investiture (Holy) 6)"
#ReplaceTags in "SP:Planar Summons (Divine Servitor; Holy)" with "x()"

*******************************************************************************************************\[STOP]
[TEMPLATES]
******************************************************************************************************\[START]
#MergeTags in "TE:Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard (Dungeon Fantasy)" with {replacetags(in "TE:Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid (Dungeon Fantasy)" with {replacetags(in "TE:Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight (Dungeon Fantasy)" with {replacetags(in "TE:Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout (Dungeon Fantasy)" with {replacetags(in "TE:Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief (Dungeon Fantasy)" with {replacetags(in "TE:Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
