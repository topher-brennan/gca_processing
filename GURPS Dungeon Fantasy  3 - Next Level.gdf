Encoding=UTF-8
Version=3
* The version information above MUST be the first line of the data file
Program=4.0.408
Description=04/24/2016. This file requires the Basic Set to be loaded first. If using GURPS Magic, load that file second, and this file third. This will ensure the proper modifications to spells required.  THIS FILE REMOVES OR MODIFIES MANY ITEMS FROM THE BASIC SET AS PER THE INSTRUCTIONS IN THE SOURCE BOOK.  MIX WITH OTHER DATA FILES WITH CAUTION.
Worldbook=Dungeon Fantasy
Requires="GURPS Dungeon Fantasy  1 - Adventurers.GDF"
LoadAfter="GURPS Magic 4e.gdf"


[AUTHOR]
******************************************************************************************************\[START]
*
* GURPS® Character Assistant Data File
* Created: 2-23-2007
* Modified: May 23, 2008
* Requires GCA v4 or later!
*
* File Version: Beta 1.19
*
* This data file contains information taken from the GURPS Dungeon Fantasy: The Next Level sourcebook.
* GURPS Dungeon Fantasy 3: The Next Level is Copyright © 2008 by Steve Jackson Games Incorporated. All rights
* reserved.
*
* Information in this file includes:
*	Many character templates, the inclusion of which is ongoing.
*
* This file requires the Basic Set to be loaded first. If using GURPS Magic, load that file second, then the
* Dungeon Fantasy: Adventurers file, finally load this one fourth.
* This will ensure the proper modifications to spells required.
*
* To blend these templates with the Character Templates offered in DF1 load the Racial Template then the Character
* Template.
* To add the templates together, load the Character Template first then the Racial Template.
************************************************************************************************************************
*
* Rob Kamm - Original data file author
* Scott Ellis - Size Modifiers for Weapons & Armor and Debugger Extraordinaire
* Emily smirle (Bruno) - File host and DF1 data file author
* Eric B. Smith		- Data File Coordinator
*
* If you find any errors or omissions in this file please contact the Data File Coordinator at:
* ericbsmith42@gmail.com
*
* Or drop a message in the GCA4 forum at:
* http://forums.sjgames.com
*
************************************************************************************************************************
*
* GURPS is a registered trademark of Steve Jackson Games Incorporated, used with GCA by permission of Steve Jackson
* Games. All rights reserved.
*
* The GURPS game is Copyright © 1986-1989, 1991-1994 by Steve Jackson Games Incorporated. This product includes
* copyrighted material from the GURPS game, which is used by permission of Steve Jackson Games Incorporated. All
* rights reserved by Steve Jackson Games Incorporated.
*
************************************************************************************************************************

*******************************************************************************************************\[STOP]
[ATTRIBUTES]
******************************************************************************************************\[START]
#ReplaceTags in ST:ST with "maxscore(20)"
#ReplaceTags in ST:DX with "maxscore(20)"
#ReplaceTags in ST:IQ with "maxscore(20)"
#ReplaceTags in ST:HT with "maxscore(20)"
#ReplaceTags in ST:Hit Points with "minscore(ST:ST * 0.7), maxscore(ST:ST * 1.3)"
#ReplaceTags in ST:Fatigue Points with "minscore(ST:HT * 0.7), maxscore(ST:HT * 1.3)"
#ReplaceTags in ST:Will with "minscore(@max(0, ST:IQ - 4)), maxscore(@max(20, ST:IQ))"
#ReplaceTags in ST:Perception with "minscore(@max(0, ST:IQ - 4)), maxscore(@max(20, ST:IQ))"
#ReplaceTags in ST:Basic Speed with "minscore(@max(0, ((ST:DX + ST:HT) / 4) - 2)), maxscore(((ST:DX + ST:HT) / 4) + 2)"
#ReplaceTags in ST:Basic Move with "minscore(@max(0, ST:Basic Speed - 3)), maxscore(ST:Basic Speed + 3)"

* Power Investiture Prerequisite Work-around Stats
Unholy PI, basevalue(0), display(no), minscore(0), maxscore(1000000), hide(yes)

Basic Air Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),
	basevalue(	@if(AD:Brachiator THEN ST:Basic Move / 2 ELSE _
			@if(AD:Walk on Air THEN ST:Ground Move ELSE _
			@if(AD:Infernal Flight THEN 2 * ST:Basic Speed ELSE _
			@if(AD:Celestial Flight THEN 2 * ST:Basic Speed ELSE _
			@if(AD:Gargoyle Flight THEN 2 * ST:Basic Speed ELSE _
			@if(AD:Pixie Flight THEN 2 * ST:Basic Speed ELSE _
			@if(AD:Elven Flight THEN 2 * ST:Basic Speed ELSE _
			@if(AD:Flight THEN @if(@itemhasmod(AD:Flight, Space Flight Only) THEN 0 ELSE 2 * ST:Basic Speed) ELSE 0) ) ) ) ) ) ) ) )

***************************************************************************************
[ADVANTAGES]
***************************************************************************************
<Exotic Physical>
Energy Reserve (Holy), 3/6, mods(Energy Reserve), cat(Attributes, Exotic, Physical), page(P119)
Energy Reserve (Unholy), 3/6, modes(Energy Reserve), cat(Attributes, Exotic, Physical), page(P119)
Energy Reserve (Druidic), 3/6, mods(Energy Reserve), cat(Attributes, Exotic, Physical), page(P119)
Energy Reserve (Magical), 3/6, mods(Energy Reserve), cat(Attributes, Exotic, Physical), page(P119)

<Mundane Physical>
Resistant to Metabolic Hazards, 10/15/30, levelnames(+3 to resist, +8 to resist, Immune), page(B81), cat(Mundane, Physical), upto(3)
Two-Weapon Fighting ([Single-Handed Weapon]), 6, displaycost(varies), mods(Two-Weapons), needs(AD:Trained by a Master | AD:Weapon Master), page(DF3:41), cat(Mundane, Physical), x(_
	#InputReplace("Specify the single-handed weapon you can dual wield:", "[Single-Handed Weapon]", "Single-Handed Weapon", "Two-Weapon Fighting"),
	#message("Select the Has Ambidexterity modifier only if you already have Ambidexerity or if you want it to be added to your character sheet.") )

<Supernatural Mental>
Mortal Foe (%foetypealiaslist%), 5/10, page(DF4:40), cat(Supernatural Mental), x(_
	#message("You must have a combat skill of 20+ to take this advantage. Each additional level requires an additional +2 levels."),
	#ChoiceList(_
		name(foetype),
		title(Class of foe),
		text("Select the class of foe that is your mortal enemy."),
		picksallowed(1),
		method(bynumber),
		list(_
			"Constructs",
			"Demons",
			"Dire Animals",
			"Elder Things",
			"Elementals",
			"Faeries",
			"Hybrids",
			"Undead"_
		),
		aliaslist(_
			"Constructs",
			"Demons",
			"Dire Animals",
			"Elder Things",
			"Elementals",
			"Faeries",
			"Hybrids",
			"Undead"_
		)_
	)_
)

<Racial Template Advantages>

* Coleopteran
#clone "AD:360° Vision" as "AD:Coleopteran 360° Vision"
#ReplaceTags in "AD:Coleopteran 360° Vision" with "cat(Racial Template Advantages)"

#clone "AD:Damage Resistance" as "AD:Coleopteran Damage Resistance"
#ReplaceTags in "AD:Coleopteran Damage Resistance" with "initmods( Can't Wear Armor, -40%, group(Damage Resistance), page(B47) ), upto(5), displaycost(3/6), cat(Racial Template Advantages)"
#MergeTags in "AD:Coleopteran Damage Resistance" with "description(Coleopteran Damage Resistance is only available to coleopteran characters and cannot be modified)"

#clone "AD:Extra Arms" as "AD:Coleopteran Extra Arms"
#ReplaceTags in "AD:Coleopteran Extra Arms" with "cat(Racial Template Advantages)"

#clone "AD:Vibration Sense" as "AD:Coleopteran Antennae Sense"
#MergeTags in "AD:Coleopteran Antennae Sense" with "description(Sensitive to vibrations in the air.)"
#ReplaceTags in "AD:Coleopteran Antennae Sense" with "cat(Racial Template Advantages)"

* Corpse-Eater
#clone "AD:Reduced Consumption" as "AD:Corpse-Eater Reduced Consumption"
#ReplaceTags in "AD:Corpse-Eater Reduced Consumption" with "displaycost(1), initmods( Cast-Iron Stomach, -50%, group(Reduced Consumption), page(B80) ), cat(Racial Template Advantages)"

* Dwarf
#clone "AD:Damage Resistance" as "AD:Dwarf Damage Resistance"
#ReplaceTags in "AD:Dwarf Damage Resistance" with "upto(1), displaycost(3), initmods( Tough Skin, -40%, group(Damage Resistance), page(B47) ), cat(Racial Template Advantages)"

* Elves
#clone "AD:Telescopic Vision" as "AD:Elven Telescopic Vision"
#ReplaceTags in "AD:Elven Telescopic Vision" with "upto(1), cat(Racial Template Advantages)"

#clone "AD:Doesn't Breathe" as "AD:Elven Doesn't Breath"
#ReplaceTags in "AD:Elven Doesn't Breath" with "displaycost(10), initmods( Gills, -50%, group(Doesn't Breathe), page(B49) ), cat(Racial Template Advantages)"

#clone "AD:Amphibious" as "AD:Elven Amphibious"
#ReplaceTags in "AD:Elven Amphibious" with "cat(Racial Template Advantages)"

#clone "AD:Pressure Support" as "AD:Elven Pressure Support"
#ReplaceTags in "AD:Elven Pressure Support" with "cat(Racial Template Advantages)"

#ReplaceTags in "AD:Flight" with "replacetags(in "ST:Air Move" with "hide(), display(yes), mainwin(11)")"

#clone "AD:Flight" as "AD:Elven Flight"
#ReplaceTags in "AD:Elven Flight" with "displaycost(30), initmods( Winged, -25%, group(Flight), page(B56) ), cat(Racial Template Advantages)"

* Faun
#clone "AD:Striker (Crushing)" as "AD:Striker (Faun Horns; Crushing)"
#ReplaceTags in {AD:Striker (Faun Horns; Crushing)} with {levelnames(), x(), cat(Racial Template Advantages)}

* Leprechaun
#clone "AD:Reduced Consumption" as "AD:Leprechaun Reduced Consumption"
#ReplaceTags in "AD:Leprechaun Reduced Consumption" with "cost(6), displaycost(6), cat(Racial Template Advantages)"

* Pixie
#clone "AD:Reduced Consumption" as "AD:Pixie Reduced Consumption"
#ReplaceTags in "AD:Pixie Reduced Consumption" with "cost(8), displaycost(8), cat(Racial Template Advantages)"

#clone "AD:Flight" as "AD:Pixie Flight"
#ReplaceTags in "AD:Pixie Flight" with "displaycost(30), initmods( Winged, -25%, group(Flight), page(B56) ), cat(Racial Template Advantages)"

* Gargoyle
#clone "AD:Striker (Impaling)" as "AD:Striker (Gargoyle Tail; Impaling)"
#ReplaceTags in {AD:Striker (Gargoyle Tail; Impaling)} with {levelnames(), x(), displaycost(5), initmods( Clumsy, -20%/-40%, group(Striker), page(B88), levelnames(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20), gives(-1 to owner::skillscore), level(2) ), cat(Racial Template Advantages)}

#clone "AD:Damage Resistance" as "AD:Gargoyle Damage Resistance"
#ReplaceTags in "AD:Gargoyle Damage Resistance" with "displaycost(10), cat(Racial Template Advantages)"

#clone "AD:Flight" as "AD:Gargoyle Flight"
#ReplaceTags in "AD:Gargoyle Flight" with "displaycost(30), initmods( Winged, -25%, group(Flight), page(B56) ), cat(Racial Template Advantages)"

* Goblin-Kin
#clone "AD:Infravision" as "AD:Goblin-Kin Infravision"
#ReplaceTags in "AD:Goblin-Kin Infravision" with "cat(Racial Template Advantages)"

* Celestial
#clone "AD:Doesn't Breathe" as "AD:Celestial Doesn't Breath"
#ReplaceTags in "AD:Celestial Doesn't Breath" with "cat(Racial Template Advantages)"

#clone "AD:Doesn't Eat or Drink" as "AD:Celestial Doesn't Eat or Drink"
#ReplaceTags in "AD:Celestial Doesn't Eat or Drink" with "cat(Racial Template Advantages)"

#clone "AD:Doesn't Sleep" as "AD:Celestial Doesn't Sleep"
#ReplaceTags in "AD:Celestial Doesn't Sleep" with "cat(Racial Template Advantages)"

#clone "AD:Extra Life" as "AD:Celestial Extra Life"
#ReplaceTags in "AD:Celestial Extra Life" with "cat(Racial Template Advantages)"

#clone "AD:Flight" as "AD:Celestial Flight"
#ReplaceTags in "AD:Celestial Flight" with "displaycost(30), initmods( Winged, -25%, group(Flight), page(B56) ), cat(Racial Template Advantages)"

#clone "AD:Resistant to Metabolic Hazards" as "AD:Celestial Immunity to Metabolic Hazards"
#ReplaceTags in "AD:Celestial Immunity to Metabolic Hazards" with "displaycost(30), cost(30), levelnames(), cat(Racial Template Advantages)"

#clone "AD:Walk on Liquid" as "AD:Celestial Walk on Liquid"
#ReplaceTags in "AD:Celestial Walk on Liquid" with "cat(Racial Template Advantages)"

#clone "AD:Walk on Air" as "AD:Celestial Walk on Air"
#ReplaceTags in "AD:Celestial Walk on Air" with "cat(Racial Template Advantages)"

* Elder-Spawn
#clone "AD:Injury Tolerance" as "AD:Elder-Spawn Injury Tolerance"
#ReplaceTags in "AD:Elder-Spawn Injury Tolerance" with "displaycost(40), x(), cat(Racial Template Advantages)"

#clone "AD:Slippery" as "AD:Elder-Spawn Slippery"
#ReplaceTags in "AD:Elder-Spawn Slippery" with "cat(Racial Template Advantages)"

* Infernal
#clone "AD:Damage Resistance" as "AD:Infernal Damage Resistance"
#ReplaceTags in "AD:Infernal Damage Resistance" with "cat(Racial Advantages)"

#clone "AD:Dark Vision" as "AD:Infernal Dark Vision"
#ReplaceTags in "AD:Infernal Dark Vision" with "cat(Racial Advantages)"

#clone "AD:Doesn't Breathe" as "AD:Infernal Doesn't Breathe"
#ReplaceTags in "AD:Infernal Doesn't Breathe" with "cat(Racial Advantages)"

#clone "AD:Doesn't Eat or Drink" as "AD:Infernal Doesn't Eat or Drink"
#ReplaceTags in "AD:Infernal Doesn't Eat or Drink" with "cat(Racial Advantages)"

#clone "AD:Doesn't Sleep" as "AD:Infernal Doesn't Sleep"
#ReplaceTags in "AD:Infernal Doesn't Sleep" with "cat(Racial Advantages)"

#clone "AD:Extra Life" as "AD:Infernal Extra Life"
#ReplaceTags in "AD:Infernal Extra Life" with "cat(Racial Advantages)"

#clone "AD:Flight" as "AD:Infernal Flight"
#ReplaceTags in "AD:Infernal Flight" with "displaycost(30), initmods( Winged, -25%, group(Flight), page(B56) ), cat(Racial Template Advantages)"

#clone "AD:Resistant to Metabolic Hazards" as "AD:Infernal Immunity to Metabolic Hazards"
#ReplaceTags in "AD:Infernal Immunity to Metabolic Hazards" with "displaycost(30), cost(30), levelnames(), cat(Racial Template Advantages)"

#clone "AD:Striker (Crushing)" as "AD:Striker (Infernal Horns; Crushing)"
#ReplaceTags in {AD:Striker (Infernal Horns; Crushing)} with {levelnames(), x(), cat(Racial Template Advantages)}
#MergeTags in "AD:Striker (Infernal Horns; Crushing)" with "taboo( AD:Striker (Infernal Horns; Impaling) )"

#clone "AD:Striker (Impaling)" as "AD:Striker (Infernal Horns; Impaling)"
#ReplaceTags in {AD:Striker (Infernal Horns; Impaling)} with {levelnames(), x(), cat(Racial Template Advantages)}
#MergeTags in "AD:Striker (Infernal Horns; Impaling)" with "taboo( AD:Striker (Infernal Horns; Crushing) )"

#clone "AD:Striker (Piercing)" as "AD:Striker (Infernal Tail; Piercing)"
#ReplaceTags in {AD:Striker (Infernal Tail; Piercing)} with {levelnames(), x(), cat(Racial Template Advantages)}
#MergeTags in "AD:Striker (Infernal Tail; Piercing)" with "taboo( AD:Striker (Infernal Tail; Large Piercing), AD:Striker (Infernal Tail; Impaling) )"

#clone "AD:Striker (Large Piercing)" as "AD:Striker (Infernal Tail; Large Piercing)"
#ReplaceTags in {AD:Striker (Infernal Tail; Large Piercing)} with {levelnames(), x(), cat(Racial Template Advantages)}
#MergeTags in "AD:Striker (Infernal Tail; Large Piercing)" with "taboo( AD:Striker (Infernal Tail; Piercing), AD:Striker (Infernal Tail; Impaling) )"

#clone "AD:Striker (Impaling)" as "AD:Striker (Infernal Tail; Impaling)"
#ReplaceTags in {AD:Striker (Infernal Tail; Impaling)} with {levelnames(), x(), cat(Racial Template Advantages)}
#MergeTags in "AD:Striker (Infernal Tail; Large Piercing)" with "taboo( AD:Striker (Infernal Tail; Piercing), AD:Striker (Infernal Tail; Large Piercing) )"

* Air-Infused
#clone "AD:Damage Resistance" as "AD:Air-Infused Damage Resistance"
#ReplaceTags in "AD:Air-Infused Damage Resistance" with "displaycost(3/5), initmods(_
	Mana Sensitive, -10%, group(_General), page(DF3:13) _
	| Limited Defense (Air and Weather), -40%, group(Limited Defense), page(B46) ), cat(Racial Template Advantages)"

#clone "AD:Walk on Air" as "AD:Air-Infused Walk on Air"
#ReplaceTags in "AD:Air-Infused Walk on Air" with "displaycost(18), initmods( Mana Sensitive, -10%, group(_General), page(DF3:13) ), cat(Racial Template Advantages)"

* Earth-Infused
#clone "AD:Damage Resistance" as "AD:Earth-Infused Damage Resistance"
#ReplaceTags in "AD:Earth-Infused Damage Resistance" with "displaycost(3/5), initmods(_
	Mana Sensitive, -10%, group(_General), page(DF3:13) _
	| Limited Defense (Earth and Stone), -40%, group(Limited Defense), page(B46) ), cat(Racial Template Advantages)"

#clone "AD:Permeation" as "AD:Earth-Infused Permeation"
#ReplaceTags in "AD:Earth-Infused Permeation" with "displaycost(44), cost(40), levelnames(Very Common), initmods(_
	Mana Sensitive, -10%, group(_General), page(DF3:13) _
	| Extended (Stone), +20%/+40%, group(Permeation), page(P66), level(1) ), cat(Racial Template Advantages)"

* Fire-Infused
#clone "AD:Damage Resistance" as "AD:Fire-Infused Damage Resistance"
#ReplaceTags in "AD:Fire-Infused Damage Resistance" with "displaycost(3/5), initmods(_
	Mana Sensitive, -10%, group(_General), page(DF3:13) _
	| Limited Defense (Fire and Heat), -40%, group(Limited Defense), page(B46) ), cat(Racial Template Advantages)"

#clone "AD:Injury Tolerance" as "AD:Fire-Infused Injury Tolerance"
#ReplaceTags in "AD:Fire-Infused Injury Tolerance" with "displaycost(25), x(), initmods(_
	Damage Reduction (/2), +50, mods(Limited Defense), group(Injury Tolerance), page(P53) _
	| Mana Sensitive, -10%, group(_General), page(DF3:13) _
	| Limited Defense (Fire and Heat), -40%, group(Limited Defense), page(B46) ), cat(Racial Template Advantages)"

* Water-Infused
#clone "AD:Amphibious" as "AD:Water-Infused Amphibious"
#ReplaceTags in "AD:Water-Infused Amphibious" with "displaycost(9), initmods(_
	Mana Sensitive, -10%, group(_General), page(DF3:13) ), cat(Racial Template Advantages)"

#clone "AD:Damage Resistance" as "AD:Water-Infused Damage Resistance"
#ReplaceTags in "AD:Water-Infused Damage Resistance" with "displaycost(3/5), initmods(_
	Mana Sensitive, -10%, group(_General), page(DF3:13) _
	| Limited Defense (Dehydration and Water), -40%, group(Limited Defense), page(B46) ), cat(Racial Template Advantages)"

#clone "AD:Doesn't Breathe" as "AD:Water-Infused Doesn't Breathe"
#ReplaceTags in "AD:Water-Infused Doesn't Breathe" with "displaycost(13), initmods(_
	Mana Sensitive, -10%, group(_General), page(DF3:13) _
	| Oxygen Absorption, -25%, group(Doesn't Breathe), page(B49) ), cat(Racial Template Advantages)"

#clone "AD:Pressure Support" as "AD:Water-Infused Pressure Support"
#ReplaceTags in "AD:Water-Infused Pressure Support" with "displaycost(15), cat(Racial Template Advantages)"

* Minotaur
#clone "AD:Damage Resistance" as "AD:Minotaur Skull Damage Resistance"
#ReplaceTags in "AD:Minotaur Skull Damage Resistance" with "displaycost(3), initmods(_
	Partial: Skull, -70%, shortname(Skull Only), gives(=-Owner::Level to DR), group(Damage Resistance), page(B47) ), cat(Racial Template Advantages)"

#clone "AD:Damage Resistance" as "AD:Minotaur Damage Resistance"
#ReplaceTags in "AD:Minotaur Damage Resistance" with "displaycost(6), initmods(_
	Tough Skin, -40%, group(Damage Resistance), page(B47) ), cat(Racial Template Advantages)"

#clone "AD:Striker (Impaling)" as "AD:Striker (Horns; Impaling)"
#ReplaceTags in {AD:Striker (Horns; Impaling)} with {levelnames(), x(), displaycost(13), initmods(_
	Long: any reach, +100%/+200%, group(Striker), page(B88), shortname(Long), gives(=nobase to owner::reach$, ="C,$if(me::level=1 THEN "1" ELSE "1-$solver(me::level)")" to owner::reach$) _
	| Limited Arc, -40%, group(Striker), page(B88) ), cat(Racial Template Advantages)}

* Ogre
#clone "AD:Damage Resistance" as "AD:Ogre Damage Resistance"
#ReplaceTags in "AD:Ogre Damage Resistance" with "displaycost(3/6), initmods(_
	Tough Skin, -40%, group(Damage Resistance), page(B47) ), cat(Racial Template Advantages)"

* Reptilian
#clone "AD:Damage Resistance" as "AD:Reptilian Damage Resistance"
#ReplaceTags in "AD:Reptilian Damage Resistance" with "displaycost(3/6), initmods(_
	Tough Skin, -40%, group(Damage Resistance), page(B47) ), cat(Racial Template Advantages)"

* Dragon-Blooded
#clone "AD:Burning Attack" as "AD:Dragon Burning Attack"
#ReplaceTags in "AD:Dragon Burning Attack" with "initmods(_
	Jet, +0%, group(_Attack Enhancements), page(B106), gives(-3 to owner::acc, *0.5 to owner::rangehalfdam, *0.1 to owner::rangemax) ), cat(Racial Template Advantages)"

* Lizard Man
#clone "AD:Striker (Crushing)" as "AD:Striker (Lizard Man Tail; Crushing)"
#ReplaceTags in {AD:Striker (Lizard Man Tail; Crushing)} with {levelnames(), x(), displaycost(3), cat(Racial Template Advantages), initmods( _
	Clumsy, -20%/-40%, group(Striker), page(B88), levelnames(-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20), gives(-1 to owner::skillscore), level(2) )}

#clone "AD:Terrain Adaptation" as "AD:Lizard Man Terrain Adaptation (Sand)"
#ReplaceTags in "AD:Lizard Man Terrain Adaptation (Sand)" with "cat(Racial Template Advantages)"

#clone "AD:Terrain Adaptation" as "AD:Lizard Man Terrain Adaptation (Swamp)"
#ReplaceTags in "AD:Lizard Man Terrain Adaptation (Swamp)" with "cat(Racial Template Advantages)"

* Troll
#clone "AD:Regeneration" as "AD:Troll Regeneration"
#ReplaceTags in "AD:Troll Regeneration" with "displaycost(20), initmods( Not vs. Fire or Acid, -20%, group(Regeneration), page(DF3:15) ), cat(Racial Template Advantages)"

#clone "AD:Universal Digestion" as "AD:Troll Universal Digestion"
#ReplaceTags in "AD:Troll Universal Digestion" with "cat(Racial Template Advantages)"

* Wildman
#clone "AD:Arm ST" as "AD:Wildman Arm ST"
#ReplaceTags in "AD:Wildman Arm ST" with "displaycost(5), initmods(_
	Two arms, *5/3, gives(_
		+owner::level to ST:One Arm Lifting ST,
		+owner::level to ST:One Arm Striking ST,
		+owner::level to ST:Two Arm Lifting ST,
		+owner::level to ST:Two Arm Striking ST _
	), group(Arm ST), page(B40) ), cat(Racial Template Advantages)"

#clone "AD:Brachiator" as "AD:Wildman Brachiator"
#ReplaceTags in "AD:Wildman Brachiator" with "cat(Racial Template Advantages)"

* Professional Power Up Clones

*Barbarian
#clone "AD:Arm ST" as "AD:Barbarian Arm ST"

#clone "AD:Damage Resistance" as "AD:Barbarian Damage Resistance (Crushing)"
#ReplaceTags in "AD:Barbarian Damage Resistance (Crushing)" with "displaycost(1 or 2), initmods(Tough Skin, -40%, group(Damage Resistance), page(B47) | Limited (Crushing only), -40%, group(Damage Resistance), page(DF3:38) )"

#clone "AD:Damage Resistance" as "AD:Barbarian Damage Resistance"
#ReplaceTags in "AD:Barbarian Damage Resistance" with "displaycost(3 or 6), initmods(Tough Skin, -40%, group(Damage Resistance), page(B47) )"

* Bard
#clone "AD:Mind Probe" as "AD:Bard-Song Mind Probe"
#ReplaceTags in "AD:Bard-Song Mind Probe" with "displaycost(14), initmods(Bard Song, -30%, group(_Power Modifier), page(DF21))"
#MergeTags in "AD:Bard-Song Mind Probe" with "cat(Bard-Song)"

#clone "AD:Sonar" as "AD:Bard-Song Sonar"
#ReplaceTags in "AD:Bard-Song Sonar" with "displaycost(14), initmods(Bard Song, -30%, group(_Power Modifier), page(DF21))"
#MergeTags in "AD:Bard-Song Sonar" with "cat(Bard-Song)"

#clone "AD:Unfazeable" as "AD:Bard-Song Unfazeable"
#ReplaceTags in "AD:Bard-Song Unfazeable" with "displaycost(11), initmods(Bard Song, -30%, group(_Power Modifier), page(DF21))"
#MergeTags in "AD:Bard-Song Unfazeable" with "cat(Bard-Song)"

#MergeTags in "AD:Bardic Talent" with {gives(+1 to "AD:Bard-Song Mind Probe::skillscore", +1 to "AD:Bard-Song Sonar::skillscore")}

#clone "AD:Bardic Talent" as "AD:Bardic Magery"
#ReplaceTags in "AD:Bardic Magery" with "displaycost(11/level), cost(11/22), upto(6), needs(AD:Magery 0)"
#MergeTags in "AD:Bardic Magery" with "page(DF3:20)"
#ReplaceTags in "AD:Bardic Magery" with {gives(_
	+1 to "AD:Bard-Song Empathy::skillscore",
	+1 to "AD:Bard-Song Mimicry::skillscore",
	+1 to "AD:Bard-Song Mind Control::skillscore",
	+1 to "AD:Bard-Song Mind Probe::skillscore",
	+1 to "AD:Bard-Song Rapier Wit::skillscore",
	+1 to "AD:Bard-Song Speak With Animals::skillscore",
	+1 to "AD:Bard-Song Sonar::skillscore",
	+1 to "AD:Bard-Song Subsonic Speech::skillscore",
	+1 to "AD:Bard-Song Telecommunication (Telesend)::skillscore",
	+1 to "AD:Bard-Song Terror::skillscore",
	+1 to "AD:Bard-Song Ultrasonic Speech::skillscore",
	+1 to "SK:Thaumatology",
	+1 to "ST:Magery 0",
	+1 to "ST:Magery" _
)}

#clone "AD:Bardic Talent" as "AD:Bard-Song Talent"
#ReplaceTags in "AD:Bardic Talent" with "description(This is the basic Bard talent and should be taken by most Bards. It substitutes for Magery for the Communication & Empathy and Mind Control Colleges. If the character has Magery the character should take Bard-Song talent instead.)"
#MergeTags in "AD:Bard-Song Talent" with "page(DF3:20)"
#ReplaceTags in "AD:Bard-Song Talent" with "displaycost(5/level), cost(5/10), upto(6)"
#ReplaceTags in "AD:Bard-Song Talent" with {gives(_
	+1 to "AD:Bard-Song Empathy::skillscore",
	+1 to "AD:Bard-Song Mimicry::skillscore",
	+1 to "AD:Bard-Song Mind Control::skillscore",
	+1 to "AD:Bard-Song Mind Probe::skillscore",
	+1 to "AD:Bard-Song Rapier Wit::skillscore",
	+1 to "AD:Bard-Song Speak With Animals::skillscore",
	+1 to "AD:Bard-Song Sonar::skillscore",
	+1 to "AD:Bard-Song Subsonic Speech::skillscore",
	+1 to "AD:Bard-Song Telecommunication (Telesend)::skillscore",
	+1 to "AD:Bard-Song Terror::skillscore",
	+1 to "AD:Bard-Song Ultrasonic Speech::skillscore"_
	), taboo(AD:Bardic Talent), description(If a character has Magery he should take Bard-Song Talent. Bard-Song Talent substitutes for Bardic Talent for all Bard-Song abilities.)}

* Cleric
#clone "AD:Wild Talent" as "AD:Clerical Wild Talent"
#ReplaceTags in "AD:Clerical Wild Talent" with "displaycost(14), initmods(_
	Focused, -20%, group(Wild Talent), page(B100) _
	| Holy, -10%, group(_Power Modifier), page(DF22) )"

* Druid
#clone "AD:Alternate Form" as "AD:Druidic Alternate Form"
#ReplaceTags in "AD:Druidic Alternate Form" with "displaycost(14 each), initmods( Druidic, -10%, group(_Power Modifier), page(DF22) )"

#clone "AD:Damage Resistance" as "AD:Druidic Damage Resistance"
#ReplaceTags in "AD:Druidic Damage Resistance" with "displaycost(4/7+), upto(4), initmods(_
	Druidic, -10%, group(_Power Modifier), page(DF22) _
	| Limited Defense (Elemental), -20%, group(Limited Defense), page(B46) )"

* Martial Artist
#clone "AD:Claws (Blunt Claws)" as "AD:Chi Mastery Claws (Blunt Claws)"
#ReplaceTags in "AD:Chi Mastery Claws (Blunt Claws)" with "displaycost(3), initmods( Chi, -10%, group(_Power Modifier), page(DF21) )"

#clone "AD:Clinging" as "AD:Chi Mastery Clinging"
#ReplaceTags in "AD:Chi Mastery Clinging" with "displaycost(18), initmods( Chi, -10%, group(_Power Modifier), page(DF21) )"

#clone "AD:Enhanced Time Sense" as "AD:Chi Mastery Enhanced Time Sense"
#ReplaceTags in "AD:Chi Mastery Enhanced Time Sense" with "displaycost(41), initmods( Chi, -10%, group(_Power Modifier), page(DF21) )"

* Scout
#clone "AD:Enhanced Tracking" as "AD:Scout Enhanced Tracking"
#MergeTags in "AD:Scout Enhanced Tracking" with "mods(Enhanced Tracking)"
#ReplaceTags in "AD:Scout Enhanced Tracking" with "displaycost(6/level), initmods( Multiple Lock-Ons, +20%, group(Enhanced Tracking), page(P49) )"

#clone "AD:Telescopic Vision" as "AD:Scout Telescopic Vision"
#ReplaceTags in "AD:Scout Telescopic Vision" with "upto(2)"

* Swashbuckler
#clone "AD:Enhanced Time Sense" as "AD:Swashbuckler Enhanced Time Sense"

* Thief
#clone "AD:Vibration Sense" as "AD:Thief Vibration Sense (Air)"

* Wizard
#clone "AD:Magic Resistance" as "AD:Wizard Magic Resistance"
#ReplaceTags in "AD:Wizard Magic Resistance" with "displaycost(5), initmods(_
	Improved, +150%, group(Magic Resistance), page(B67) )"

#clone "AD:Mana Enhancer" as "AD:Wizard Mana Enhancer"

<Unholy Might>
*Unholy Warrior
Unholiness, 5/10, upto($solver(6-"AD:Extra Unholiness::level")), page(DF21), gives(_
	+1 to "AD:Unholy Might Ally (Demon or undead of equal points):skillscore",
	+1 to "AD:Unholy Might Channeling:skillscore",
	+1 to "AD:Unholy Might Detect (Evil):skillscore",
	+1 to "AD:Unholy Might Detect (Good):skillscore",
	+1 to "AD:Unholy Might Detect (Supernatural Beings):skillscore",
	+1 to "AD:Unholy Might Dread Touch:skillscore",
	+1 to "AD:Unholy Might Medium:skillscore",
	+1 to "AD:Unholy Might Patron:skillscore",
	+1 to "AD:Unholy Might Spirit Empathy:skillscore",
	+1 to "AD:Unholy Might Terror:skillscore" _
	), cat(Supernatural,Mental,Supernatural Mental)

#clone "AD:Unholiness" as "AD:Extra Unholiness"
#replacetags in "AD:Extra Unholiness" with "needs(AD:Unholiness=1)"
#replacetags in "AD:Extra Unholiness" with "upto($solver(4-"AD:Unholiness::level"))"

#clone "AD:Power Investiture" as "AD:Power Investiture (Unholy)"
#ReplaceTags in "AD:Power Investiture (Unholy)" with {gives(_
	+1 to "AD:Unholy Might Ally (Demon or undead of equal points):skillscore",
	+1 to "AD:Unholy Might Channeling:skillscore",
	+1 to "AD:Unholy Might Detect (Evil):skillscore",
	+1 to "AD:Unholy Might Detect (Good):skillscore",
	+1 to "AD:Unholy Might Detect (Supernatural Beings):skillscore",
	+1 to "AD:Unholy Might Dread Touch:skillscore",
	+1 to "AD:Unholy Might Medium:skillscore",
	+1 to "AD:Unholy Might Patron:skillscore",
	+1 to "AD:Unholy Might Spirit Empathy:skillscore",
	+1 to "AD:Unholy Might Terror:skillscore",
		+1 to "ST:Unholy PI",
		+1 to "CO:~Unholy"_
		)}
#replacetags in  "AD:Power Investiture (Unholy)" with "upto($solver(6-"AD:Extra Power Investiture (Unholy)::level"))"
#MergeTags in "AD:Power Investiture (Unholy)" with "cat(Unholy Might)"

//#clone "AD:Power Investiture (Unholy)" as "AD:Extra Power Investiture (Unholy)"
//#replacetags in "AD:Extra Power Investiture (Unholy)" with "needs(AD:Power Investiture (Unholy)=1), replacetags()"
//#replacetags in "AD:Extra Power Investiture (Unholy)" with "upto($solver(6-"AD:Power Investiture (Unholy)::level")), taboo(AD:Power Investiture (Unholy))"

Unholy Might Ally (Demon or undead of equal points), 5,
	displaycost(19),
	mods(Frequency of Appearance), page(B36),
	initmods(_
		Frequency: roll of 12 or less (Quite often), *2, shortname(12 or less), group(Frequency of Appearance), page(B36) | _
		Unholy, -10%, group(_Power Modifier), page(DF22) | _
		Summonable, +100%, group(Ally), page(B38) _
	), cat(Supernatural, Mental, Supernatural Mental, Supernatural, Social)

#clone "AD:Channeling" as "AD:Unholy Might Channeling"
#ReplaceTags in "AD:Unholy Might Channeling" with "initmods(Unholy, -10%, group(_Power Modifier), page(DF3:41)|Specialized (Demons), -50%, group(_General), page(DF3:41))"
#ReplaceTags in "AD:Unholy Might Channeling" with "displaycost(4)"
#MergeTags in "AD:Unholy Might Channeling" with "cat(Unholy Might)"

Unholy Might Detect (Evil), 20, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Unholy, -10%, group(_Power Modifier), page(DF3:41)), displaycost(18)

Unholy Might Detect (Good), 20, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Unholy, -10%, group(_Power Modifier), page(DF3:41)), displaycost(18)

Unholy Might Detect (Supernatural Beings), 20, mods(Detect), page(B48), cat(Exotic Physical, Exotic, Mental, Physical),
	initmods(Unholy, -10%, group(_Power Modifier), page(DF3:41)), displaycost(18)

#clone "AD:Toxic Attack" as "AD:Unholy Might Dread Touch"
#ReplaceTags in "AD:Unholy Might Dread Touch" with "initmods(_
	Unholy, -10%, group(_Power Modifier), page(DF3:41) | _
	Cosmic: Irresistable Attack, +300%|Costs 1 FP, -5% | _
	Melee Attack: Reach C, -30%, group(_Attack Limitations), page(B112),gives( _
	=nobase to owner::rangehalfdam$,
	=nobase to owner::rangemax$,
	=nobase to owner::reach$,
	="C" to owner::reach$) | _
	Melee Attack: Cannot Parry, -5%, shortname(Cannot Parry), group(_Attack Limitations), page(B112),
	gives(_
		=nobase to owner::parry$,
		="No" to owner::parry$ _
		))"
#ReplaceTags in "AD:Unholy Might Dread Touch" with "displaycost(14), upto(1), skillused(ST:DX, SK:Brawling), x()"
#MergeTags in "AD:Unholy Might Dread Touch" with "cat(Unholy Might)"

* Detect (PM, -10%) for evil [18], good [18], or supernatural beings [18]

#clone "AD:Medium" as "AD:Unholy Might Medium"
#ReplaceTags in "AD:Unholy Might Medium" with "initmods( Unholy, -10%, group(_Power Modifier), page(DF3:41) | Specialized (Demons), -50%, group(_General), page(DF3:41) )"
#ReplaceTags in "AD:Unholy Might Medium" with "displaycost(4)"
#MergeTags in "AD:Unholy Might Medium" with "cat(Unholy Might)"

#clone "AD:Patron" as "AD:Unholy Might Patron"
#ReplaceTags in "AD:Unholy Might Patron" with "initmods( _
	Unholy, -10%, group(_Power Modifier), page(DF3:41) | _
	Special Abilities, +100%, page(B72) | _
	Highly Accessible, +50%, page(B72) | _
	Minimal Intervention, -50%, page(B72) | _
	Frequency: roll of  9 or less (Fairly often), *1, shortname(9 or less), group(Frequency of Appearance) )"
#ReplaceTags in "AD:Unholy Might Patron" with "displaycost(29/57), cost(30)"
#MergeTags in "AD:Unholy Might Patron" with "cat(Unholy Might)"
#ReplaceTags in "AD:Unholy Might Patron" with "x()"

Unholy Might Resistant to Good Supernatural Powers, 5/7, levelnames(+3 to resist,+8 to resist,Immune), page(B81), cat(Mundane, Physical), upto(2), initmods( Unholy, -10%, group(_Power Modifier), page(DF3:41) )

#clone "AD:Spirit Empathy" as "AD:Unholy Might Spirit Empathy"
#ReplaceTags in "AD:Unholy Might Spirit Empathy" with "initmods( Unholy, -10%, group(_Power Modifier), page(DF3:41) )"
#ReplaceTags in "AD:Unholy Might Spirit Empathy" with "displaycost(9)"
#MergeTags in "AD:Unholy Might Spirit Empathy" with "cat(Unholy Might)"

#clone "AD:Terror" as "AD:Unholy Might Terror"
#ReplaceTags in "AD:Unholy Might Terror" with "initmods( Unholy, -10%, group(_Power Modifier), page(DF3:41) )"
#ReplaceTags in "AD:Unholy Might Terror" with "displaycost(27)"
#MergeTags in "AD:Unholy Might Terror" with "cat(Unholy Might)"

<Psionics>
* Psionics

Psi Talent, 5/10, upto(6), page(DF3:40), gives(_
	+1 to "AD:Psionic Clairsentience:skillscore",
	+1 to "AD:Psionic Damage Resistance:skillscore",
	+1 to "AD:Psionic Detect (Psionics):skillscore",
	+1 to "AD:Psionic Affliction (Mind Blast):skillscore",
	+1 to "AD:Psionic Mind Control:skillscore",
	+1 to "AD:Psionic Mind Reading:skillscore",
	+1 to "AD:Psionic Mind Shield:skillscore",
	+1 to "AD:Psionic Psychometry:skillscore",
	+1 to "AD:Psionic Para-Radar:skillscore",
	+1 to "AD:Psionic Telecommunication (Telesend):skillscore",
	+1 to "AD:Psionic Telekinesis:skillscore"_
	), cat(Supernatural,Mental,Supernatural Mental)

#clone "AD:Unusual Background" as "AD:Unusual Background (Psionic)"
#ReplaceTags in "AD:Unusual Background (Psionic)" with "cost(10), displaycost(10), x()"
#MergeTags in "AD:Unusual Background (Psionic)" with "cat(Psionics)"

#clone "AD:Clairsentience" as "AD:Psionic Clairsentience"
#ReplaceTags in "AD:Psionic Clairsentience" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) )"
#ReplaceTags in "AD:Psionic Clairsentience" with "displaycost(45)"
#MergeTags in "AD:Psionic Clairsentience" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Damage Resistance" as "AD:Psionic Damage Resistance"
#ReplaceTags in "AD:Psionic Damage Resistance" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) | Limited Defense: Psi, -20%, group(Limited Defense), page(B46) )"
#ReplaceTags in "AD:Psionic Damage Resistance" with "displaycost(4 to 21), upto(6)"
#MergeTags in "AD:Psionic Damage Resistance" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Detect" as "AD:Psionic Detect (Psionics)"
#ReplaceTags in "AD:Psionic Detect (Psionics)" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) )"
#ReplaceTags in "AD:Psionic Detect (Psionics)" with "cost(10), displaycost(9), levelnames()"
#MergeTags in "AD:Psionic Detect (Psionics)" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Mind Control" as "AD:Psionic Mind Control"
#ReplaceTags in "AD:Psionic Mind Control" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) )"
#ReplaceTags in "AD:Psionic Mind Control" with "displaycost(45)"
#MergeTags in "AD:Psionic Mind Control" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Mind Reading" as "AD:Psionic Mind Reading"
#ReplaceTags in "AD:Psionic Mind Reading" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) )"
#ReplaceTags in "AD:Psionic Mind Reading" with "displaycost(27)"
#MergeTags in "AD:Psionic Mind Reading" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Mind Shield" as "AD:Psionic Mind Shield"
#ReplaceTags in "AD:Psionic Mind Shield" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) | Psi, -50%, group(Mind Shield), page(B70) )"
#ReplaceTags in "AD:Psionic Mind Shield" with "displaycost(2 to 10), upto(6)"
#MergeTags in "AD:Psionic Mind Shield" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Psychometry" as "AD:Psionic Psychometry"
#ReplaceTags in "AD:Psionic Psychometry" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) )"
#ReplaceTags in "AD:Psionic Psychometry" with "displaycost(18)"
#MergeTags in "AD:Psionic Psychometry" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Para-Radar" as "AD:Psionic Para-Radar"
#ReplaceTags in "AD:Psionic Para-Radar" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) )"
#ReplaceTags in "AD:Psionic Para-Radar" with "displaycost(36)"
#MergeTags in "AD:Psionic Para-Radar" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Telecommunication (Telesend)" as "AD:Psionic Telecommunication (Telesend)"
#ReplaceTags in "AD:Psionic Telecommunication (Telesend)" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) )"
#ReplaceTags in "AD:Psionic Telecommunication (Telesend)" with "displaycost(27)"
#MergeTags in "AD:Psionic Telecommunication (Telesend)" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Telekinesis" as "AD:Psionic Telekinesis"
#ReplaceTags in "AD:Psionic Telekinesis" with "initmods( Psionics, -10%, group(_Power Modifier), page(DF3:40) )"
#ReplaceTags in "AD:Psionic Telekinesis" with "displaycost(5-45), upto(10)"
#MergeTags in "AD:Psionic Telekinesis" with "cat(Psionics), needs( AD:Unusual Background (Psionic) )"

#clone "AD:Affliction" as "AD:Psionic Affliction (Mind Blast)"
#MergeTags in "AD:Psionic Affliction (Mind Blast)" with "cat(Psionics), mods(Secondary Effects), needs( AD:Unusual Background (Psionic) )"
#ReplaceTags in "AD:Psionic Affliction (Mind Blast)" with "x()"
#ReplaceTags in "AD:Psionic Affliction (Mind Blast)" with "displaycost(29)"
#ReplaceTags in "AD:Psionic Affliction (Mind Blast)" with "initmods(_
	Psionics, -10%, group(_Power Modifier), page(DF3:40)_
	| Based On Will, +20%, group(_Attack Enhancements), page(B102), gives(=nobasenocalc to owner::damage$, ="Will-$solver(owner::level - 1) " to owner::damage$)_
	| Extended Duration, +20%/+40%/+60%/+80%/+100%/+120%/+150%/+300%, levelnames(x3, x10, x30, x100, x300, x1000, Permanent with dispelling conditions, Permanent), upto(8), group(_General), page(B105)=1_
	| Malediction, +100%/+150%/+200%, upto(3), group(_Attack Enhancements), page(B106),
	levelnames(Receives -1/yd range, Uses Speed/Range Table, Uses Long-Distance Modifiers),
	gives(_
		=nobase to owner::reach$,
		=nobase to owner::acc$,
		=nobasenocalc to owner::rangehalfdam$,
		=nobasenocalc to owner::rangemax$,
		=nobase to owner::rof$,
		=nobase to owner::shots$,
		=nobase to owner::rcl$,
		=" mal " to owner::damtype$,
		=$indexedvalue(me::level, "-1/yd", "Speed/Range", "Long-Distance") to owner::rangemax$_
		)_
	| No Signature, +20%, group(_Attack Enhancements), page(B106)_
	| Incapacitation: Unconsciousness, +40%, shortname(Unconsciousness), group(Secondary Effects), page(B36)_
)"

*******************************************************************************************************\[STOP]
[PERKS]
******************************************************************************************************\[START]
<_General>
Giant Weapons, 1, page(DF3:10)

***************************************************************************************
[DISADVANTAGES]
***************************************************************************************
<Attributes>
#clone "DI:Reduced ST" as "DI:Racial Reduced ST"

<Mundane Social>
Social Stigma (Savage), -10, page(DF3:11), cat(Mundane, Social),
	conditional(-2 to ST:Reaction)

* Racial Template Clones

* Corpse-Eater
#clone "DI:Restricted Diet" as "DI:Corpse-Eater Restricted Diet"
#MergeTags in "DI:Corpse-Eater Restricted Diet" with "description( Corpse eaters must eat the flesh (fresh or otherwise) of sapient beings.)"

* Faerie Folk
#clone "DI:Dependency" as "DI:Faerie Dependency (Mana)"
#ReplaceTags in "DI:Faerie Dependency (Mana)" with "cost(-5)"
#ReplaceTags in "DI:Faerie Dependency (Mana)" with "initmods( Frequency Needed: Constantly, *5, shortname(Constantly), group(Dependency), page(B130) )"

#clone "DI:Odious Personal Habit" as "DI:Odious Racial Habit (Dirty)"
#ReplaceTags in "DI:Odious Racial Habit (Dirty)" with "cost(-5), displaycost(-5)"

* Celestial
#clone "DI:Divine Curse" as "DI:Celestial Divine Curse"
#ReplaceTags in "DI:Celestial Divine Curse" with "displaycost(-5), cost(-5)"
#MergeTags in "DI:Celestial Divine Curse" with "page(DF3:12)"

#clone "DI:Weakness" as "DI:Celestial Weakness"
#ReplaceTags in "DI:Celestial Weakness" with "dispaycost(-20)"

* Elder-Spawn
#clone "DI:Supernatural Feature" as "DI:Elder-Spawn Supernatural Feature"
#ReplaceTags in "DI:Elder-Spawn Supernatural Feature" with "displaycost(-5)"

* Infernal
#clone "DI:Social Stigma" as "DI:Social Stigma (Infernal)"
#ReplaceTags in "DI:Social Stigma (Infernal)" with "displaycost(-15), cost(-15), conditional(-3 to ST:Reaction)"
#MergeTags in "DI:Social Stigma (Infernal)" with "page(DF3:12)"

#clone "DI:Weakness" as "DI:Infernal Weakness"
#ReplaceTags in "DI:Infernal Weakness" with "displaycost(-20)"

* Troll
#clone "DI:Vulnerability" as "DI:Troll Vulnerability (Fire)"
#ReplaceTags in "DI:Troll Vulnerability (Fire)" with "displaycost(-30), x(), initmods(_
	Wounding Multiplier ×2, *1, shortname(x2), group(Vulnerability), page(B161) )"

***************************************************************************************
[TEMPLATES]
***************************************************************************************
<Character Templates>
#MergeTags in {TE:Barbarian (Dungeon Fantasy)} with {replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)")}
#MergeTags in {TE:Knight (Dungeon Fantasy)} with {replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)")}
#MergeTags in {TE:Scout (Dungeon Fantasy)} with {replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)")}
#MergeTags in {TE:Swashbuckler (Dungeon Fantasy)} with {replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)")}
#MergeTags in {TE:Thief (Dungeon Fantasy)} with {replacetags(in "ST:DX" with "noresync(yes), maxscore(25)")}
#MergeTags in {TE:Wizard (Dungeon Fantasy)} with {replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))")}

<Racial Templates, Racial Templates - Dungeon Fantasy, Racial Templates - Dungeon Fantasy - DF3 Races>
Cat-Folk (Dungeon Fantasy), displaycost(40), cost(25),
race(Cat-Folk),
cat(Racial Templates - Dungeon Fantasy),
description(Cat-folk are the most common ofte so-called beast-men.),
page(DF3:5),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Catfall,
	AD:Claws (Sharp Claws),
	AD:Combat Reflexes,
	AD:Night Vision=5,
	AD:Striking ST=2,
	AD:Teeth (Sharp Teeth),
	PE:Fur,
	DI:Impulsiveness,
	DI:Laziness,
	DI:Phobia (Entering Water) _
		with "You resist on a roll of 15 or less (almost all the time), *0.5, shortname(15 or less), group(Self-Control), page(B121)" _
),
gives(_
	+1 to ST:DX,
	+1 to ST:Perception_
),
creates(_
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()" _
),
features(_
	Tail: neither a manipulator nor enough of a problem to interfere with armor _
)

Coleopteran (Dungeon Fantasy), displaycost(75), cost(-5),
race(Coleopteran),
cat(Racial Templates - Dungeon Fantasy),
description(Coleopterans are intelligent, upright beetles with hard carapaces, bulging eyes, and functional antennae.),
page(DF3:5),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Coleopteran 360° Vision,
	AD:Coleopteran Damage Resistance=5,
	AD:Coleopteran Antennae Sense (Air),
	AD:Coleopteran Extra Arms=2,
	AD:Extra Attack=1,
	AD:Teeth (Sharp Teeth),
	DI:Appearance=3,
	DI:Disturbing Voice_
),
gives(_
	+1 to ST:HT,
	+1 to ST:Perception,
	-1 to ST:IQ_
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=1_
),
features(_
	Cannot learn non-insect languages above Accented level. _
)

Corpse-Eater (Dungeon Fantasy), displaycost(20), cost(10),
race(Corpse-Eater),
cat(Racial Templates - Dungeon Fantasy),
description(Corpse-eaters are look like bald vampires and eat corpses, but that doesn't make them bad people.),
page(DF3:5),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Corpse-Eater Reduced Consumption,
	AD:Night Vision=5,
	AD:Resistant to Disease=3,
	AD:Silence=1,
	AD:Teeth (Sharp Teeth),
	DI:Appearance=2,
	DI:Corpse-Eater Restricted Diet=1,
	DI:Social Stigma (Monster) _
),
gives(_
	-0.5 to ST:Basic Speed,
	+2 to ST:HT_
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=2,
	"PE:Brotherhood of Ghouls, 1, page(DF3:6)" _
)

Dark One (Dungeon Fantasy), displaycost(20), cost(0),
race(Dark One),
cat(Racial Templates - Dungeon Fantasy),
description(Dark ones claim to be distant cousins of the elves, but it's whispered that they're really Elder Things that transformed themselves to resemble humans so long ago that they've forgotten their ancestry.),
page(DF3:6),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:High Manual Dexterity=2,
	AD:Night Vision=1,
	AD:Resistant to Metabolic Hazards=1,
	DI:Bloodlust,
	DI:Unnatural Feature=2 respond "Pupils are vertical slits; ''Fingers'' are tentacles"_
),
x(#message("Elder Gift can be increased or decreased from the racial average using the Dark Ones template under Racial Power-Ups.")_
),
creates(_
	"AD:Elder Gift, 5/10, gives(+1 To GR:Elder Gift), page(DF3:6), upto(4), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Alchemy, Hidden Lore, Occultism, Thaumatology)"=2,
	"PE:Better Power Items, 1, page(DF3:6)"_
)

Dwarf (Dungeon Fantasy), displaycost(20), cost(14),
race(Dwarf),
cat(Racial Templates - Dungeon Fantasy),
description(Dwarves are essentially hardy-but-stumpy humans who see well in the dark and like caves and gold. There's doubtless much more to them than that, but bearded and likes ale aren't really qualifications sought by adventuring parties.),
page(DF3:6),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Lifting ST=2,
	AD:Dwarf Damage Resistance=1,
	AD:Night Vision=5,
	AD:Resistant to Poison=1,
	DI:Greed,
	DI:Stubbornness,
	PE:Alcohol Tolerance_
),
x(_
	#message("Pickaxe Penchant can be increased or decreased from the racial average using the Dwarves template under Racial Power-Ups.")_
),
gives(_
	+1 to ST:HT,
	+3 to ST:Fatigue Points,
	-1 to ST:Basic Move_
),
creates(_
	"AD:Pickaxe Penchant, 5/10, gives(+1 to GR:Pickaxe Penchant), page(DF3:6), upto(4), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Axe/Mace, Forced Entry, Prospecting, Thrown Weapon (Axe/Mace), Two-Handed Axe/Mace)"=1,
	"PE:Feature: Armor isn't interchangeable with human armor.",
	"PE:Dwarven Gear, 1, page(DF3:6), x(#message(You will need to add the 'Dungeon Fantasy: Dwarven Gear' modifier to appropriate equipment yourself to get the 10% price break.) )" _
),
features(_
	Armor isn't interchangeable with human armor. _
)

<Racial Templates, Racial Templates - Dungeon Fantasy, Racial Templates - Dungeon Fantasy - DF3 Races, Racial Templates - Dungeon Fantasy - DF3 Races - Elves>
Half-Elf (Dungeon Fantasy), displaycost(20), cost(20),
race(Half-Elf),
cat(Racial Templates - Dungeon Fantasy),
description(Half-elves are the most common variety of elves encountered by common folk. They resemble slender humans with vivid dye jobs.),
page(DF3:7),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Magery 0,
	DI:Social Stigma (Half-Breed) _
),
x(#message("Elves may purchased the Forest Guardian talent using the Elves template under Racial Power-Ups.")_
),
gives(_
	+1 to ST:DX_
),
features(_
	Any hair color but a reasonable one._
)

High Elf (Dungeon Fantasy), displaycost(20), cost(20),
race(High Elf),
cat(Racial Templates - Dungeon Fantasy),
description(High elves are the ones in splendid clothing who go about singing laments and being ominous.),
page(DF3:7),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Appearance=1,
	AD:Magery 0,
	AD:Musical Ability=1,
	AD:Voice,
	DI:Sense of Duty (Nature) _
),
x(_
	#message("Elves may purchased the Forest Guardian talent using the Elves template under Racial Power-Ups.")_
),
gives(_
	+1 to ST:IQ_
),
creates(_
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()",
	"PE:Elven Gear, 1, page(DF3:7), x(#message(You will need to add the 'Dungeon Fantasy: Elven Gear' modifier to appropriate equipment yourself to get the 10% price break.) )" _
),
features(_
	Gold or silver hair. _
)

Mountain Elf (Dungeon Fantasy), displaycost(20), cost(20),
race(Mountain Elf),
cat(Racial Templates - Dungeon Fantasy),
description(Mountain elves are reclusive highlands dwellers; famed for their keen vision, sure feet, eternal glowering, and freaky blue hair.),
page(DF3:7),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Acute Vision=2,
	AD:Elven Telescopic Vision,
	AD:Magery 0,
	AD:Perfect Balance,
	DI:Loner,
	DI:Sense of Duty (Nature) _
),
x(_
	#message("Elves may purchased the Forest Guardian talent using the Elves template under Racial Power-Ups.")_
),
gives(_
	+1 to ST:DX_
),
features(_
	Electric-blue hair._
),
creates(_
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()",
	"PE:Elven Gear, 1, page(DF3:7), x(#message(You will need to add the 'Dungeon Fantasy: Elven Gear' modifier to appropriate equipment yourself to get the 10% price break.) )" _
)

Sea Elf (Dungeon Fantasy), displaycost(20), cost(20),
race(Sea Elf),
cat(Racial Templates - Dungeon Fantasy),
description(Sea elves have gills and webbed extremities, allowing them to function unhindered underwater.),
page(DF3:7),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Elven Amphibious,
	AD:Elven Doesn't Breath,
	AD:Magery 0,
	AD:Nictitating Membrane=1,
	AD:Elven Pressure Support=1,
	DI:Phobia (Fire) _
		with "You resist on a roll of  9 or less (fairly often), *1.5, shortname(9 or less), group(Self-Control), page(B121)",
	DI:Sense of Duty (Nature) _
),
x(_
	#message("Elves may purchased the Forest Guardian talent using the Elves template under Racial Power-Ups.")_
),
gives(_
	+1 to ST:DX_
),
creates(_
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()",
	"PE:Elven Gear, 1, page(DF3:7), x(#message(You will need to add the 'Dungeon Fantasy: Elven Gear' modifier to appropriate equipment yourself to get the 10% price break.) )" _
),
features(_
	Pastel-blue or -green hair._
)

Shadow Elf (Dungeon Fantasy), displaycost(20), cost(20),
race(Shadow Elf),
cat(Racial Templates - Dungeon Fantasy),
description(Shadow elves are a little unsettling, and tend to pursue creepy professions.),
page(DF3:7),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Magery 0,
	AD:Silence=2,
	DI:Callous _
),
x(#message("Elves may purchased the Forest Guardian talent using the Elves template under Racial Power-Ups.")_
),
gives(_
	+1 to ST:DX_
),
creates(_
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()" _
),
features(_
	Cobweb-gray or jet-black hair._
)

Winged Elf (Dungeon Fantasy), displaycost(25), cost(20),
race(Winged Elf),
cat(Racial Templates - Dungeon Fantasy),
description(Winged elves possess the gift of flight.),
page(DF3:7),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Appearance=1,
	AD:Magery 0,
	AD:Elven Flight,
	DI:Sense of Duty (Nature) _
),
x(_
	#message("Elves may purchased the Forest Guardian talent using the Elves template under Racial Power-Ups.")_
),
gives(_
	+1 to ST:DX_
),
creates(_
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()"=2,
	"PE:Elven Gear, 1, page(DF3:7), x(#message(You will need to add the 'Dungeon Fantasy: Elven Gear' modifier to appropriate equipment yourself to get the 10% price break.) )" _
),
features(_
	Snow-white hair.,
	Torso armor isn't interchangeable with human torso armor. _
)

Wood Elf (Dungeon Fantasy), displaycost(20), cost(25),
race(Wood Elf),
cat(Racial Templates - Dungeon Fantasy),
description(This is the flavor of elf most monsters recall fondly when the think 'elf': attractive, nimble, green hair, likes bows and forest, etc.),
page(DF3:8),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Appearance=1,
	AD:Magery 0,
	DI:Sense of Duty (Nature) _
),
x(_
	#message("Forest Guardian can be increased or decreased from the racial average using the Elves template under Racial Power-Ups.")_
),
gives(_
	+1 to ST:DX,
	+1 to ST:Basic Move_
),
creates(_
	"AD:Forest Guardian, 5/10, gives(+1 To GR:Forest Guardian), page(DF3:6), upto(4), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Bow, Camouflage, Fast-Draw (Arrow), Stealth, Survival (Woodlands))"=2,
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()",
	"PE:Elven Gear, 1, page(DF3:8), x(#message(You will need to add the 'Dungeon Fantasy: Elven Gear' modifier to appropriate equipment yourself to get the 10% price break.))"_
),
features(_
	Green hair._
)

<Racial Templates, Racial Templates - Dungeon Fantasy, Racial Templates - Dungeon Fantasy - DF3 Races>
Faun (Dungeon Fantasy), displaycost(20), cost(40),
race(Faun),
cat(Racial Templates - Dungeon Fantasy),
description(Fauns resemble humans above the navel, goats below.),
page(DF3:8),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Acute Hearing=2,
	AD:Animal Empathy,
	AD:Claws (Hooves),
	AD:Musical Ability=2,
	AD:Striker (Faun Horns; Crushing),
	DI:Faerie Dependency (Mana),
	DI:Lecherousness _
		with "You resist on a roll of 15 or less (almost all the time), *0.5, shortname(15 or less), group(Self-Control), page(B121)",
	DI:Sense of Duty (Nature)_
),
gives(_
	+1 to ST:DX,
	+1 to ST:HT,
	+2 to ST:Perception_
),
features(_
	Leg and foot armor not interchangeable with human armor.,
	Tail: neither a manipulator nor enough of a problem to interfere with armor._
)

Leprechaun (Dungeon Fantasy), displaycost(20), cost(36),
	race(Leprechaun),
	cat(Racial Templates - Dungeon Fantasy),
	description(Leprechauns have rosy cheeks, bright eyes, and rotten dispositions.),
	page(DF3:9),
	noresync(yes),
	owns(yes), locks(yes), hides(yes),
	gives(_
		+2 to ST:DX,
		-2 to ST:Hit Points,
		-4 to ST:Size Modifier _
	),
	adds(_
		AD:Magery 0,
		AD:Luck=3,
		AD:Leprechaun Reduced Consumption,
		DI:Faerie Dependency (Mana),
		DI:Bad Temper,
		DI:Sense of Duty (Nature) _
	),
	creates(_
		"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()"=4,
		"PE:Leprechaun Charm (1), 1, page(DF3:9)",
		"PE:Leprechaun Charm (2), 1, page(DF3:9)",
		"PE:Leprechaun Charm (3), 1, page(DF3:9)" _
	)

Nymph (Dungeon Fantasy), displaycost(20), cost(10),
	race(Nymph),
	cat(Racial Templates - Dungeon Fantasy),
	description(Nymphs come in both sexes and aren't female fauns as some believe.),
	page(DF3:9),
	noresync(yes),
	owns(yes), locks(yes), hides(yes),
	adds(_
		AD:Appearance=6 _
			with "Universal, +25%, group(Appearance), page(B21)",
		AD:Charisma=5,
		DI:Faerie Dependency (Mana),
		DI:Sense of Duty (Nature) _
	),
	gives(_
		+1 to ST:HT_
	),
	features(_
		Blue skin, with hair like cascading water; green skin, with leaves for hair, etc...,
		Perky. _
	)

Pixie (Dungeon Fantasy), displaycost(25), cost(52),
	race(Pixie),
	cat(Racial Templates - Dungeon Fantasy),
	description(Pixies resemble tiny humans with colorful butterfly wings.),
	page(DF3:9),
	noresync(yes),
	owns(yes), locks(yes), hides(yes),
	gives(_
		+3 to ST:DX,
		-4 to ST:Hit Points,
		-6 to ST:Size Modifier _
	),
	adds(_
		AD:Appearance=1,
		AD:Enhanced Dodge=1,
		AD:Pixie Flight,
		AD:Magery 0,
		AD:Pixie Reduced Consumption,
		DI:Faerie Dependency (Mana),
		DI:Sense of Duty (Nature) _
	),
	creates(_
		"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()"=5,
		"PE:Pixie Shot, 1, page(DF3:9)" _
	),
	features(_
		Antennae.,
		Torso armor isn't interchangeable with that of wingless SM -6 creatures._
	)

Gargoyle (Dungeon Fantasy), displaycost(25), cost(-11),
	race(Gargoyle),
	cat(Racial Templates - Dungeon Fantasy),
	description(A gargoyle resembles nothing so much as an ugly stone man with wings.),
	page(DF3:9),
	noresync(yes),
	owns(yes), locks(yes), hides(yes),
	adds(_
		AD:Claws (Blunt Claws),
		AD:Gargoyle Flight,
		AD:Gargoyle Damage Resistance=2,
		AD:Night Vision=5,
		AD:Striker (Gargoyle Tail; Impaling),
		DI:Appearance=2,
		DI:Gluttony,
		DI:Odious Racial Habit (Dirty) _
	),
	gives(_
		+1 to ST:HT,
		+2 to ST:Hit Points,
		-1 to ST:IQ,
		-0.25 to ST:Basic Speed_
	),
	creates(_
		"PE:Stony, 1, page(DF3:9)" _
	),
	features(_
		Torso armor isn't interchangeable with human torso armor. _
	)

Gnome (Dungeon Fantasy), displaycost(20), cost(4),
race(Gnome),
cat(Racial Templates - Dungeon Fantasy),
description(Gnomes are diminutive craftsmen who are equally at home in rolling hill country and underground.),
page(DF3:10),
noresync(yes),
owns(yes), locks(yes), hides(yes),
gives(_
	+3 to ST:Fatigue Points,
	-1 to ST:Basic Move,
	-1 to ST:Size Modifier_
),
x(#message("Widget Worker can be increased or decreased from the racial average using the Gnomes template under Racial Power-Ups.")_
),
adds(_
	AD:Night Vision=5,
	AD:Resistant to Poison=1,
	PE:Honest Face,
	DI:Curious _
),
creates(_
	"AD:Widget Worker, 5/10, gives(+1 to GR:Widget Worker), page(DF3:10), upto(4), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Armoury (Missile Weapons), Forced Entry, Lockpicking, Scrounging, Traps)"=2 _
)

Goblin (Dungeon Fantasy), displaycost(0), cost(2),
race(Goblin),
cat(Racial Templates - Dungeon Fantasy),
description(True goblins are the small, not-too-stupid ones with needle-like teeth and a cowardly disposition.),
page(DF3:10),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Goblin-Kin Infravision,
	AD:Rapid Healing,
	AD:Resistant to Metabolic Hazards=1,
	AD:Teeth (Sharp Teeth),
	DI:Appearance=2,
	DI:Cowardice,
	DI:Social Stigma (Savage) _
),
gives(_
	+1 to ST:HT,
	+1 to ST:Hit Points,
	+1 to ST:Will,
	+1 to ST:Perception,
	-1 to ST:IQ_
)

Half-Orc (Dungeon Fantasy), displaycost(20), cost(12),
race(Half-Orc),
cat(Racial Templates - Dungeon Fantasy),
description(Few half-orcs are really half anything - they're the product of generations of inbreeding among the offspring of orc rapine, mostly in elf and human communities.),
page(DF3:10),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Acute Hearing=1,
	AD:Night Vision=5,
	AD:Rapid Healing,
	AD:Resistant to Metabolic Hazards=1,
	DI:Appearance=1,
	DI:Social Stigma (Savage)_
),
gives(_
	+1 to ST:HT,
	+1 to ST:Hit Points_
)

Hobgoblin (Dungeon Fantasy), displaycost(15), cost(-4),
race(Hobgoblin),
cat(Racial Templates - Dungeon Fantasy),
description(Hobgoblins are the big, ill-tempered, stupid ones that constitute the shock troops of a goblin-kin army.),
page(DF3:11),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Goblin-Kin Infravision,
	AD:Resistant to Metabolic Hazards=1,
	AD:Rapid Healing,
	AD:Teeth (Fangs),
	DI:Appearance=2,
	DI:Bad Temper,
	DI:Social Stigma (Savage) _
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=2_
),
gives(_
	+1 to ST:HT,
	+3 to ST:Hit Points,
	+2 to ST:Will,
	+2 to ST:Perception,
	-2 to ST:IQ_
)

Orc (Dungeon Fantasy), displaycost(15), cost(4),
race(Orc),
cat(Racial Templates - Dungeon Fantasy),
description(Orcs are the medium-sized, not-too-stupid ones that bully the other goblin-kin.),
page(DF3:11),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Acute Hearing=2,
	AD:Goblin-Kin Infravision,
	AD:Rapid Healing,
	AD:Resistant to Metabolic Hazards=1,
	DI:Appearance=2,
	DI:Bully,
	DI:Social Stigma (Savage) _
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=1_
),
gives(_
	+1 to ST:HT,
	+2 to ST:Hit Points,
	+1 to ST:Will,
	+1 to ST:Perception,
	-1 to ST:IQ_
)

Celestial (Dungeon Fantasy), displaycost(75), cost(68),
race(Celestial),
cat(Racial Templates - Dungeon Fantasy),
description(Celestials are said to result from the earthly dalliances of beings known colloquially as angels.),
page(DF3:12),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Appearance=1 _
		with "Universal, +25%, group(Appearance), page(B21)",
	AD:Fit,
	AD:Spirit Empathy,
	DI:Celestial Divine Curse,
	DI:Celestial Weakness=3 _
),
gives(_
	+1 to ST:DX,
	+1 to ST:IQ,
	+1 to ST:HT,
	+1 to ST:Will,
	+1 to ST:Fatigue Points,
	+0.5 to ST:Basic Speed_
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=1,
	"PE:Celestial Nimbus, 1, page(DF3:12)",
	"PE:Divine Gifts, 1, page(DF3:12)" _
),
features( _
	Functions and Detects as Good, regardless of true morality.,
	Gold or silver eyes and hair. Milk-white, blue, or other unnatural skin._
)

Elder-Spawn (Dungeon Fantasy), displaycost(75), cost(0),
race(Elder-Spawn),
cat(Racial Templates - Dungeon Fantasy),
description(One of an elder-spawn's parents is an Unspeakable Madness from Outside Time and Space; the other is dead or insane.),
page(DF3:12),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Double-Jointed,
	AD:Elder-Spawn Injury Tolerance _
		with "Homogenous, +40, group(Injury Tolerance), page(B60)",
	AD:Night Vision=5,
	AD:Resistant to Metabolic Hazards=1,
	AD:Elder-Spawn Slippery=5,
	AD:Unfazeable,
	DI:Frightens Animals,
	DI:Elder-Spawn Supernatural Feature _
		with "Not Quite Right, -5, group(Supernatural Feature), page(DF3:12)",
	DI:Weirdness Magnet_
),
x(#message("Elder Gift can be increased or decreased from the racial average using the Elder-Spawn template under Racial Power-Ups.")_
),
creates(_
	"AD:Elder Gift, 5/10, gives(+1 To GR:Elder Gift), page(DF3:6), upto(4), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Alchemy, Hidden Lore, Occultism, Thaumatology)"=2 _
),
features( _
	Supernatural Features give -1 to reactions from anyone who witnesses your racial abilities in action; from anyone who knows What You Are; and +1 to any attempt to discover what you are._
)

Infernal (Dungeon Fantasy), displaycost(75), cost(43),
race(Infernal),
cat(Racial Templates - Dungeon Fantasy),
description(Infernals are the offspring of unions – rarely willing –between mortals and demons.),
page(DF3:12),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Claws (Hooves),
	AD:Fit,
	AD:Infernal Damage Resistance,
	AD:Infernal Dark Vision,
	AD:Spirit Empathy,
	DI:Social Stigma (Infernal),
	DI:Unnatural Feature=2 respond "Vestigial horns, tail, and wings",
	DI:Infernal Weakness=3 _
),
gives(_
	+1 to ST:DX,
	+1 to ST:HT,
	+1 to ST:Fatigue Points,
	+0.5 to ST:Basic Speed_
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=2,
	"PE:Infernal Gifts, 1, page(DF3:12), cat(Exotic)" _
),
features( _
	Detects as Evil, regardless of true morality. _
)

Air-Infused (Dungeon Fantasy), displaycost(75), cost(20),
race(Air-Infused),
cat(Racial Templates - Dungeon Fantasy),
description(Nimble air-infused can call on the aid of invisible air elementals to walk-on-air and break their fall.),
page(DF3:13),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Catfall _
		with "Mana Sensitive, -10%, group(_General), page(DF3:13)",
	AD:Air-Infused Damage Resistance=5,
	AD:Reputation (Air Elementals)=3 _
		with "People Affected: Small class of people, *1/3, round(Down), shortname(Small class), group(Reputation), page(B27)",
	AD:Resistant to Metabolic Hazards=1,
	AD:Air-Infused Walk on Air,
	DI:Unnatural Feature=1 respond "Luminous sky-blue eyes"_
),
gives(_
	+1 to ST:DX_
),
creates(_
	{PE:Puff of Air, 1, page(DF3:13)} _
),
features( _
	Luminous sky-blue eyes.,
	Surrounded by a perpetual light breeze._
)

Earth-Infused (Dungeon Fantasy), displaycost(75), cost(2),
race(Earth-Infused),
cat(Racial Templates - Dungeon Fantasy),
description(Earth-Infused are solid types who can walk right through earth and stone barriers...but only while naked.),
page(DF3:13),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Earth-Infused Damage Resistance=5,
	AD:Earth-Infused Permeation,
	AD:Reputation (Earth Elementals)=3 _
		with "People Affected: Small class of people, *1/3, round(Down), shortname(Small class), group(Reputation), page(B27)",
	AD:Resistant to Metabolic Hazards=1 _
),
gives(_
	+1 to ST:Hit Points_
),
creates(_
	{PE:Stone Fist, 1, page(DF3:13)} _
),
features( _
	Chunky, square build _
)

Fire-Infused (Dungeon Fantasy), displaycost(75), cost(20),
race(Fire-Infused),
cat(Racial Templates - Dungeon Fantasy),
description(Fire-infused are fast, almost immune to fire and can ignite small fires at will.),
page(DF3:13),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Fire-Infused Damage Resistance=6,
	AD:Fire-Infused Injury Tolerance,
	AD:Reputation (Fire Elementals)=3 _
		with "People Affected: Small class of people, *1/3, round(Down), shortname(Small class), group(Reputation), page(B27)",
	AD:Temperature Tolerance=11 _
		with "Mana Sensitive, -10%, group(_General), page(DF3:13)",
	DI:Unnatural Feature=2 respond "Red, fiery eyes; flushed skin"_
),
gives(_
	+1 to ST:Basic Speed_
),
creates(_
	{PE:Flaming Fingers, 1, page(DF3:13)},
	{PE:Flaming Hair, 1, page(DF3:13)} _
),
features( _
	High body temperature - every handshake is warm.,
	Red, fiery eyes and flushed skin. _
)

Water-Infused (Dungeon Fantasy), displaycost(75), cost(20),
race(Water-Infused),
cat(Racial Templates - Dungeon Fantasy),
description(Lithe Water-infused can operate unhindered in water of any depth for as long as they wish.),
page(DF3:13),
noresync(yes),
owns(yes), locks(yes), hides(yes),
adds(_
	AD:Water-Infused Amphibious,
	AD:Water-Infused Damage Resistance=5,
	AD:Water-Infused Doesn't Breathe,
	AD:Nictitating Membrane=1,
	AD:Water-Infused Pressure Support=3,
	AD:Reputation (Water Elementals)=3 _
		with "People Affected: Small class of people, *1/3, round(Down), shortname(Small class), group(Reputation), page(B27)",
	DI:Unnatural Feature=2 respond "Swirling turquoise eyes; cascading water for hair"_
),
gives(_
	+1 to ST:DX_
),
creates(_
	{PE:Drench, 1, page(DF3:13)} _
),
features( _
	Damp footsteps.)

Halfling (Dungeon Fantasy), displaycost(0), cost(29),
race(Halfling),
cat(Racial Templates - Dungeon Fantasy),
description(Halflings are half human height, enjoy food, stealing, drink, sneaking, tobacco, and shooting things.),
page(DF3:14),
noresync(yes),
owns(yes), locks(yes), hides(yes),
gives(_
	+1 to ST:DX,
	+1 to ST:HT,
	+2 to ST:Hit Points,
	-1 to ST:Basic Move,
	-2 to ST:Size Modifier_
),
x(#message("Halfling Marksmanship can be increased or decreased from the racial average using the Halflings template under Racial Power-Ups.")_
),
adds(_
	AD:Silence=2,
	PE:Honest Face,
	DI:Gluttony,
	DI:Kleptomania_
),
creates(_
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()"=3,
	"AD:Halfling Marksmanship, 5/10, gives(+1 to GR:Halfling Marksmanship), page(DF3:14), upto(4), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Bow, Sling, Throwing, Thrown Weapon (Dart, Knife, and Stick); bonus is for archers and mobsters.)"=2 _
),
features( _
	Hairy feet._
)

Minotaur (Dungeon Fantasy), displaycost(40), cost(0),
race(Minotaur),
cat(Racial Templates - Dungeon Fantasy),
description(Minotaurs resemble hulking humans with shaggy, horned bull's heads.),
page(DF3:14),
noresync(yes),
owns(yes), locks(yes), hides(yes),
gives(_
	+3 to ST:HT,
	+2 to ST:Perception,
	-2 to ST:IQ_
),
adds(_
	AD:Absolute Direction,
	AD:Acute Hearing=2,
	AD:Minotaur Damage Resistance=2,
	AD:Minotaur Skull Damage Resistance=2,
	AD:Peripheral Vision,
	AD:Striker (Horns; Impaling),
	DI:Appearance=3,
	DI:Bad Temper,
	DI:Berserk _
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=3_
),
features( _
	Bull's face and shaggy neck.,
	Can't wear most humanoid helmets. _
)

Ogre (Dungeon Fantasy), displaycost(40), cost(-50),
race(Ogre),
cat(Racial Templates - Dungeon Fantasy),
description(Ogres are huge, misshapen humanoids with bloated eyes, warty skin, and a permanent filth layer.),
page(DF3:14),
noresync(yes),
owns(yes), locks(yes), hides(yes),
gives(_
	+3 to ST:HT,
	-1 to ST:DX,
	-3 to ST:IQ,
	+1 to ST:Size Modifier_
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=10_
),
adds(_
	AD:Ogre Damage Resistance=2,
	AD:Fearlessness=3,
	AD:High Pain Threshold,
	AD:Magic Resistance=2,
	AD:Night Vision=5,
	DI:Appearance=3,
	DI:Social Stigma (Monster)_
)

Half-Ogre (Dungeon Fantasy), displaycost(20), cost(-10),
race(Half-Ogre),
cat(Racial Templates - Dungeon Fantasy),
description(Half-Ogre aren't as huge, clumsy, or stupid as an ogre, and can pass as a big, dumb, (mostly) human.),
page(DF3:15),
noresync(yes),
owns(yes), locks(yes), hides(yes),
gives(_
	+1 to ST:HT,
	-1 to ST:IQ_
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=4_
),
adds(_
	AD:Ogre Damage Resistance=1,
	AD:Fearlessness=1,
	AD:Night Vision=3,
	DI:Appearance=2,
	DI:Social Stigma (Savage) _
)

Dragon-Blooded (Dungeon Fantasy), displaycost(30), cost(10),
race(Dragon-Blooded),
cat(Racial Templates - Dungeon Fantasy),
description(Dragon-blooded resemble scaly humans with claws and a small dragon's head. Tailless.),
page(DF3:15),
noresync(yes),
owns(yes), locks(yes), hides(yes),
gives(_
	+1 to ST:HT_
),
adds(_
	AD:Claws (Sharp Claws),
	AD:Dragon Burning Attack=1 _
		respond 5,
	AD:Reptilian Damage Resistance=1,
	AD:Nictitating Membrane=2,
	AD:Peripheral Vision,
	AD:Reputation (Dragons)=3 with _
			"People Affected: Small class of people, *1/3, round(Down), shortname(Small class), group(Reputation), page(B27)" _
			| "Frequency of Recognition: All the time, *1, shortname(All the time), group(Reputation)",
	AD:Teeth (Sharp Teeth),
	DI:Disturbing Voice,
	DI:Social Stigma (Monster) _
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=1,
	{QU:Trivial Vow (Never attack a dragon.), -1, page(DF3:15)} _
),
features( _
	Born Biter,
	Cannot learn non-reptilian languages above Accented level.,
	Head armor isn't interchangeable with human head armor.,
	Ruby or emerald scales. _
)

Lizard Man (Dungeon Fantasy), displaycost(30), cost(-5),
race(Lizard Man),
cat(Racial Templates - Dungeon Fantasy),
description(Lizard men have long snouts and thick tails, and resemble little dinosaurs with hands.),
page(DF3:15),
noresync(yes),
owns(yes), locks(yes), hides(yes),
gives(_
	+1 to ST:HT,
	+1 to ST:Basic Move,
	-1 to ST:IQ_
),
adds(_
	AD:Claws (Sharp Claws),
	AD:Reptilian Damage Resistance=2,
	AD:Nictitating Membrane=2,
	AD:Peripheral Vision,
	AD:Striker (Lizard Man Tail; Crushing),
	AD:Teeth (Sharp Teeth),
	AD:Temperature Tolerance=3,
	AD:Lizard Man Terrain Adaptation (%AdaptationList%),
	DI:Disturbing Voice,
	DI:Social Stigma (Monster)_
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=2_
),
features(_
	Armor isn't interchangeable with human armor.,
	Blue, brown, gray, or green scales.,
	Born Biter.,
	Cannot learn non-reptilian languages above Accented level. _
),
x(#ChoiceList(_
			name(Adaptation),
			title(Terrain Adaptation),
			text(Lizard men are at home in either steaming swamps or open desert. Select one:),
			picksallowed(1),
			method(bynumber),
			list(_
				"Swamp",
				"Sand" _
				)_
			)_
	)

Troll (Dungeon Fantasy), displaycost(20), cost(42),
race(Troll),
cat(Racial Templates - Dungeon Fantasy),
description(There are many creatures called 'troll,' these are the nasty little ones that play mean jokes but can get along with others without trying to eat them.),
page(DF3:16),
noresync(yes),
owns(yes), locks(yes), hides(yes),
gives(_
	+1 to ST:DX,
	+1 to ST:HT,
	+1 to ST:Hit Points,
	+2 to ST:Perception_
),
adds(_
	AD:Discriminatory Smell,
	AD:Troll Regeneration=2,
	AD:Resistant to Metabolic Hazards=1,
	AD:Teeth (Sharp Teeth),
	AD:Troll Universal Digestion,
	DI:Appearance=2,
	DI:Bad Temper,
	DI:Social Stigma (Monster),
	DI:Troll Vulnerability (Fire)=3_
),
creates(_
	"DI:Racial ST Penalty, -10/-20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), initmods(), forceformula()" _
),
features(_
	Night-Adapted Vision 5,
	Wrinkly skin and tufts of brightly colored hair (almost any color) _
)

Wildman (Dungeon Fantasy), displaycost(15), cost(-10),
race(Wildman),
cat(Racial Templates - Dungeon Fantasy),
description(Wildmen resemble big, furry humans.),
page(DF3:16),
owns(yes), locks(yes), hides(yes),
noresync(yes),
gives(_
	+1 to ST:HT,
	+3 to ST:Perception,
	-1 to ST:IQ,
	-3 to ST:Tech Level_
),
adds(_
	AD:Wildman Arm ST,
	AD:Animal Empathy,
	AD:Wildman Brachiator,
	AD:Temperature Tolerance=2,
	PE:Fur,
	DI:Appearance=1,
	DI:Social Stigma (Savage)_
),
creates(_
	"AD:Racial ST Bonus, 10/20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:ST), initmods(Size, -10%, group(Size ST), formula(-@if(ST:Size Modifier > 0 then ST:Size Modifier * 10 else 0)), forceformula(yes))"=2,
	{PE:Call of the Wild, 1, page(DF3:16)} _
),
features( _
	Apish looks. _
)

<Racial Templates, Racial Templates - Dungeon Fantasy, Racial Templates - Dungeon Fantasy - DF3 Racial Power-Ups>
Dark Ones (Dungeon Fantasy), displaycost(varies), cost(0),
description(Dark Ones may improve their Elder Gift talent up to level 4),
page(DF3:6),
noresync(yes),
multitype(yes),
select1(_
	text("Dark Ones may improve their Elder Gift talent up to level 4"),
	pointswanted(atleast -20, upto 20),
	itemswanted(atleast 0, upto 1),
	list(_
	#newitem(_
		DI:Reduced Elder Gift, -5/-10, gives(-1 To GR:Elder Gift), page(DF3:6), upto($solver(AD:Elder Gift::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(-1 to ST:Reaction), description(Alchemy, Hidden Lore, Occultism, Thaumatology), taboo(AD:Extra Elder Gift)_
	),
	#newitem(_
		AD:Extra Elder Gift, 5/10, gives(+1 To GR:Elder Gift), page(DF3:6), upto($solver(4-AD:Elder Gift::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Alchemy, Hidden Lore, Occultism, Thaumatology), taboo(DI:Reduced Elder Gift)_
	)_
	)_
)

Dwarves (Dungeon Fantasy), displaycost(varies), cost(0),
description(Dwarves may improve their Pickaxe Penchant talent up to level 4),
page(DF3:6),
noresync(yes),
select1(_
	text("Dwarves may improve their Pickaxe Penchant talent up to level 4"),
	pointswanted(atleast -20, upto 20),
	itemswanted(atleast 0, upto 1),
	mixedtype(yes),
	list(_
	#newitem(_
		AD:Extra Pickaxe Penchant, 5/10, gives(+1 to GR:Pickaxe Penchant), page(DF3:6), upto($solver(4-AD:Pickaxe Penchant::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Axe/Mace, Forced Entry, Prospecting, Thrown Weapon (Axe/Mace), Two-Handed Axe/Mace), taboo(DI:Reduced Pickaxe Penchant)_
	),
	#newitem(_
		DI:Reduced Pickaxe Penchant, -5/-10, gives(-1 to GR:Pickaxe Penchant), page(DF3:6), upto($solver(AD:Pickaxe Penchant::level)), cat(Mundant, Mental, Talents), mods(Talents), conditional(-1 to ST:Reaction), description(Axe/Mace, Forced Entry, Prospecting, Thrown Weapon (Axe/Mace), Two-Handed Axe/Mace), taboo(AD:Extra Pickaxe Penchant)_
	)_
	)_
)

Elves (Dungeon Fantasy), displaycost(varies), cost(0),
description(Elves may start with additional levels of the Forest Guardian talent.),
page(DF3:6),
noresync(yes),
select1(_
	text("Elves may take Forest Guardian up to level 4. Wood Elves already have it and may increase or decrease it as well."),
	pointswanted(atleast -20, upto 20),
	itemswanted(atleast 0, upto 1),
	multitype(yes),
	list(_
	#newitem(_
		AD:Forest Guardian, 5/10, gives(+1 To GR:Forest Guardian), page(DF3:6), upto(4), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Bow, Camouflage, Fast-Draw (Arrow), Stealth, Survival (Woodlands)), needs(TE:Half-Elf | TE:High Elf | TE:Mountain Elf | TE:Sea Elf | TE:Shadow Elf | TE:Winged Elf | TE:Wood Elf)_
	),
	#newitem(_
		DI:Reduced Forest Guardian, -5/-10, gives(-1 to GR:Forest Guardian), page(DF3:6), upto($solver(AD:Forest Guardian::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(-1 to ST:Reaction), description(Bow, Camouflage, Fast-Draw (Arrow), Stealth, Survival (Woodlands)), needs(AD:Forest Guardian), taboo(AD:Extra Forest Guardian)_
	),
	#newitem(_
		AD:Extra Forest Guardian, 5/10, gives(+1 to GR:Forest Guardian), page(DF3:6), upto($solver(4-AD:Forest Guardian::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Bow, Camouflage, Fast-Draw (Arrow), Stealth, Survival (Woodlands)), needs(AD:Forest Guardian), taboo(DI:Reduced Forest Guardian)_
	)_
	)_
)

Gnomes (Dungeon Fantasy), displaycost(varies), cost(0),
description(Gnomes may improve their Widget Worker talent up to level 4),
page(DF3:10),
noresync(yes),
select1(_
	text("Gnomes may improve their Widget Worker talent up to level 4"),
	pointswanted(atleast -20, upto 20),
	itemswanted(atleast 0, upto 1),
	multitype(yes),
	list(_
	#newitem(_
		DI:Reduced Widget Worker, -5/-10, gives(-1 to GR:Widget Worker), page(DF3:10), upto($solver(AD:Widget Worker::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(-1 to ST:Reaction), description(Armoury (Missile Weapons), Forced Entry, Lockpicking, Scrounging, Traps), taboo(AD:Extra Widget Worker)_
	),
	#newitem(_
		AD:Extra Widget Worker, 5/10, gives(+1 to GR:Widget Worker), page(DF3:10), upto($solver(4-AD:Widget Worker::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Armoury (Missile Weapons), Forced Entry, Lockpicking, Scrounging, Traps), taboo(DI:Reduced Widget Worker)_
	)_
	)_
)

Elder-Spawns (Dungeon Fantasy), displaycost(varies), cost(0),
description(Elder-Spawn may improve their Elder Gift talent up to level 4),
page(DF3:12),
noresync(yes),
multitype(yes),
select1(_
	text("Dark Ones may improve their Elder Gift talent up to level 4"),
	pointswanted(atleast -20, upto 20),
	itemswanted(atleast 0, upto 1),
	list(_
	#newitem(_
		DI:Reduced Elder Gift, -5/-10, gives(-1 To GR:Elder Gift), page(DF3:6), upto($solver(AD:Elder Gift::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(-1 to ST:Reaction), description(Alchemy, Hidden Lore, Occultism, Thaumatology), taboo(AD:Extra Elder Gift)_
	),
	#newitem(_
		AD:Extra Elder Gift, 5/10, gives(+1 To GR:Elder Gift), page(DF3:6), upto($solver(4-AD:Elder Gift::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Alchemy, Hidden Lore, Occultism, Thaumatology), taboo(DI:Reduced Elder Gift)_
	)_
	)_
)

Halflings (Dungeon Fantasy), displaycost(varies), cost(0),
description(Gnomes may improve their Widget Worker talent up to level 4),
page(DF3:14),
noresync(yes),
select1(_
	text("Halflings may improve their Halfling Marksmanship talent up to level 4"),
	pointswanted(atleast -20, upto 20),
	itemswanted(atleast 0, upto 1),
	multitype(yes),
	list(_
	#newitem(_
		DI:Reduced Halfling Marksmanship, -5/-10, gives(-1 to GR:Halfling Marksmanship), page(DF3:14), upto($solver(AD:Halfling Marksmanship::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(-1 to ST:Reaction), description(Bow, Sling, Throwing, Thrown Weapon (Dart, Knife, and Stick); bonus is for archers and mobsters.), taboo(AD:Extra Halfling Marksmanship)_
	),
	#newitem(_
		AD:Extra Halfling Marksmanship, 5/10, gives(+1 to GR:Halfling Marksmanship), page(DF3:14), upto($solver(4-AD:Halfling Marksmanship::level)), cat(Mundane, Mental, Talents), mods(Talents), conditional(+1 to ST:Reaction), description(Bow, Sling, Throwing, Thrown Weapon (Dart, Knife, and Stick); bonus is for archers and mobsters.), taboo(DI:Reduced Halfling Marksmanship)_
	)_
	)_
)

Divine Gifts (Dungeon Fantasy), displaycost(varies), cost(0),
description(New traits list for Divine Gifts.),
page(DF3:12),
noresync(yes),
select1(_
	text("Celestials may spend extra and earned experience points as desired on the following new traits."),
	pointswanted(atleast 0, upto 1000),
	itemswanted(atleast 0, upto 100),
	list(_
	AD:Celestial Doesn't Breath,
	AD:Celestial Doesn't Eat or Drink,
	AD:Celestial Doesn't Sleep,
	AD:Celestial Extra Life,
	AD:Celestial Flight,
	AD:Celestial Walk on Air,
	AD:Celestial Walk on Liquid,
	AD:Celestial Immunity to Metabolic Hazards,
	AD:Celestial Flight,
	AD:Temperature Tolerance #codes(upto 20, downto 1)_
	) _
)

Infernal Gifts (Dungeon Fantasy), displaycost(varies), cost(0),
description(New traits list for Infernal Gifts.),
page(DF3:12),
noresync(yes),
select1(_
	text("Infernals may spend extra and earned experience points as desired on the following new traits."),
	pointswanted(atleast 0, upto 1000),
	itemswanted(atleast 0, upto 100),
	list(_
	AD:Infernal Doesn't Breathe,
	AD:Infernal Doesn't Eat or Drink,
	AD:Infernal Doesn't Sleep,
	AD:Infernal Extra Life,
	AD:Infernal Flight,
	AD:Infernal Immunity to Metabolic Hazards,
	AD:Striker (Infernal Horns; Crushing),
	AD:Striker (Infernal Horns; Impaling),
	AD:Striker (Infernal Tail; Piercing),
	AD:Striker (Infernal Tail; Large Piercing),
	AD:Striker (Infernal Tail; Impaling),
	AD:Teeth (Sharp Teeth),
	AD:Teeth (Fangs),
	AD:Temperature Tolerance #codes(upto 20, downto 1) _
	)_
)

<Character Templates - Dungeon Fantasy - Mixed Professions - Barbarian, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Barbarian-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(One word: bagpipes ($270, 3lbs.) ),
	page(DF3:19),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Bardic Talent =1,
			AD:Charisma =1,
			AD:Musical Ability =1,
			DI:Reduced Will =1,
			SK:Musical Instrument =4pts,
			SK:Public Speaking =2pts,
			SK:Singing =1pts_
	),
	select1(_
		text("Please select 15 points from the following Bard-Song abilities, bardic skills, and/or spells from the Commuication and Empathy or Mind Control Colleges."),
		pointswanted(15),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Barbarian-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Medicine Men ought to stick to healing potions.),
	page(DF3:19),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy) =2,
			SK:Esoteric Medicine (Holy) =2pts,
			SK:Exorcism =2pts,
			SK:Meditation =2pts,
			SK:Religious Ritual =2pts,
			SK:Theology =2pts_
	),
	select1(_
		text("Choose one disadvantage."),
		pointswanted(-10),
		tagwith(Cleric(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Coreligionists),
			DI:Vow (No edged weapons) _
		)_
	),
	select2(_
		text("Please select 10 points in Holy abilities and/or clerical spells."),
		pointswanted(10),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Barbarian-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(This is the best of four not-so-hot caster options for barbarians.),
	page(DF3:19),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Extra IQ =1,
			AD:Power Investiture (Druidic) =2,
			SK:Esoteric Medicine (Druidic) =2pts,
			SK:Herb Lore =2pts,
			SK:Religious Ritual (Druidic) =2pts,
			SK:Theology (Druidic) =2pts_
	),
	select1(_
		text("Select 12 points total in Druidic abilities and/or druidic spells."),
		pointswanted(12),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Barbarian-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Holy Might means Blessed (Heroic Feats). You want this.),
	page(DF3:19),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Holiness =1,
			SK:Exorcism =1pts _
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =1pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(1), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(1), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of these disadvantages."),
		pointswanted(-10),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select3(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select4(_
		text("Select 25 points total in Holy abilities and/or additional skills."),
		pointswanted(25),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
		) _
	)

Barbarian-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(More DX and better defenses shore up the Barbarian's only real combat flaws.),
	page(DF3:19),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Born War-Leader=2,
			AD:Combat Reflexes,
			SK:Connoisseur (Weapons)=2pts,
			SK:Leadership=2pts,
			SK:Strategy=2pts,
			SK:Tactics=2pts_
	),
	select1(_
		text("Select an Armoury skill."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(2),
		list(_
			SK:Armoury (Body Armor) #codes(upto 2pts, downto 2pts),
			SK:Armoury (Melee Weapons) #codes(upto 2pts, downto 2pts)_
		)_
	)

Barbarian-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(_
				in {SK:Brawling} with {taboo(TE:Barbarian-Martial Artist (Dungeon Fantasy))},
				in {SK:Wrestling} with {taboo(TE:Barbarian-Martial Artist (Dungeon Fantasy))},
				in {TE:Barbarian (Dungeon Fantasy)} with {needs({AD:High Pain Threshold}, {AD:Outdoorsman}=4, {DI:Gigantism}, {DI:Social Stigma (Minority Group)}, {SK:Camouflage}=1pts, {SK:Navigation (Land)}=2pts, {SK:Tracking}=1pts, {SK:Stealth}=2pts, {SK:Swimming}=1pts, {SK:Hiking}=1pts, {SK:Running}=1pts, {SK:Fishing}=1pts, {SK:Disguise (Animals)}=2pts, {SK:Weather Sense}=2pts, {SK:Intimidation}=2pts)}_
			),
	taboo(SK:Brawling, SK:Wrestling),
	x(#Message("This template sets the Brawling & Wrestling skills to 0 points, they have been superseded with Karate & Judo. You will need to manually remove Brawling & Wrestling yourself.")),
	sets(_
			SK:Brawling = 0pts,
			SK:Wrestling = 0pts _
	),
	description(Scary in the long run, not great for an instant boost.),
	page(DF3:19),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Karate=4pts,
			SK:Judo=4pts_
	),
	select1(_
		text("Select 10 points in Chi Abilities and/or Chi Skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Barbarian-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(The Barbarian's ST projected at range, combined with similar skill sets = very effective mix.),
	page(DF3:19),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Heroic Archer,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Traps=1pts_
	),
	select1(_
		text("Take Bow skill, or add Increase Bow Skill to add [12] point to an existing one."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(12),
		multitype(yes),
		list(_
			SK:Bow #codes(upto 12pts, downto 12pts),
			#newitem(SK:_Increase Bow, DX/A, existing(SK:Bow)) #codes(upto %points+12pts, downto %points+12pts)_
		)_
	),
	select2(_
		text("Take Observation skill, or add Increase Observation Skill to add [1] point to an existing one."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Observation #codes(upto 1pts),
			#newitem(AD:_Increase Observation, 1, gives(+1pts to SK:Observation), taboo("SK:Observation"), needs("SK:Observation"), existing(SK:Observation) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Barbarian-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(Weapon Master means bonus damage per die, Barbarian roll a lot of damage dice.),
	page(DF3:20),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master (One Specific Weapon),
			SK:Acrobatics=2pts _
	),
	select1(_
		text("Select a weapon specialty. Either one of the skills listed here, or improve an existing weapon skill by 8 points."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(8),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where cat includes "Combat/Weapon", template(#newitem(SK:_Increase %ListItem%, type(DX/var), existing(SK:%ListItem%))  #codes(upto %points+8pts, downto %points+8pts) )),
			SK:Rapier #codes(upto 8pts, downto 8pts),
			SK:Saber #codes(upto 8pts, downto 8pts),
			SK:Shortsword #codes(upto 8pts, downto 8pts),
			SK:Smallsword #codes(upto 8pts, downto 8pts)_
		)_
	)

Barbarian-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(Focus on smashing doors and the two-handed sword backstab.),
	page(DF3:20),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1,
			ST:Basic Speed=ST:Basic Speed-.25,
			SK:Climbing = ("SK:Climbing::points"+1)pts,
			SK:Forced Entry = ("SK:Forced Entry::points"+1)pts,
			SK:Stealth = ("SK:Stealth::points"+6)pts _
	),
	adds(_
			AD:Flexibility,
			AD:High Manual Dexterity =1,
			SK:Escape=1pts,
			SK:Filch=1pts,
			SK:Lockpicking=2pts,
			SK:Pickpocket=1pts,
			SK:Traps=2pts_
	),
	needs(_
			SK:Stealth = 8pts,
			SK:Climbing = 1pts,
			SK:Forced Entry = 1pts _
	)

Barbarian-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(Learn Might and Vigor, Resisted spells are hopeless.),
	page(DF3:20),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Alchemy=2pts,
			SK:Occultism=1pts,
			SK:Thaumatology=2pts_
	),
	x(_
		#message(_
				You must be fluent in your native language before taking this lens! _
			~P	You must also select 10 points in wizardly spells, which will be either (H) IQ[1] or (VH) IQ-1[1] with the +2 for Magery._
				)_
		),
	needs(10 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Bard, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Bard-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(The barbarian is tougher and more useful outdoors than the average bard.),
	page(DF3:20),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:High Pain Threshold,
			AD:Outdoorsman=1_
	),
	select1(_
		text("Select one additional advantage."),
		tagwith(Barbarian(yes)),
		itemswanted(1),
		pointswanted(5),
		list(_
			AD:Fit,
			AD:Rapid Healing,
			AD:Resistant to Poison #codes(upto 1, downto 1),
			AD:Striking ST #codes(upto 1, downto 1)_
		)_
	),
	select2(_
		text("Select 10 skills from this list."),
		tagwith(Barbarian(yes)),
		itemswanted(10),
		pointswanted(10),
		list(_
			SK:Camouflage #codes(upto 1pts),
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Running #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts),
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Tracking #codes(upto 1pts)_
		)_
	)

Bard-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Two spell lists, two powers, and bardic skills means you'll always have options.),
	page(DF3:20),
	noresync(yes),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy)=2,
			SK:Esoteric Medicine (Holy)=1pts,
			SK:Exorcism=1pts,
			SK:Meditation=1pts,
			SK:Occultism=1pts,
			SK:Religious Ritual=1pts,
			SK:Theology=1pts_
	),
	select1(_
		text("Select one disadvantage."),
		tagwith(Cleric(yes)),
		itemswanted(1),
		pointswanted(-10),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Coreligionists)_
		)_
	),
	select2(_
		text("Select one Hidden Lore specialty."),
		tagwith(Cleric(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Spirit Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select3(_
		text("Select 28 points in Clerical Abilities and/or Clerical spells."),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		pointswanted(28),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Bard-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Bards and druids and traditionally linked, bard-druids have options galore.),
	page(DF3:21),
	noresync(yes),
	adds(_
			AD:Power Investiture (Druidic)=2,
			SK:Esoteric Medicine (Druidic)=1pts,
			SK:Herb Lore=1pts,
			SK:Naturalist=1pts,
			SK:Religious Ritual (Druidic)=1pts,
			SK:Theology (Druidic)=1pts_
	),
	select1(_
		text("Select a Hidden Lore specialty."),
		tagwith(Druid(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Hidden Lore (Elemental Lore) #codes(upto 1pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 1pts),
			SK:Hidden Lore (Nature Spirit Lore) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Select four of the following skills."),
		tagwith(Druid(yes)),
		itemswanted(4),
		pointswanted(4),
		list(_
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Pharmacy (Herbal) #codes(upto 1pts),
			SK:Veterinary #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Survival #codes(upto 1pts)_
		)_
	),
	select3(_
		text("Select 20 points total from these Druidic abilities and/or druidic spells."),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		pointswanted(20),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Bard-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(More combat effective than a Bard, but playing an instrument while fighting demons calls for cunning play.),
	page(DF3:21),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Holiness=1,
			SK:Exorcism=1pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =1pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(3), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(3), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of these disadvantages."),
		pointswanted(-10),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select3(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	),
	select4(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select5(_
		text("Select 26 more points in Holy Abilities and/or skills."),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		pointswanted(26),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#BuildCharItemList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts),
			#newitem(AD:_Increase Exorcism, 1/2, upto(3), gives(+1pts to SK:Exorcism), taboo(SK:Exorcism), needs(SK:Exorcism), existing(SK:Exorcism) ) #codes(upto %points+3pts, downto %points+1pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
		)_
	)

Bard-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(High charisma Bard-Knights are perfect for players who enjoy Leadership.),
	page(DF3:21),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			SK:Brawling=1pts,
			SK:Connoisseur (Weapons)=1pts,
			SK:Leadership=1pts,
			SK:Strategy=1pts,
			SK:Tactics=1pts_
	),
	select1(_
		text("Select an Armoury specialty."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Armoury (Body Armor) #codes(upto 1pts),
			SK:Armoury (Melee Weapons) #codes(upto 1pts)_
		)_
	)

Bard-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Bardic and Chi powers combine to give long-term flexibility.),
	page(DF3:21),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Jumping=1pts,
			%unarmedcombattypealiaslist%_
	),
	x(_
			#ChoiceList(_
				name(unarmedcombattype),
				title(Unarmed Combat Specialty),
				text(Choose your unarmed combat skills),
				picksallowed(1),
				method(bynumber),
		list(_
				"Grappler (Judo better than Karate)",
				"Striker (Karate better than Judo)"_
			),
	aliaslist(_
				"SK:Judo=2pts, SK:Karate=1pts",
				"SK:Judo=1pts, SK:Karate=2pts"_
			)_
		)_
	),
	select1(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(MartialArtist(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	),
	select2(_
		text("Add Acrobatics skill, or Increase an existing skill."),
		tagwith(MartialArtist(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Acrobatics #codes(upto 1pts),
			#newitem(AD:_Increase Acrobatics, 1, gives(+1pts to SK:Acrobatics), taboo(SK:Acrobatics), needs(SK:Acrobatics), existing(SK:Acrobatics) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select3(_
		text("Select 10 points in Chi abilities and/or skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Bard-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(Often use the Bow-Harp),
	page(DF3:21),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Heroic Archer,
			SK:Camouflage=1pts,
			SK:Cartography=1pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Navigation (Land)=1pts,
			SK:Tracking=1pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("You must either take Bow for all [8] points, or Increase Bow Skill for [6] and take two additional skills."),
		tagwith(Scout(yes)),
		itemswanted(atleast 1),
		pointswanted(8),
		multitype(yes),
		list(_
			SK:Bow #codes(upto 8pts, downto 8pts),
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			#newitem(AD:_Increase Camouflage, 1, gives(+1pts to SK:Camouflage), taboo(SK: Camouflage), needs(SK:Camouflage), existing(SK:Camouflage) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Cartography, 1, gives(+1pts to SK:Cartography), taboo(SK:Cartography), needs(SK:Cartography), existing(SK:Cartography) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Fast-Draw Skill (Arrow), 1, gives(+1pts to "SK:Fast-Draw (Arrow)" ), taboo("SK:Fast-Draw (Arrow)"), needs("SK:Fast-Draw (Arrow)"), existing(SK:Fast-Draw (Arrow)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Navigation Skill (Land), 1, gives(+1pts to "SK:Navigation (Land)" ), taboo("SK:Navigation (Land)"), needs("SK:Navigation (Land)" ), existing(SK:Navigation(Land)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Arctic), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Arctic)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Desert), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Desert)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Island/Beach), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Island/Beach)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Jungle), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Jungle)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Mountain), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Mountain)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Plains), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Plains)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Swampland), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Swampland)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Woodlands), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Woodlands)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Tracking, 1, gives(+1pts to SK:Tracking), taboo("SK:Tracking"), needs(SK:Tracking), existing(SK:Tracking) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Bow Skill, 6, gives(+6pts to SK:Bow), taboo("SK:Bow"), needs(SK:Bow), existing(SK:Bow) ) #codes(upto %points+6pts, downto %points+6pts)_
		)_
	),
	select3(_
		text("Take Observation skill, or add [1] point to an existing one."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Observation #codes(upto 1pts),
			#newitem(AD:_Increase Observation, 1, gives(+1pts to SK:Observation), taboo(SK:Observation), needs(SK:Observation), existing(SK:Observation) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Bard-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(The ideal fighting complement for Bard characters.),
	page(DF3:21),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			PE:Weapon Bond (%Weapon%)_
	),
	select1(_
		text(Please add 8 points to your primary Combat skill:),
		pointswanted(8),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+8pts) ))_
		)_
	),
	select2(_
		text("Select either Acrobatics if you don't already have it, or Increase Acrobatics Skill if you do. You'll have to delete it and raise the existing skill later."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Acrobatics #codes(upto 1pts),
			#newitem(AD:_Increase Acrobatics, 1, gives(+1pts to SK:Acrobatics), taboo(SK:Acrobatics), needs(SK:Acrobatics), existing(SK:Acrobatics) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Bard-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(Combine the Bard's social craft with the Thief's practical cunning for a new high in skullduggery.),
	page(DF3:21),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+2,
			ST:Basic Speed=ST:Basic Speed-.5,
			SK:Stealth = ("SK:Stealth::points"+2pts) _
	),
	adds(_
			AD:Flexibility,
			AD:High Manual Dexterity=1,
			SK:Escape=1pts,
			SK:Filch=1pts,
			SK:Forced Entry=1pts,
			SK:Lockpicking=1pts,
			SK:Pickpocket=1pts,
			SK:Traps=1pts_
	),
	needs(_
			SK:Stealth = 4pts _
	),
	select1(_
		text("Take a point in Acrobatics, or select Increase Acrobatics Skill to add to an existing Acrobatics skill."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Acrobatics #codes(upto 1pts),
			#newitem(AD:_Increase Acrobatics, 1, gives(+1pts to SK:Acrobatics), taboo(SK:Acrobatics), needs(SK:Acrobatics), existing(SK:Acrobatics) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select2(_
		text("Take a point in Climbing, or select Increase Climbing Skill to add to an existing Climbing skill."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Climbing #codes(upto 1pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to SK:Climbing), taboo(SK:Climbing), needs(SK:Climbing), existing(SK:Climbing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Bard-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(_
				in "ST:IQ" with "noresync(yes), maxscore(25)",
				in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))",
				in "AD:Bardic Talent" with {upto(0), taboo("TE:Bard-Wizard (Dungeon Fantasy)")}_
				),
	description(Bardic Magery greatly increases the Bard's casting options, this is the Bard's best caster options.),
	page(DF3:22),
	noresync(yes),
	sets(_
			AD:Bardic Talent=0,
			ST:Fatigue Points=ST:Fatigue Points+3_
	),
	adds(_
			AD:Magery 0,
			AD:Bardic Magery=2,
			SK:Alchemy=1pts,
			SK:Hidden Lore (Hidden Lore)=1pts,
			SK:Hidden Lore (Magical Writings)=1pts,
			SK:Occultism=1pts,
			SK:Thaumatology=1pts_
	),
	x(#message("Take an additional 25 points in any wizardly spells of any kind."),
		#message("You should remove the Bardic Talent advantage (which has been set to level 0 by this template). It's been supersceeded by Bardic Magery.")_
	),
	needs(25 Spells=1pts), taboo(AD:Bardic Talent < 1)

<Character Templates - Dungeon Fantasy - Mixed Professions - Cleric, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Cleric-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Physical Strength is good, but Cleric-Druid or Cleric-Holy Warrior make for better matches.),
	page(DF3:22),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+2_
	),
	adds(_
			AD:High Pain Threshold,
			AD:Outdoorsman=1_
	),
	select1(_
		text("Select 10 points from these skills."),
		tagwith(Barbarian(yes)),
		itemswanted(10),
		pointswanted(10),
		list(_
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Camouflage #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Running #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts),
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Tracking #codes(upto 1pts)_
		)_
	)

Cleric-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(The cleric-bard can influence mortals, demons, and the undead.),
	page(DF3:22),
	noresync(yes),
	adds(_
			AD:Bardic Talent=1,
			AD:Charisma=1,
			AD:Musical Ability=1,
			AD:Voice,
			SK:Musical Instrument=1pts,
			SK:Singing=1pts_
	),
	select1(_
		text("Take 20 points total in Bard-Song abilities, bardic skills, and/or spells from the Communication and Empathy and/or Mind Control Colleges."),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		pointswanted(20),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Cleric-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Being able to cast something almost anywhere is good, playing a priest-priest might not be.),
	page(DF3:22),
	noresync(yes),
	adds(_
			AD:Power Investiture (Druidic)=2,
			SK:Herb Lore=2pts,
			SK:Naturalist=1pts,
			SK:Pharmacy (Herbal)=1pts,
			SK:Veterinary=1pts_
	),
	select1(_
		text("Please select a Hidden Lore specialty."),
		pointswanted(1),
		tagwith(Druid(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Elemental Lore) #codes(upto 1pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 1pts),
			SK:Hidden Lore (Nature Spirit Lore) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Please select four of these background skills."),
		tagwith(Druid(yes)),
		itemswanted(4),
		pointswanted(4),
		list(_
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Survival #codes(upto 1pts)_
		)_
	),
	select3(_
		text("Please select 20 points in total of Druidic abilities and/or druidic spells."),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		pointswanted(20),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

* There is only one Holy Might ability that costs [5] or less...
Cleric-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Stack combat ability and Higher Purpose and clerical buffs and Blessed (Heroic Feats) -- Yeah!),
	page(DF3:22),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:DX=ST:DX+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.5_
	),
	adds(_
			SK:Leadership=1pts,
			SK:Strategy=1pts,
			SK:Tactics=1pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =1pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(3), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(3), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Spend 5 more points on Holy Might Abilities."),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 0, upto 100),
		pointswanted(upto 5),
		list(_
			AD:Holy Might Resistant to Evil Supernatural Powers_
		)_
	),
	select3(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	)

Cleric-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Combat Reflexes and High Pain Threshold makes for a true combat medic.),
	page(DF3:22),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			SK:Brawling=1pts,
			SK:Connoisseur (Weapons)=1pts,
			SK:Leadership=1pts,
			SK:Strategy=1pts,
			SK:Tactics=1pts_
	),
	select1(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(Knight(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	),
	select2(_
		text("Select an Armoury skill."),
		pointswanted(1),
		tagwith(Knight(yes)),
		itemswanted(1),
		list(_
			SK:Armoury (Body Armor) #codes(upto 1pts),
			SK:Armoury (Melee Weapons) #codes(upto 1pts)_
		)_
	)

Cleric-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Spells, special skills, and powers require long-term focus. Chi Mastery Enhanced Move to get to the wounded is a good start.),
	page(DF3:23),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Acrobatics=1pts,
			SK:Jumping=1pts,
			%unarmedcombattypealiaslist%_
	),
	x(_
			#ChoiceList(_
				name(unarmedcombattype),
				title(Unarmed Combat Specialty),
				text(Choose your unarmed combat skills),
				picksallowed(1),
				method(bynumber),
		list(_
				"Grappler (Judo better than Karate)",
				"Striker (Karate better than Judo)"_
			),
	aliaslist(_
				"SK:Judo=2pts, SK:Karate=1pts",
				"SK:Judo=1pts, SK:Karate=2pts"_
			)_
		)_
	),
	select1(_
		text("Select 10 points in Chi abilities and/or chi skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Cleric-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(Make one of your spells Spell-Archery and use harmless boffer arrows to aid distant allies.),
	page(DF3:23),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Heroic Archer,
			SK:Bow=8pts,
			SK:Camouflage=1pts,
			SK:Cartography=1pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Navigation (Land)=1pts,
			SK:Tracking=1pts_
	),
	x(#message("If you have Vow (No edged weapons) replace it with Vow (Own no more than horse can carry).")_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Add Stealth if you don't already have it, otherwise select Increase Stealth Skill and add it to the skill later."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Stealth #codes(upto 1pts),
			#newitem(AD:_Increase Stealth, 1, gives(+1pts to SK:Stealth), needs(SK:Stealth), taboo(SK:Stealth), existing(SK:Stealth) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Cleric-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(Weapon Master isn't cheap, cleric-knight better serves fighting clerics.),
	page(DF3:23),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			SK:Acrobatics=2pts_
	),
	x(#message("Clerics who use swords can't take Vow (No edged weapons)!")_
	),
	select1(_
		text("Either put [8] points into a weapon you already know, or take a new sword skill at [8] points."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(8),
		multitype(yes),
		list(_
			SK:Rapier #codes(upto 8pts, downto 8pts),
			SK:Saber #codes(upto 8pts, downto 8pts),
			SK:Shortsword #codes(upto 8pts, downto 8pts),
			SK:Smallsword #codes(upto 8pts, downto 8pts),
			#BuildSelectList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+8pts) ))_
		)_
	)

Cleric-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(Thieving skills let you acquire loot found usijng Seeker, See Secrets, and divine guidance. For charity, of course.),
	page(DF3:24),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+2,
			ST:Basic Speed=ST:Basic Speed-.5_
	),
	adds(_
			AD:Flexibility,
			AD:High Manual Dexterity=1,
			SK:Filch=1pts,
			SK:Forced Entry=1pts,
			SK:Lockpicking=1pts,
			SK:Pickpocket=1pts,
			SK:Traps=1pts_
	),
	select1(_
		text("Add a Climbing skill, or raise an existing Climbing skill by [1] point."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Climbing #codes(upto 1pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to SK:Climbing), taboo(SK:Climbing), needs(SK:Climbing), existing(SK:Climbing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select2(_
		text("Either [4] points in Stealth, or [3] in an existing Stealth skill and one additional skill."),
		tagwith(Thief(yes)),
		itemswanted(atleast 1),
		pointswanted(4),
		multitype(yes),
		list(_
			SK:Stealth #codes(upto 4pts, downto 4pts),
			#newitem(AD:_Increase Filch, 1, gives(+1pts to SK:Filch), taboo("SK:Filch"), needs("SK:Filch"), existing(SK:Filch) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Forced Entry, 1, gives(+1pts to SK:Forced Entry), taboo("SK:Forced Entry"), needs("SK:Forced Entry"), existing(SK:Forced Entry) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Lockpicking, 1, gives(+1pts to SK:Lockpicking), taboo("SK:Lockpicking"), needs("SK:Lockpicking"), existing(SK:Lockpicking) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Pickpocket, 1, gives(+1pts to SK:Pickpocket), taboo("SK:Pickpocket"), needs("SK:Pickpocket"), existing(SK:Pickpocket) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Traps, 1, gives(+1pts to SK:Traps), taboo("SK:Traps"), needs("SK:Traps"), existing(SK:Traps) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Stealth, 3, gives(+3pts to SK:Stealth), taboo("SK:Stealth"), needs("SK:Stealth"), existing(SK:Stealth) ) #codes(upto %points+3pts, downto %points+3pts)_
		)_
	)

Cleric-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(Access to Clerical and Wizardly spells makes this a powerful lens, but Clerical spells do not count as prerequisites for Wizardly ones.),
	page(DF3:24),
	noresync(yes),
	sets(_
			ST:Fatigue Points=ST:Fatigue Points+1_
	),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Alchemy=1pts,
			SK:Thaumatology=1pts_
	),
	x(#message("You must spend [20] points on twenty Wizardly spells. Remember that Clerical spells do not count as prerequisites for Wizardly ones.")_
	),
	needs(20 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Druid, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Druid-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Lots of skill overlap make this a natural. Adding high ST to Shapeshifting makes the Barbearian joke slightly better.),
	page(DF3:24),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+2_
	),
	adds(_
			AD:High Pain Threshold,
			AD:Outdoorsman=1,
			SK:Fishing=1pts,
			SK:Navigation (Land)=1pts,
			SK:Running=1pts,
			SK:Swimming=1pts,
			SK:Tracking=1pts_
	),
	select1(_
		text("Select one additional Advantage."),
		tagwith(Barbarian(yes)),
		itemswanted(1),
		pointswanted(5),
		list(_
			AD:Fit,
			AD:Rapid Healing,
			AD:Resistant to Poison #codes(upto 1, downto 1),
			AD:Striking ST #codes(upto 1, downto 1)_
		)_
	)

Druid-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(The druid-bard can influence man and beast, but neither undead nor demonic entities.),
	page(DF3:24),
	noresync(yes),
	adds(_
			AD:Bardic Talent=1,
			AD:Charisma=1,
			AD:Musical Ability=1,
			AD:Voice,
			SK:Musical Instrument=1pts,
			SK:Public Speaking=1pts,
			SK:Singing=1pts_
	),
	select1(_
		text("Select 19 points from the list of Bardic abilities, bardic skills, and/or Communication and Empathy and/or Mind Control Colleges."),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		pointswanted(19),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Druid-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(A meaty spell list with some redundancy, suffers from the same problems as does the cleric-druid.),
	page(DF3:24),
	noresync(yes),
	adds(_
			AD:Clerical Investment=1,
			AD:Power Investiture (Holy)=2,
			SK:Exorcism=1pts,
			SK:Meditation=1pts,
			SK:Occultism=1pts,
			SK:Public Speaking=1pts,
			SK:Surgery=1pts_
	),
	select1(_
		text("Select one of these disadvantages."),
		tagwith(Cleric(yes)),
		itemswanted(1),
		pointswanted(-10),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Coreligionists),
			DI:Vow (No edged weapons)_
		)_
	),
	select2(_
		text("Select 30 points in Holy abilities and/or clerical spells."),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		pointswanted(30),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Druid-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Holy warrior abilities stay with you in animals forms...),
	page(DF3:25),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1_
	),
	adds(_
			AD:Holiness=1,
			SK:Exorcism=1pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =1pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(3), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(3), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of the following advantages."),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		pointswanted(5),
		list(_
			AD:Rapid Healing,
			AD:Resistant to Poison #codes(upto 1, downto 1),
			AD:Striking ST #codes(upto 1, downto 1),
			AD:Extra Holiness _
		)_
	),
	select3(_
		text("Select one of these disadvantages."),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		pointswanted(-10),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select4(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	),
	select5(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select6(_
		text("Spend 26 more points on Holy Might Abilities and Holy Warrior Skills."),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		pointswanted(26),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#BuildCharItemList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 4pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 4pts),
			#newitem(AD:_Increase Exorcism, 1/2, upto(3), gives(+1pts to SK:Exorcism), taboo("SK:Exorcism"), needs("SK:Exorcism"), existing(SK:Exorcism) ) #codes(upto %points+3pts, downto %points+1pts)_
		)_
	)

Druid-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(High IQ for Strategy and Tactics combined with battlefield altering magic = Druid General.),
	page(DF3:25),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1_
	),
	adds(_
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			SK:Brawling=1pts,
			SK:Connoisseur (Weapons)=1pts,
			SK:Leadership=1pts,
			SK:Strategy=1pts,
			SK:Tactics=1pts_
	),
	select1(_
		text("Select one advantage."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(5),
		list(_
			AD:Fit,
			AD:Rapid Healing,
			AD:Striking ST #codes(upto 1, downto 1) _
		)_
	),
	select2(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(Knight(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	),
	select3(_
		text("Select an Armoury specialty."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Armoury (Body Armor) #codes(upto 1pts),
			SK:Armoury (Melee Weapons) #codes(upto 1pts)_
		)_
	)

Druid-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Shapeshifting spells and Chi Mastery can be potent, but expensive.),
	page(DF3:25),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			%unarmedcombattypealiaslist%,
			SK:Acrobatics=1pts,
			SK:Jumping=1pts_
		),
	x(_
			#ChoiceList(_
				name(unarmedcombattype),
				title(Unarmed Combat Specialty),
				text(Choose your unarmed combat skills),
				picksallowed(1),
				method(bynumber),
		list(_
				"Grappler (Judo better than Karate)",
				"Striker (Karate better than Judo)"_
			),
	aliaslist(_
				"SK:Judo=2pts, SK:Karate=1pts",
				"SK:Judo=1pts, SK:Karate=2pts"_
			)_
		)_
	),
	select1(_
		text("Select 10 points in Chi abilities and/or chi skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Druid-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(An archer who knows spells like Hawk Vision and Conceal is scary. This is the druid-warrior's best choice.),
	page(DF3:25),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Heroic Archer,
			SK:Bow=8pts,
			SK:Cartography=1pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Navigation (Land)=1pts,
			SK:Shadowing=1pts,
			SK:Tracking=1pts,
			SK:Traps=1pts_
	),
	select1(_
		text("Select Observation or Increase Observation if you already have the skill."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Observation #codes(upto 1pts),
			#newitem(AD:_Increase Observation, 1, gives(+1pts to "SK:Observation"), taboo("SK:Observation"), needs("SK:Observation"), existing(SK:Observation) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Druid-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(Secretive nature priests don't usually become flamboyant barflies--but nothing says you can't do it.),
	page(DF3:25),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			SK:Acrobatics=2pts_
	),
	select1(_
		text("Either put [8] points into a weapon you already know, or take a new sword skill at [8] points."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(8),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+8pts) )),
			SK:Rapier #codes(upto 8pts, downto 8pts),
			SK:Saber #codes(upto 8pts, downto 8pts),
			SK:Smallsword #codes(upto 8pts, downto 8pts)_
		)_
	)

Druid-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(Druidic magic greatly assists outdoor thievery, and the urban thief skills provide a nice counter-balance.),
	page(DF3:25),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+2,
			ST:Basic Speed=ST:Basic Speed-.5_
			SK:Stealth = ("SK:Stealth::points"+2)pts _
	),
	adds(_
			AD:Flexibility,
			AD:High Manual Dexterity=1,
			SK:Escape=1pts,
			SK:Filch=1tps,
			SK:Forced Entry=1pts,
			SK:Holdout=1pts,
			SK:Lockpicking=1pts,
			SK:Pickpocket=1pts,
			SK:Shadowing=1pts,
			SK:Traps=1pts_
	),
	needs(_
			SK:Stealth = 4pts _
	)

Druid-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(A potent caster option, note that Druidic spells do not count as prerequisites for wizardly ones.),
	page(DF3:25),
	noresync(yes),
	sets(_
			ST:Fatigue Points=ST:Fatigue Points+1_
	),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Occultism=1pts,
			SK:Thaumatology=1pts_
	),
	x(#message("You must spend [20] points on twenty Wizardly spells. Remember that Druidic spells do not count as prerequisites for Wizardly ones.")_
	),
	needs(20 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Holy Warrior, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Holy Warrior-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Outdoor skills to track down Evil where it lives, and more ST to smite it.),
	page(DF3:26),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+2_
	),
	adds(_
			AD:High Pain Threshold,
			AD:Outdoorsman=1_
	),
	select1(_
		text("Select 10 of these skills at [1] point each."),
		tagwith(Barbarian(yes)),
		itemswanted(10),
		pointswanted(10),
		list(_
			SK:Camouflage #codes(upto 1pts),
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Running #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Survival #codes(upto 1pts),
			SK:Tracking #codes(upto 1pts)_
		)_
	)

Holy Warrior-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(The holy warrior-bards casts with Singing, instruments are awkward in melee!),
	page(DF3:26),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Bardic Talent=1,
			AD:Charisma=1,
			AD:Musical Ability=1,
			SK:Musical Instrument=2pts,
			SK:Public Speaking=1pts,
			SK:Singing=1pts_
	),
	select1(_
		text("Select 13 points from the list of Bardic abilities, bardic skills, and/or Communication and Empathy and/or Mind Control Colleges."),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		pointswanted(13),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Holy Warrior-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(This is the holy warrior's best casting lens, beefing up existing abilities and adding spells to his arsenal.),
	page(DF3:26),
	noresync(yes),
	x(#message("The Holiness advantage must be removed from the charater manually; it has been set to level 0 and Power Investiture 2 (Holy) added in it's place.")),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1,
			AD:Holiness=0_
	),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy)=2_
	),
	select1(_
		text("Please select 20 points in Holy abilities and/or clerical spells."),
		pointswanted(20),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Holy Warrior-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Marginal because druidic powers are not optimized to fight evil.),
	page(DF3:26),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Power Investiture (Druidic) =2,
			SK:Camouflage =1pts,
			SK:Herb Lore =1pts,
			SK:Naturalist =1pts_
	),
	select1(_
		text("Select a Hidden Lore specialty."),
		tagwith(Druid(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Hidden Lore (Elemental Lore) #codes(upto 1pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 1pts),
			SK:Hidden Lore (Nature Spirit Lore) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Choose a Survival specialty."),
		tagwith(Druid(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select3(_
		text("Select 10 points total from these Druidic abilities and/or druidic spells."),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Holy Warrior-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Not too different from a Holy Warrior, but 'holy knight' sounds cool.),
	page(DF3:27),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			SK:Connoisseur (Weapons)=1pts_
	),
	select1(_
		text("Select an Armoury skill."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Armoury (Body Armor) #codes(upto 1pts),
			SK:Armoury (Melee Weapons) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Spend [8] points total on a weapon skill you already have and/or adding any of these skills."),
		tagwith(Knight(yes)),
		itemswanted(atleast 1),
		pointswanted(8),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			SK:Axe/Mace #codes(upto 8pts),
			SK:Bow #codes(upto 8pts),
			SK:Boxing #codes(upto 8pts),
			SK:Broadsword #codes(upto 8pts),
			SK:Polearm #codes(upto 8pts),
			SK:Shortsword #codes(upto 8pts),
			SK:Spear #codes(upto 8pts),
			SK:Sumo Wrestling #codes(upto 8pts),
			SK:Two-Handed Sword #codes(upto 8pts)_
		)_
	)

Holy Warrior-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(_
				in {SK:Brawling} with {taboo({TE:Holy Warrior-Martial Artist (Dungeon Fantasy)})},
				in {SK:Wrestling} with {taboo({TE:Holy Warrior-Martial Artist (Dungeon Fantasy)})}_
			),
	taboo(SK:Brawling, SK:Wrestling),
	sets(_
		SK:Brawling=0pts,
		SK:Wrestling=0pts_
		),
	x(#Message("This template sets the Brawling & Wrestling skills to 0 points, they have been superseded with Karate & Judo. You will need to manually remove Brawling & Wrestling yourself.")),
	description(Abilities that benefit from the holy warrior's Will and IQ make this a viable mix.),
	page(DF3:27),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Acrobatics=2pts,
			SK:Jumping=1pts,
			SK:Karate=4pts,
			SK:Judo=4pts_
	),
	select1(_
		text("Select 10 points in Chi Abilities and/or Chi Skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Holy Warrior-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(Demons may fly-but a holy warrior's Higher Purpose and Shtick work with a bow.),
	page(DF3:27),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Heroic Archer,
			SK:Bow=8pts,
			SK:Camouflage=1pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Navigation (Land)=1pts,
			SK:Tracking=2pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Add Stealth if you don't already have it, otherwise select Increase Stealth Skill and add it to the skill later."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Stealth #codes(upto 1pts),
			#newitem(AD:_Increase Stealth, 1, gives(+1pts to "SK:Stealth"), taboo("SK:Stealth"), needs("SK:Stealth"), existing(SK:Stealth) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Holy Warrior-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(Higher Purpose stacks with Enhanced Parry and Weapon Master - Very Dangerous!),
	page(DF3:27),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			SK:Acrobatics=2pts_
	),
	select1(_
		text("Either put [8] points into a weapon you already know, or take a new sword skill at [8] points."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(8),
		multitype(yes),
		list(_
			SK:Rapier #codes(upto 8pts, downto 8pts),
			SK:Saber #codes(upto 8pts, downto 8pts),
			SK:Shortsword #codes(upto 8pts, downto 8pts),
			SK:Smallsword #codes(upto 8pts, downto 8pts),
			#BuildSelectList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+8pts) ))_
		)_
	)

Holy Warrior-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(Holy Warriors are too honorable to steal. Nasty surprises and backstabs are valid tactics against Evil.),
	page(DF3:28),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Flexibility,
			SK:Escape=1pts,
			SK:Forced Entry=1pts,
			SK:Lockpicking=1pts,
			SK:Shadowing=1pts,
			SK:Traps=2pts_
	),
	select1(_
		text("Select either Stealth with [8] points, or Increase Stealth Skill to raise an existing skill to [8] points. Spend the remaining points on any of the other listed skills."),
		tagwith(Thief(yes)),
		itemswanted(atleast 1),
		pointswanted(8),
		multitype(yes),
		list(_
			SK:Stealth #codes(upto 8pts, downto 8pts),
			#newitem(AD:_Increase Stealth Skill, 7, gives(+7pts to "SK:Stealth"), taboo("SK:Stealth"), needs("SK:Stealth"), existing(SK:Stealth) ) #codes(upto %points+7pts, downto %points+7pts),
			#newitem(AD:_Increase Escape, 1, gives(+1pts to "SK:Escape"), taboo("SK:Escape"), needs("SK:Escape"), existing(SK:Stealth) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Forced Entry, 1, gives(+1pts to "SK:Forced Entry"), taboo("SK:Forced Entry"), needs("SK:Forced Entry"), existing(SK:Forced Entry) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Lockpicking, 1, gives(+1pts to "SK:Lockpicking"), taboo("SK:Lockpicking"), needs("SK:Lockpicking"), existing(SK:Lockpicking) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Shadowing, 1, gives(+1pts to "SK:Shadowing"), taboo("SK:Shadowing"), needs("SK:Shadowing"), existing(SK:Shadowing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select2(_
		text("Take Climbing skill, or Increase Climbing Skill to raise an existing skill."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Climbing #codes(upto 1pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to "SK:Climbing"), taboo("SK:Climbing"), needs("SK:Climbing"), existing(SK:Climbing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Holy Warrior-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(Banish and Remove Curse are archetypal, even if Fireballing Evil is tempting.),
	page(DF3:28),
	noresync(yes),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Alchemy=2pts,
			SK:Occultism=2pts,
			SK:Thaumatology=1pts_
	),
	x(#message("Take an additional 20 points in any wizardly spells.")_
	),
	needs(20 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Knight, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Knight-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(A better ST-skill balance makes for a better outdoorsman-warrior.),
	page(DF3:28),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+2,
			ST:Perception=ST:Perception+1_
	),
	adds(_
			AD:Outdoorsman=2_
	),
	select1(_
		text("Select five of these skills at [1] point each."),
		tagwith(Barbarian(yes)),
		itemswanted(5),
		pointswanted(5),
		list(_
			SK:Camouflage #codes(upto 1pts),
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts),
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Tracking #codes(upto 1pts)_
		)_
	)

Knight-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Being an effective Bard with the knight's IQ means emphasizing Singing and casting buffs.),
	page(DF3:28),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Bardic Talent=1,
			AD:Charisma=1,
			AD:Musical Ability=1,
			SK:Musical Instrument=4pts,
			SK:Public Speaking=2pts,
			SK:Singing=1pts_
	),
	select1(_
		text("Please select 15 points from the following Bard-Song abilities, bardic skills, and/or spells from the Commuication and Empathy or Mind Control Colleges."),
		pointswanted(15),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Knight-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(The knight's best caster lens, but don't rely on skill 10-11 Healing.),
	page(DF3:28),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy)=2,
			SK:Esoteric Medicine (Holy)=2pts,
			SK:Exorcism=2pts,
			SK:Meditation=2pts,
			SK:Religious Ritual=2pts,
			SK:Theology=2pts_
	),
	select1(_
		text("Choose one disadvantage."),
		pointswanted(-10),
		tagwith(Cleric(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Coreligionists),
			DI:Vow (No edged weapons) _
		)_
	),
	select2(_
		text("Please select 10 points in Holy abilities and/or clerical spells."),
		pointswanted(10),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Knight-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(A lance-wielding knight will find druidic spells valuable for his mount, otherwise this is a niche lens.),
	page(DF3:28),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Power Investiture (Druidic)=2,
			SK:Camouflage=1pts,
			SK:Esoteric Medicine (Druidic)=2pts,
			SK:Herb Lore=2pts,
			SK:Religious Ritual (Druidic)=2pts,
			SK:Theology (Druidic)=2pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Druid(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Select 10 points total in Druidic abilities and/or druidic spells."),
		pointswanted(10),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Knight-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Many holy warriors are knights who hacked their way into divine favor, they aren't all do-gooders.),
	page(DF3:28),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Holiness=1,
			SK:Exorcism=1pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =1pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(1), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(1), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of these disadvantages."),
		pointswanted(-10),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select3(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select4(_
		text("Select 25 points total in Holy abilities and/or additional skills."),
		pointswanted(25),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
		) _
	)

Knight-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(_
				in {SK:Brawling} with {taboo(TE:Knight-Martial Artist (Dungeon Fantasy))},
				in {SK:Wrestling} with {taboo(TE:Knight-Martial Artist (Dungeon Fantasy))}_
			),
	taboo(SK:Brawling, SK:Wrestling),
	x(#Message("This template sets the Brawling & Wrestling skills to 0 points, they have been superseded with Karate & Judo. You will need to manually remove Brawling & Wrestling yourself.")),
	sets(_
			SK:Brawling = 0pts,
			SK:Wrestling = 0pts _
	),
	description(An effective mix if you favor skills useful when armed over exclusively unarmed ones.),
	page(DF3:29),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Acrobatics=1pts,
			SK:Karate=4pts,
			SK:Judo=4pts_
	),
	creates(_
				"DI:Remove Boxing or Brawling Skill, -2, cat(_General), gives(-2pts to SK:Boxing, -2pts to SK:Brawling), taboo(SK:Boxing, SK:Brawling)",
				"DI:Remove Sumo Wrestling or Wrestling Skill, -2, cat(_General), gives(-2pts to SK:Sumo Wrestling, -2pts to SK:Wrestling), taboo(SK:Sumo Wrestling, SK:Wrestling)"_
	),
	select1(_
		text("Select 10 points in Chi Abilities and/or Chi Skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Knight-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(Adding the scout's prowess at archery to the knight's melee ability makes a well-rounded warrior combination.),
	page(DF3:29),
	noresync(yes),
	sets(_
			ST:Perception=ST:Perception+2_
	),
	adds(_
			AD:Heroic Archer,
			SK:Camouflage=1pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Navigation (Land)=2pts,
			SK:Tracking=1pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Select Bow if you don't already have it, or Increase Bow Skill if you do."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(12),
		multitype(yes),
		list(_
			SK:Bow #codes(upto 12pts, downto 12pts),
			#newitem(AD:_Increase Bow, 12, gives(+12pts to "SK:Bow"), taboo("SK:Bow"), needs("SK:Bow"), existing(SK:Bow) ) #codes(upto %points+12pts, downto %points+12pts)_
		)_
	),
	select3(_
		text("Take Observation skill, or add [1] point to an existing one."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Observation #codes(upto 1pts),
			#newitem(AD:_Increase Observation, 1, gives(+1pts to "SK:Observation"), taboo("SK:Observation"), needs("SK:Observation"), existing(SK:Observation) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select4(_
		text("Add Stealth if you don't already have it, otherwise select Increase Stealth Skill and add it to the skill later."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Stealth #codes(upto 1pts),
			#newitem(AD:_Increase Stealth, 1, gives(+1pts to "SK:Stealth"), taboo("SK:Stealth"), needs("SK:Stealth"), existing(SK:Stealth) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Knight-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(The knight-swashbuckler is the apex heavy melee figter. He can be built in ),
	page(DF3:29),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			PE:Weapon Bond (%Weapon%)_
	),
	creates(_
				"SK:Increase Weapon Skill, DX/A, cat(_General)"=8pts_
	),
	select1(_
		text("Select either Acrobatics if you don't already have it, or Increase Acrobatics Skill if you do. You'll have to delete it and raise the existing skill later."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Acrobatics #codes(upto 1pts),
			#newitem(AD:_Increase Acrobatics, 1, gives(+1pts to "SK:Acrobatics"), taboo("SK:Acrobatics"), needs("SK:Acrobatics"), existing(SK:Acrobatics) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Knight-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(This is a extremely versatile combination in the typical dungeon campaign.),
	page(DF3:29),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Flexibility,
			AD:High Manual Dexterity=1,
			SK:Filch=1pts,
			SK:Lockpicking=2pts,
			SK:Pickpocket=1pts,
			SK:Traps=2pts_
	),
	select1(_
		text("Add Stealth if you don't already have it. Otherwise select Increase Stealth Skill, adding [1] point to the skill, and [1] point in another skill."),
		tagwith(Thief(yes)),
		itemswanted(upto 2),
		pointswanted(2),
		multitype(yes),
		list(_
			SK:Stealth #codes(upto 2pts, downto 2pts),
			#newitem(AD:_Increase Stealth, 1, gives(+1pts to "SK:Stealth"), taboo("SK:Stealth"), needs("SK:Stealth"), existing(SK:Stealth) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Filch, 1, gives(+1pts to "SK:Filch"), taboo("SK:Filch"), needs("SK:Filch"), existing(SK:Filch) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Lockpicking, 1, gives(+1pts to "SK:Lockpicking"), taboo("SK:Lockpicking"), needs("SK:Lockpicking"), existing(SK:Lockpicking) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Pickpocket, 1, gives(+1pts to "SK:Pickpocket"), taboo("SK:Pickpocket"), needs("SK:Pickpocket"), existing(SK:Pickpocket) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Traps, 1, gives(+1pts to "SK:Traps"), taboo("SK:Traps"), needs("SK:Traps"), existing(SK:Traps) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select2(_
		text("Add a Climbing skill, or raise an existing Climbing skill by [1] point."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Climbing #codes(upto 1pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to "SK:Climbing"), taboo("SK:Climbing"), needs("SK:Climbing"), existing(SK:Climbing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select3(_
		text("Add a Forced Entry skill, or raise an existing Forced Entry skill by [1] point."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Forced Entry #codes(upto 1pts),
			#newitem(AD:_Increase Forced Entry, 1, gives(+1pts to "SK:Forced Entry"), taboo("SK:Forced Entry"), needs("SK:Forced Entry"), existing(SK:Forced Entry) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Knight-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(Resisted spells at level 10 or 11 will not work well, Flaming Armor and Flaming Weapons may.),
	page(DF3:29),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Alchemy=2pts,
			SK:Occultism=1pts,
			SK:Thaumatology=2pts_
	),
	x(#message("Select 10 points in wizardly spells, which will be either (H) IQ[1] or (VH) IQ-1[1] with the +2 for Magery.")_
	),
	needs(10 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Martial Artist, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Martial Artist-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(For martial artists interested in wilderness adventures, not for the combat bonuses.),
	page(DF3:29),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+2,
			ST:Perception=ST:Perception+1_
	),
	adds(_
			AD:High Pain Threshold,
			AD:Outdoorsman=1_
	),
	select1(_
		text("Select five skills from this list."),
		tagwith(Barbarian(yes)),
		itemswanted(5),
		pointswanted(5),
		list(_
			SK:Camouflage #codes(upto 1pts),
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts),
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Tracking #codes(upto 1pts)_
		)_
	)

Martial Artist-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Chi and bardic abilities offer many options. Of course, you'll need many points to be good at it all.),
	page(DF3:29),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Bardic Talent=1,
			AD:Charisma=1,
			AD:Musical Ability=1,
			SK:Musical Instrument=4pts,
			SK:Public Speaking=2pts,
			SK:Singing=2pts_
	),
	select1(_
		text("Please select 14 points from the following Bard-Song abilities, bardic skills, and/or spells from the Commuication and Empathy or Mind Control Colleges."),
		pointswanted(14),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Martial Artist-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(This mix pays off best with long-term dedication. Still, clerical buffs are effective right away.),
	page(DF3:30),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy)=2,
			SK:Exorcism=1pts,
			SK:Religious Ritual=2pts,
			SK:Theology=2pts_
	),
	select1(_
		text("Choose one disadvantage."),
		pointswanted(-10),
		tagwith(Cleric(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Coreligionists),
			DI:Vow (No edged weapons) _
		)_
	),
	select2(_
		text("Please select 15 points in Holy abilities and/or clerical spells."),
		pointswanted(15),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Martial Artist-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Partial Shapeshifting 'Tiger Paws' with Karate is just plain cool. The requisite Power Investiture is expensive, so it will have to wait.),
	page(DF3:30),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Power Investiture (Druidic)=2,
			SK:Camouflage=1pts,
			SK:Herb Lore=2pts,
			SK:Naturalist=2pts,
			SK:Religious Ritual (Druidic)=2pts,
			SK:Theology (Druidic)=2pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Druid(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Select 10 points total from these Druidic abilities and/or druidic spells."),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Martial Artist-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Combine Physiology, Pressure Points and Higher Purpose. Smile.),
	page(DF3:30),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Holiness=1,
			SK:Exorcism=1pts,
			SK:Leadership=1pts,
			SK:Strategy=2pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =4pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(1), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(1), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of these disadvantages."),
		pointswanted(-10),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select3(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select4(_
		text("Select 24 points total in Holy abilities and/or additional skills."),
		pointswanted(24),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
		) _
	)

Martial Artist-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Heavy swung weapons with Power Blow. Effective ST24 + halberd = carnage.),
	page(DF3:30),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1_
	),
	adds(_
			AD:Born War-Leader=1,
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			SK:Armoury (Melee Weapons)=2pts,
			SK:Connoisseur (Weapons)=2pts,
			SK:Leadership=1pts,
			SK:Strategy=1pts_
	),
	select1(_
		text("Spend [4] points to learn one of these weapon skills, or select Increase Weapon Skill to improve a skill you already have."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(4),
		multitype(yes),
		list(_
			SK:Axe/Mace #codes(upto 4pts, downto 4pts),
			SK:Bow #codes(upto 4pts, downto 4pts),
			SK:Broadsword #codes(upto 4pts, downto 4pts),
			SK:Polearm #codes(upto 4pts, downto 4pts),
			SK:Spear #codes(upto 4pts, downto 4pts),
			SK:Two-Handed Sword #codes(upto 4pts, downto 4pts),
			#newitem(AD:_Increase Axe/Mace, 1/2, gives(+1pts to SK:Axe/Mace), taboo(SK:Axe/Mace), needs(SK:Axe/Mace), existing(SK:Axe/Mace) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Flail, 1/2, gives(+1pts to SK:Flail), taboo(SK:Flail), needs(SK:Flail), existing(SK:Flail) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Jitte/Sai, 1/2, gives(+1pts to SK:Jitte/Sai), taboo(SK:Jitte/Sai), needs(SK:Jitte/Sai), existing(SK:Jitte/Sai) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Knife, 1/2, gives(+1pts to SK:Knife), taboo(SK:Knife), needs(SK:Knife), existing(SK:Knife) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Kusari, 1/2, gives(+1pts to SK:Kusari), taboo(SK:Kusari), needs(SK:Kusari), existing(SK:Kusari) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Shortsword, 1/2, gives(+1pts to SK:Shortsword), taboo(SK:Shortsword), needs(SK:Shortsword), existing(SK:Shortsword) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Smallsword, 1/2, gives(+1pts to SK:Smallsword), taboo(SK:Smallsword), needs(SK:Smallsword), existing(SK:Smallsword) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Spear, 1/2, gives(+1pts to SK:Spear), taboo(SK:Spear), needs(SK:Spear), existing(SK:Spear) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Staff, 1/2, gives(+1pts to SK:Staff), taboo(SK:Staff), needs(SK:Staff), existing(SK:Staff) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Tonfa, 1/2, gives(+1pts to SK:Tonfa), taboo(SK:Tonfa), needs(SK:Tonfa), existing(SK:Tonfa) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Blowpipe, 1/2, gives(+1pts to SK:Blowpipe), taboo(SK:Blowpipe), needs(SK:Blowpipe), existing(SK:Blowpipe) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Throwing, 1/2, gives(+1pts to SK:Throwing), taboo(SK:Throwing), needs(SK:Throwing), existing(SK:Throwing) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Thrown Weapon (Dart), 1/2, gives(+1pts to SK:Thrown Weapon (Dart)), taboo(SK:Thrown Weapon (Dart)), needs(SK:Thrown Weapon (Dart)), existing(SK:Thrown Weapon (Dart)) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Thrown Weapon (Knife), 1/2, gives(+1pts to SK:Thrown Weapon (Knife)), taboo(SK:Thrown Weapon (Knife)), needs(SK:Thrown Weapon (Knife)), existing(SK:Thrown Weapon (Knife)) ) #codes(upto %points+4pts, downto %points+4pts),
			#newitem(AD:_Increase Thrown Weapon (Shuriken), 1/2, gives(+1pts to SK:Thrown Weapon (Shuriken)), taboo(SK:Thrown Weapon (Shuriken)), needs(SK:Thrown Weapon (Shuriken)), existing(SK:Thrown Weapon (Shuriken)) ) #codes(upto %points+4pts, downto %points+4pts)_
		)_
	)

Martial Artist-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(Archery skills + Enhanced Move + Perfect Balance = classic elven archer.),
	page(DF3:30),
	noresync(yes),
	sets(_
			ST:Perception=ST:Perception+2_
	),
	adds(_
			AD:Heroic Archer,
			SK:Bow=8pts,
			SK:Camouflage=2pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Shadowing=2pts,
			SK:Tracking=1pts,
			SK:Zen Archery=4pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Take Observation skill, or add [1] point to an existing one."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Observation #codes(upto 1pts),
			#newitem(AD:_Increase Observation, 1, gives(+1pts to "SK:Observation"), taboo("SK:Observation"), needs("SK:Observation"), existing(SK:Observation) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Martial Artist-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(Weapon Master and Trained by Master enables armed use of unarmed chi skills-clear them with your GM first.),
	page(DF3:31),
	noresync(yes),
	adds(_
			AD:Combat Reflexes,
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			PE:Weapon Bond (%Weapon%),
			SK:Fast-Draw=1pts_
	),
	select1(_
		text("Select to either Increase an existing weapon skill by [8] or add one of these new weapon skills."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(8),
		multitype(yes),
		list(_
			SK:Broadsword #codes(upto 8pts, downto 8pts),
			SK:Rapier #codes(upto 8pts, downto 8pts),
			SK:Saber #codes(upto 8pts, downto 8pts),
			#BuildSelectList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+8pts) ))_
		)_
	)

Martial Artist-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(Yes, this is a ninja.),
	page(DF3:31),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception+1,
			ST:Will=ST:Will-1,
			SK:Stealth = ("SK:Stealth::points"+3)pts _
	),
	adds(_
			AD:Flexibility,
			AD:Chi Mastery Perfect Balance,
			SK:Filch=1pts,
			SK:Forced Entry=1pts,
			SK:Lockpicking=2pts,
			SK:Pickpocket=1pts,
			SK:Traps=2pts_
	),
	needs(_
			SK:Stealth = 4pts _
	),
	select1(_
		text("Take Climbing skill, or Increase Climbing Skill to raise an existing skill."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Climbing #codes(upto 1pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to SK:Climbing), taboo("SK:Climbing"), needs("SK:Climbing"), existing(SK:Climbing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Martial Artist-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(Deathtouch-charged Karate punches and Iron Arm parries just might be worth the effort to get them.),
	page(DF3:31),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Alchemy=2pts,
			SK:Occultism=1pts,
			SK:Thaumatology=2pts_
	),
	x(#message( "Select 10 points in wizardly spells, which will be either (H) IQ[1] or (VH) IQ-1[1] with the +2 for Magery." )_
	),
	needs(10 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Scout, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Scout-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Skill synergy means that this is just an ST-oriented level-up lens.),
	page(DF3:31),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+3,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:High Pain Threshold_
	),
	select1(_
		text("Select 5 points from this list of skills."),
		tagwith(Barbarian(yes)),
		itemswanted(5),
		pointswanted(5),
		list(_
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Running #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts)_
		)_
	)

Scout-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(An archer, being out of melee, can sing and strum unmolested. Consider a bow-harp.),
	page(DF3:31),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Bardic Talent=1,
			AD:Charisma=1,
			AD:Musical Ability=1,
			SK:Musical Instrument=4pts,
			SK:Public Speaking=1pts,
			SK:Singing=2pts_
	),
	select1(_
		text("Please select 15 points from the following Bard-Song abilities, bardic skills, and/or spells from the Commuication and Empathy or Mind Control Colleges."),
		pointswanted(15),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Scout-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Ideal for fans of support roles: bank-ranker who can heal and shoot.),
	page(DF3:31),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy)=2,
			SK:Esoteric Medicine (Holy)=1pts,
			SK:Exorcism=1pts,
			SK:Meditation=1pts,
			SK:Religious Ritual=1pts,
			SK:Theology=1pts_
	),
	select1(_
		text("Choose one disadvantage."),
		pointswanted(-10),
		tagwith(Cleric(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Coreligionists)_
		)_
	),
	select2(_
		text("Please select 15 points in Holy abilities and/or clerical spells."),
		pointswanted(15),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Scout-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(A tracker who cant be tracked is potent. This is the scout's best caster lens.),
	page(DF3:32),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Power Investiture (Druidic)=2,
			SK:Esoteric Medicine (Druidic)=1pts,
			SK:Herb Lore=2pts,
			SK:Naturalist=1pts,
			SK:Religious Ritual (Druidic)=1pts,
			SK:Theology (Druidic)=1pts_
	),
	select1(_
		text("Select 14 points total from these Druidic abilities and/or druidic spells."),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		pointswanted(14),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Scout-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(True Faith + Turn Undead + Fire Arrows in the Back = Illumination.),
	page(DF3:32),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Holiness=1,
			SK:Exorcism=1pts,
			SK:Leadership=1pts,
			SK:Strategy=1pts,
			SK:Tactics=1pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =2pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(1), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(1), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of these disadvantages."),
		pointswanted(-10),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select3(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select4(_
		text("Select 26 points total in Holy abilities and/or additional skills."),
		pointswanted(26),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
		) _
	)

Scout-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(This lense emphasizes leadership and melee capabilities.),
	page(DF3:32),
	noresync(yes),
	sets(_
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Born War-Leader=2,
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			SK:Connoisseur (Weapons)=1pts,
			SK:Leadership=1pts,
			SK:Strategy=1pts,
			SK:Tactics=1pts_
	),
	select1(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(Scout(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	),
	select2(_
		text("Select an Armoury skill."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Armoury (Body Armor) #codes(upto 1pts),
			SK:Armoury (Melee Weapons) #codes(upto 1pts)_
		)_
	),
	select3(_
		text("Improve unarmed fighting skills. Select one option below."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Brawling #codes(upto 1pts),
			SK:Wrestling #codes(upto 1pts),
			#newitem(AD:_Increase Brawling, 1, gives(+1pts to "SK:Brawling"), taboo("SK:Brawling"), needs("SK:Brawling"), existing(SK:Brawling) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Wrestling, 1, gives(+1pts to "SK:Wrestling"), taboo("SK:Wrestling"), needs("SK:Wrestling"), existing(SK:Wrestling) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Scout-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Zen Archery for long shots, Power Blow combined with Heroic Archer's instant shots = devastating short range shot.),
	page(DF3:32),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Judo=1pts,
			SK:Karate=1pts,
			SK:Acrobatics=1pts,
			SK:Meditation=1pts,
			SK:Zen Archery=2pts_
	),
	x(#message("You may delete existing Wrestling or Brawling skills and put those points into improving Judo or Karate respectively.")),
	select1(_
		text("Take a point in Jumping, or select Increase Jumping Skill to add to an existing skill."),
		tagwith(MartialArtist(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Jumping #codes(upto 1pts),
			#newitem(AD:_Increase Jumping, 1, gives(+1pts to "SK:Jumping"), taboo("SK:Jumping"), needs("SK:Jumping"), existing(SK:Jumping) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select2(_
		text("Select 8 points in Chi Abilities and/or Chi Skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(8),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Scout-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(Arguably the ultimate DX-based ranged and melee combatant; take a one-handed scout weapon for fast bow-to-blade transitions.),
	page(DF3:32),
	noresync(yes),
	adds(_
			AD:Combat Reflexes,
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			%movementaliaslist%_
	),
	x(#ChoiceList(_
				name(movement),
				title(Movement Choices),
		text(Do you already know Jumping skill?),
				picksallowed(1),
				method(bynumber),
		list(_
				"Yes",
				"No"_
	),
	aliaslist(_
				"SK:Acrobatics=2pts",
				"SK:Acrobatics=1pts, SK:Jumping=1pts"_
			)_
		)_
	),
	select1(_
		text("Either put [8] points into a weapon you already know, or take a new sword skill at [8] points."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(8),
		multitype(yes),
		list(_
			SK:Rapier #codes(upto 8pts, downto 8pts),
			SK:Saber #codes(upto 8pts, downto 8pts),
			SK:Smallsword #codes(upto 8pts, downto 8pts),
			#BuildSelectList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+8pts) ))_
		)_
	)

Scout-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(Well-rounded indoor/outdoor information-gatherer with combat bite. Very useful for smaller parties.),
	page(DF3:32),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Basic Speed=ST:Basic Speed-.25,
			SK:Stealth = ("SK:Stealth::points"+3)pts _
	),
	needs(_
			SK:Stealth = 4pts _
	),
	adds(_
			AD:Flexibility,
			AD:High Manual Dexterity=1,
			SK:Acrobatics=1pts,
			SK:Escape=1pts,
			SK:Filch=1pts,
			SK:Forced Entry=1pts,
			SK:Lockpicking=2pts,
			SK:Pickpocket=1pts_
	)

Scout-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(Scout-wizards have just enough IQ to be viable. Spell-Archery is desirable, but requires Magery 3.),
	page(DF3:32),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Alchemy=2pts,
			SK:Occultism=1pts,
			SK:Thaumatology=1pts_
	),
	x(#message("Take an additional 11 points in any wizardly spells.")_
	),
	needs(11 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Swashbuckler, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Swashbuckler-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(High Pain Threshold is nice. Outdoors characters can go this way, tacticians should take Swashbuckler-Knight.),
	page(DF3:33),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+2_
	),
	adds(_
			AD:Extra Perception=1,
			AD:High Pain Threshold,
			AD:Outdoorsman=1_
	),
	select1(_
		text("Select five of these skills at [1] point each."),
		tagwith(Barbarian(yes)),
		itemswanted(5),
		pointswanted(5),
		list(_
			SK:Camouflage #codes(upto 1pts),
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts),
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Tracking #codes(upto 1pts)_
		)_
	)

Swashbuckler-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(A fitting mix, but low-IQ caster are tricky to play. Select one of Bard-Song, bardic skills, or one college of Magic.),
	page(DF3:33),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Bardic Talent=1,
			AD:Charisma=1,
			AD:Musical Ability=1,
			SK:Musical Instrument=4pts,
			SK:Public Speaking=2pts,
			SK:Singing=1pts_
	),
	select1(_
		text("Please select 15 points from the following Bard-Song abilities, bardic skills, and/or spells from the Commuication and Empathy or Mind Control Colleges."),
		pointswanted(15),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Swashbuckler-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Warrior-clerics can buff themselves up.),
	page(DF3:33),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy)=2,
			SK:Esoteric Medicine (Holy)=2pts,
			SK:Exorcism=2pts,
			SK:Meditation=2pts,
			SK:Religious Ritual=2pts,
			SK:Theology=2pts_
	),
	select1(_
		text("Choose one disadvantage."),
		pointswanted(-10),
		tagwith(Cleric(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Coreligionists)_
		)_
	),
	select2(_
		text("Please select 10 points in Holy abilities and/or clerical spells."),
		pointswanted(10),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Swashbuckler-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(This is a difficult combination to play for player and character alike.),
	page(DF3:33),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:WIll=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Power Investiture (Druidic)=2,
			SK:Esoteric Medicine (Druidic)=2pts,
			SK:Herb Lore=2pts,
			SK:Religious Ritual (Druidic)=2pts,
			SK:Theology (Druidic)=2pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Druid(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Choose a Survival specialty."),
		tagwith(Druid(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select3(_
		text("Select 11 points total in Druidic abilities and/or druidic spells."),
		pointswanted(11),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Swashbuckler-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(The swashbuckler's effortless Rapid Strikes double the oomph of many holy gifts.),
	page(DF3:33),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Holiness=1,
			SK:Exorcism=1pts,
			SK:Leadership=1pts,
			SK:Strategy=2pts,
			SK:Tactics=2pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =2pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(1), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(1), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of these disadvantages."),
		pointswanted(-10),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select3(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select4(_
		text("Select 24 points total in Holy abilities and/or additional skills."),
		pointswanted(24),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#BuildCharItemList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
		) _
	)

Swashbuckler-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Adds military skills to a civilian swordsman.),
	page(DF3:34),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1_
	),
	adds(_
			AD:Born War-Leader=2,
			AD:High Pain Threshold,
			SK:Armoury (Melee Weapons)=4pts,
			SK:Connoisseur (Weapons)=4pts,
			SK:Leadership=1pts,
			SK:Strategy=1pts,
			SK:Tactics=1pts_
	),
	select1(_
		text("Select one of these advantages."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(5),
		list(_
			AD:Enhanced Block,
			AD:Fit,
			AD:Rapid Healing,
			AD:Striking ST #codes(upto 1, downto 1)_
		)_
	),
	select2(_
		text("Spend [4] points to learn one of these weapon skills, or select Increase Weapon Skill to improve a skill you already have."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(4),
		multitype(yes),
		list(_
			SK:Axe/Mace #codes(upto 4pts, downto 4pts),
			SK:Bow #codes(upto 4pts, downto 4pts),
			SK:Polearm #codes(upto 4pts, downto 4pts),
			SK:Spear #codes(upto 4pts, downto 4pts),
			SK:Two-Handed Sword #codes(upto 4pts, downto 4pts),
			#BuildSelectList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	)

Swashbuckler-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(_
				in {SK:Brawling} with {taboo(TE:Swashbuckler-Martial Artist (Dungeon Fantasy))},
				in {SK:Boxing} with {taboo(TE:Swashbuckler-Martial Artist (Dungeon Fantasy))},
				in {SK:Wrestling} with {taboo(TE:Swashbuckler-Martial Artist (Dungeon Fantasy))}_
			),
	taboo(SK:Brawling, SK:Boxing, SK:Wrestling),
	x(#Message("This template sets the Brawling & Wrestling skills to 0 points, they have been superseded with Karate & Judo. You will need to manually remove Brawling & Wrestling yourself.")),
	description(Swing Damage + Weapon Master + Power Blow = Devastation.),
	page(DF3:33),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Karate=4pts,
			SK:Judo=4pts_
	),
	select1(_
		text("Select 11 points in Chi Abilities and/or Chi Skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(11),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Swashbuckler-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(A contender for being the ultimate DX-based melee and ranged combatant.),
	page(DF3:34),
	noresync(yes),
	sets(_
			ST:Perception=ST:Perception+2_
	),
	adds(_
			AD:Heroic Archer,
			SK:Bow=12pts,
			SK:Camouflage=1pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Navigation (Land)=2pts,
			SK:Observation=1pts,
			SK:Tracking=1pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Take Climbing skill, or Increase Climbing Skill to raise an existing skill."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Climbing #codes(upto 1pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to "SK:Climbing"), taboo("SK:Climbing"), needs("SK:Climbing"), existing (SK:Climbing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Swashbuckler-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(The swashbuckler-thief is proof that idle hands are the devil's workshop.),
	page(DF3:34),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Perception=ST:Perception+1,
			ST:Will=ST:Will-1,
			SK:Stealth = ("SK:Stealth::points"+3)pts _
	),
	adds(_
			AD:Flexibility,
			AD:High Manual Dexterity=1,
			SK:Filch=1pts,
			SK:Forced Entry=1pts,
			SK:Lockpicking=4pts,
			SK:Pickpocket=1pts,
			SK:Traps=4pts_
	),
	needs(_
			SK:Stealth = 4pts _
	),
	select1(_
		text("Select one advantage. If you choose to take Additional Extra Perception or Additional High Manual Dexterity you will need to delete them and adjust the appropriate advantages later."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(5),
		list(_
			AD:Extra Basic Move #codes(upto 1, downto 1),
			AD:Ambidexterity,
			#newitem(AD:_Increase Extra Perception, 5, cat(_General), gives(+1 to ST:Perception), taboo(AD:Extra Perception) ),
			#newitem(AD:_Increase High Manual Dexterity, 5, cat(_General), gives(+1 to AD:High Manual Dexterity), taboo(AD:High Manual Dexterity) )_
		)_
	),
	select2(_
		text("Take Climbing skill, or Increase Climbing Skill to raise an existing skill."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Climbing #codes(upto 1pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to "SK:Climbing"), taboo("SK:Climbing"), needs("SK:Climbing"), existing(SK:Climbing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Swashbuckler-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(Illusions seem more fitting for this flamboyant dabbler.),
	page(DF3:34),
	noresync(yes),
	sets(_
			ST:IQ=ST:IQ+1,
			ST:Will=ST:Will-1,
			ST:Perception=ST:Perception-1_
	),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Alchemy=2pts,
			SK:Occultism=1pts,
			SK:Thaumatology=2pts_
	),
	x(#message( "Select 10 points in wizardly spells, which will be either (H) IQ[1] or (VH) IQ-1[1] with the +2 for Magery." )_
	),
	needs(10 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Thief, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Thief-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Urban thieves and primitive tribesmen are near-opposites. Still, this might suit a thief back from the gulag.),
	page(DF3:34),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:High Pain Threshold,
			AD:Outdoorsman=1_
	),
	select1(_
		text("Select one of these advantages."),
		tagwith(Barbarian(yes)),
		itemswanted(1),
		pointswanted(5),
		list(_
			AD:Absolute Direction,
			AD:Fit,
			AD:Resistant to Poison #codes(upto 1, downto 1),
			AD:Striking ST #codes(upto 1, downto 1)_
		)_
	),
	select2(_
		text("Select 10 skills from this list."),
		tagwith(Barbarian(yes)),
		itemswanted(10),
		pointswanted(10),
		list(_
			SK:Camouflage #codes(upto 1pts),
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Running #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts),
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Tracking #codes(upto 1pts)_
		)_
	)

Thief-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Many dungeon-raiding bards were once common rogues - a viable career path for gamers reluctant to play bards as starting characters.),
	page(DF3:35),
	noresync(yes),
	adds(_
			AD:Bardic Talent=2,
			AD:Charisma=1,
			AD:Musical Ability=1,
			SK:Musical Instrument=2pts,
			SK:Public Speaking=1pts,
			SK:Singing=4pts_
	),
	select1(_
		text("Select 17 points from the list of Bardic abilities, bardic skills, and/or Communication and Empathy and/or Mind Control Colleges."),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		pointswanted(17),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Thief-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(A thief's IQ makes any caster viable, although this one might appear odd to some players.),
	page(DF3:35),
	noresync(yes),
	sets(_
			ST:Will=ST:Will+1_
	),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy)=2,
			SK:Esoteric Medicine (Holy)=1pts,
			SK:Exorcism=1pts,
			SK:Meditation=1pts,
			SK:Religious Ritual=1pts,
			SK:Theology=1pts_
	),
	select1(_
		text("Select one of these disadvantages."),
		tagwith(Cleric(yes)),
		itemswanted(1),
		pointswanted(-10),
		list(_
			DI:Sense of Duty (Coreligionists),
			DI:Vow (no edged weapons)_
		)_
	),
	select2(_
		text("Please select 25 points in Holy abilities and/or clerical spells."),
		pointswanted(25),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Thief-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Magically training animals to steal is just fun. You can do other things, but that's the cool part.),
	page(DF3:35),
	noresync(yes),
	adds(_
			AD:Power Investiture (Druidic)=2,
			SK:Camouflage=1pts,
			SK:Esoteric Medicine (Druidic)=1pts,
			SK:Herb Lore=1pts,
			SK:Religious Ritual (Druidic)=1pts,
			SK:Theology (Druidic)=1pts_
	),
	select1(_
		text("Please select 25 points in total of Druidic abilities and/or druidic spells."),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		pointswanted(25),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Thief-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Cunning holy warriors are a fun change from sword-swingers. Higher Purpose aids stealth, Traps, etc., when trapping and backstabbing Evil.),
	page(DF3:35),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Holiness=1,
			SK:Exorcism=1pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =1pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(1), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(1), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of these disadvantages."),
		pointswanted(-10),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select3(_
		text(Please add 6 points to your primary Combat skill:),
		pointswanted(6),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+6pts, downto %points+6pts) ))_
		)_
	),
	select4(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select5(_
		text("Select 24 points total in Holy abilities and/or additional skills."),
		pointswanted(24),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
		) _
	)

Thief-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(Any thief could benefit from more combat ability. This is the best warrior lens for thuggish thieves.),
	page(DF3:35),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Combat Reflexes,
			AD:High Pain Threshold_
	),
	select1(_
		text(Please add 6 points to your primary Combat skill:),
		pointswanted(6),
		tagwith(Knight(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+6pts, downto %points+6pts) ))_
		)_
	),
	select2(_
		text("Select four of these skills."),
		tagwith(Knight(yes)),
		itemswanted(4),
		pointswanted(4),
		list(_
			SK:Armoury (Melee Weapons) #codes(upto 1pts),
			SK:Leadership #codes(upto 1pts),
			SK:Strategy (Land) #codes(upto 1pts),
			SK:Strategy (Naval) #codes(upto 1pts),
			SK:Tactics #codes(upto 1pts),
			#newitem(_
				SK:Connoisseur (Weapons), IQ/A, default(IQ - 5), page(B185), cat(_General, Arts/Entertainment, Knowledge, Social)_
				) #codes(upto 1pts)_
		)_
	)

Thief-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(_
				in {SK:Brawling} with {taboo(TE:-Martial Artist (Dungeon Fantasy))}_
			),
	taboo(SK:Brawling),
	x(#Message("This template sets the Brawling skill to 0 points, it has been superseded with Karate. You will need to manually remove Brawling yourself.")),
	description(Many chi skills would aid a thief-especially Light Walk. Also, you're a ninja. How cool is that?),
	page(DF3:35),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Judo=2pts,
			SK:Jumping=1pts,
			SK:Karate=2pts_
	),
	select1(_
		text("Select 11 points in Chi Abilities and/or Chi Skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(11),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Thief-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(Thieves who prefer to avoid melee often take up archery. The backstabbing rules do work with bowshots.),
	page(DF3:35),
	noresync(yes),
	sets(_
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Heroic Archer=1,
			AD:Outdoorsman=1,
			SK:Camouflage=1pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Navigation (Land)=1pts,
			SK:Tracking=1pts_
	),
	select1(_
		text("Choose a Survival specialty."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Take Cartography skill, or add Increase Cartography Skill to add [1] point to an existing one."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Cartography #codes(upto 1pts),
			#newitem(AD:_Increase Cartography, 1, gives(+1pts to "SK:Cartography"), taboo("SK:Cartography"), needs("SK:Cartography"), existing(SK:Cartography) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select3(_
		text("Take Observation skill, or add Increase Observation Skill to add [1] point to an existing one."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Observation #codes(upto 1pts),
			#newitem(AD:_Increase Observation, 1, gives(+1pts to "SK:Observation"), taboo("SK:Observation"), needs("SK:Observation"), existing(SK:Observation) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select4(_
		text("Select either Bow for [8] points, or Increase Bow Skill [7] and spend an additional point improving one of the other Increase Skills. You will have to delete the Increase Skills and improve the relevant skill by [1] or [7] points. If you have already taken Increase Cartography Skill do not do so again, select a different skill."),
		tagwith(Scout(yes)),
		itemswanted(upto 2),
		pointswanted(8),
		multitype(yes),
		list(_
			SK:Bow #codes(upto 8pts, downto 8pts),
			#newitem(AD:_Increase Camouflage, 1, gives(+1pts to SK:Camouflage), taboo(SK: Camouflage), needs(SK:Camouflage), existing(SK:Camouflage) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Cartography, 1, gives(+1pts to SK:Cartography), taboo(SK:Cartography), needs(SK:Cartography), existing(SK:Cartography) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Fast-Draw Skill (Arrow), 1, gives(+1pts to "SK:Fast-Draw (Arrow)" ), taboo("SK:Fast-Draw (Arrow)"), needs("SK:Fast-Draw (Arrow)"), existing(SK:Fast-Draw (Arrow)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Navigation Skill (Land), 1, gives(+1pts to "SK:Navigation (Land)" ), taboo("SK:Navigation (Land)"), needs("SK:Navigation (Land)" ), existing(SK:Navigation(Land)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Arctic), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Arctic)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Desert), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Desert)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Island/Beach), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Island/Beach)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Jungle), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Jungle)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Mountain), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Mountain)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Plains), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Plains)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Swampland), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Swampland)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Survival Skill (Woodlands), 1, gives(+1pts to SK:Survival), taboo("SK:Survival"), needs(SK:Survival), existing(SK:Survival (Woodlands)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Tracking, 1, gives(+1pts to SK:Tracking), taboo("SK:Tracking"), needs(SK:Tracking), existing(SK:Tracking) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Bow Skill, 7, gives(+7pts to SK:Bow), taboo("SK:Bow"), needs(SK:Bow), existing(SK:Bow) ) #codes(upto %points+7pts, downto %points+7pts)_
		)_
	)

Thief-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(This archetype is widespread in Dungeon Fantasy - arguably more so than the straight-up thief.),
	page(DF3:36),
	noresync(yes),
	sets(_
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Combat Reflexes,
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			PE:Weapon Bond (%Weapon%),
			SK:Jumping=1pts_
	),
	select1(_
		text("You may take Increase Sword Skill for [3] points in any sword skill owned by the thief that currently has [1] point invested in it. Or Increase Primary Sword Skill for [2] points in a sword skill that currently has [2] points invested in it; in this case you may also take [1] point in any of the secondary weapon skills listed."),
		tagwith(Swashbuckler(yes)),
		itemswanted(atleast 1),
		pointswanted(3),
		multitype(yes),
		list(_
			SK:Shield (Buckler) #codes(upto 1pts),
			SK:Cloak #codes(upto 1pts),
			SK:Main-Gauche #codes(upto 1pts),
			#newitem(AD:_Increase Rapier, 1/2, gives(+1pts to SK:Rapier), taboo(SK:Rapier), needs(SK:Rapier), existing(SK:Rapier) ) #codes(upto %points+3pts, downto %points+2pts),
			#newitem(AD:_Increase Saber, 1/2, gives(+1pts to SK:Saber), taboo(SK:Saber), needs(SK:Saber), existing(SK:Saber) ) #codes(upto %points+3pts, downto %points+2pts),
			#newitem(AD:_Increase Shortsword, 1/2, gives(+1pts to SK:Shortsword), taboo(SK:Shortsword), needs(SK:Shortsword), existing(SK:Shortsword) ) #codes(upto %points+3pts, downto %points+2pts),
			#newitem(AD:_Increase Smallsword, 1/2, gives(+1pts to SK:Smallsword), taboo(SK:Smallsword), needs(SK:Smallsword), existing(SK:Smallsword) ) #codes(upto %points+3pts, downto %points+2pts)_
		)_
	)

Thief-Wizard (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:IQ" with "noresync(yes), maxscore(25)", in "ST:Fatigue Points" with "maxscore(@max(ST:HT + 13, ST:HT * 1.3))"),
	description(The thief's best caster lense! A few Movement spells along with built-in magical loot detection give a massive boost),
	page(DF3:36),
	noresync(yes),
	adds(_
			AD:Magery 0,
			AD:Magery=2,
			SK:Alchemy=1pts,
			SK:Occultism=1pts,
			SK:Thaumatology=1pts_
	),
	x(#message("Take an additional 22 points in any wizardly spells of any kind.")_
	),
	needs(22 Spells=1pts)

<Character Templates - Dungeon Fantasy - Mixed Professions - Wizard, Character Templates - Dungeon Fantasy - Mixed Professions, Character Templates - Dungeon Fantasy, Character Templates>
Wizard-Barbarian (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:ST" with "noresync(yes), maxscore(25)", in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(This lens is for wilderness campaigns where everybody needs outdoors skills. Elsewhere, other wizard-warrior combinations are preferable.),
	page(DF3:36),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+2,
			ST:HT=ST:HT+1,
			ST:Perception=ST:Perception+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:High Pain Threshold_
	),
	select1(_
		text("Select 10 skills from this list."),
		tagwith(Barbarian(yes)),
		itemswanted(10),
		pointswanted(10),
		list(_
			SK:Camouflage #codes(upto 1pts),
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Navigation (Land) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Naturalist #codes(upto 1pts),
			SK:Swimming #codes(upto 1pts),
			SK:Running #codes(upto 1pts),
			SK:Fishing #codes(upto 1pts),
			SK:Survival #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Tracking #codes(upto 1pts)_
		)_
	)

Wizard-Bard (Dungeon Fantasy), displaycost(+50), cost(0),
	description(The wizard's gifts make him an excellent bard - and Bard-Song adds abilities that work when he's out of energy.),
	page(DF3:36),
	noresync(yes),
	adds(_
			AD:Bard-Song Talent=2,
			AD:Charisma=1,
			AD:Musical Ability=1,
			AD:Voice,
			SK:Musical Instrument=1pts,
			SK:Public Speaking=1pts,
			SK:Singing=1pts_
	),
	select1(_
		text("Select 17 points from the list of Bardic abilities, bardic skills, and/or Communication and Empathy and/or Mind Control Colleges."),
		tagwith(Bard(yes)),
		itemswanted(atleast 1),
		pointswanted(17),
		multitype(yes),
		list(_
			#list(Bard Abilities),
			#list(Bard Spells),
			#list(Bard Skills)_
		)_
	)

Wizard-Cleric (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Dual spell lists and partial independence from mana are very tempting.),
	page(DF3:36),
	noresync(yes),
	adds(_
			AD:Clerical Investment,
			AD:Power Investiture (Holy)=2,
			SK:Diagnosis=1pts,
			SK:Esoteric Medicine (Holy)=1pts,
			SK:Exorcism=1pts,
			SK:Religious Ritual=1pts,
			SK:Theology=1pts,
			SK:Surgery=1pts_
	),
	select1(_
		text("Choose one disadvantage."),
		pointswanted(-10),
		tagwith(Cleric(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Coreligionists),
			DI:Vow (No edged weapons) _
		)_
	),
	select2(_
		text("Select 29 points in Clerical Abilities and/or Clerical spells."),
		tagwith(Cleric(yes)),
		itemswanted(atleast 1),
		pointswanted(29),
		multitype(yes),
		list(_
			#list(Holy Abilities),
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	),
taboo(_
			DI:Social Stigma (Exommunicated)_
	)

Wizard-Druid (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Two spell lists, Excommunicated is irrelevant, zombie pets are a no-go. Two out of three!),
	page(DF3:36),
	noresync(yes),
	adds(_
			AD:Power Investiture (Druidic)=2,
			SK:Esoteric Medicine (Druidic)=1pts,
			SK:Naturalist=1pts,
			SK:Pharmacy (Herbal)=1pts,
			SK:Religious Ritual (Druidic)=1pts,
			SK:Theology (Druidic)=1pts,
			SK:Veterinary=1pts_
	),
	select1(_
		text("Select a Hidden Lore specialty."),
		tagwith(Druid(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Hidden Lore (Elemental Lore) #codes(upto 1pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 1pts),
			SK:Hidden Lore (Nature Spirit Lore) #codes(upto 1pts)_
		)_
	),
	select2(_
		text("Select three of the following skills."),
		tagwith(Druid(yes)),
		itemswanted(3),
		pointswanted(3),
		list(_
			SK:Animal Handling #codes(upto 1pts),
			SK:Animal Handling (Big Cats) #codes(upto 1pts),
			SK:Animal Handling (Dogs) #codes(upto 1pts),
			SK:Animal Handling (Equines) #codes(upto 1pts),
			SK:Animal Handling (Raptors) #codes(upto 1pts),
			SK:Disguise (Animals) #codes(upto 1pts),
			SK:Weather Sense #codes(upto 1pts),
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),
			SK:Mimicry (Bird Calls) #codes(upto 1pts),
			SK:Survival (Arctic) #codes(upto 1pts),
			SK:Survival (Desert) #codes(upto 1pts),
			SK:Survival (Island/Beach) #codes(upto 1pts),
			SK:Survival (Jungle) #codes(upto 1pts),
			SK:Survival (Mountain) #codes(upto 1pts),
			SK:Survival (Plains) #codes(upto 1pts),
			SK:Survival (Swampland) #codes(upto 1pts),
			SK:Survival (Woodlands) #codes(upto 1pts),
			SK:Survival #codes(upto 1pts)_
		)_
	),
	select3(_
		text("Select 20 points total from these Druidic abilities and/or druidic spells."),
		tagwith(Druid(yes)),
		itemswanted(atleast 1),
		pointswanted(20),
		multitype(yes),
		list(_
			#list(Druid Abilities),
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Wizard-Holy Warrior (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Higher Purpose works on spell casting against applicable foes.),
	page(DF3:37),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Holiness=1,
			SK:Exorcism=1pts_
	),
	creates(_
		{PE:Shtick (Foes slain personally can't rise as undead), 1, page(B100)},
		{SK:Physiology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Physiology")) } =1pts,
		{SK:Psychology ([Primary Monster Type]), IQ/H, HolyWarrior(yes), default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Primary Monster Type]", "monster", "Psychology")) } =1pts_
	),
	select1(_
		text("Select a Higher Purpose."),
		pointswanted(5),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(3), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(3), page(B59), cat(Supernatural, Mental) )_
		)_
	),
	select2(_
		text("Select one of these disadvantages."),
		pointswanted(-10),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			DI:Honesty,
			DI:Sense of Duty (Good entities),
			DI:Vow (Own no more than horse can carry)_
		)_
	),
	select3(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	),
	select4(_
		text("Select a form of Hidden Lore."),
		pointswanted(1),
		tagwith(HolyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts)_
		)_
	),
	select5(_
		text("Select 26 more points in Holy Abilities and/or any of the skills above."),
		tagwith(HolyWarrior(yes)),
		itemswanted(atleast 1),
		pointswanted(26),
		multitype(yes),
		list(_
			#BuildSelectList(Skills where HolyWarrior is "yes", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#BuildCharItemList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+1pts) )),
			#list(Holy Abilities),
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 1pts),
			#newitem(AD:_Increase Exorcism, 1/2, upto(3), gives(+1pts to "SK:Exorcism"), taboo("SK:Exorcism"), needs("SK:Exorcism"), existing(SK:Exorcism) ) #codes(upto %points+3pts, downto %points+1pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
		)_
	),
	taboo(DI:Social Stigma (Excommunicated))

Wizard-Knight (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Hit Points" with "noresync(yes), maxscore(ST:ST * 1.5)"),
	description(This is the best option for wizard-warriors who wish to emphasize physical power and toughness.),
	page(DF3:37),
	noresync(yes),
	sets(_
			ST:ST=ST:ST+1,
			ST:HT=ST:HT+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			SK:Brawling=1pts,
			SK:Connoisseur (Weapons)=1pts,
			SK:Leadership=1pts,
			SK:Tactics=1pts_
	),
	select1(_
		text(Please add 4 points to your primary Combat skill:),
		pointswanted(4),
		tagwith(Knight(yes)),
		itemswanted(1),
		multitype(yes),
		list(_
			#BuildCharItemList(Skills where cat includes "Combat/Weapons", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+4pts, downto %points+4pts) ))_
		)_
	),
	select2(_
		text("Select an Armoury specialty."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(1),
		list(_
			SK:Armoury (Body Armor) #codes(upto 1pts),
			SK:Armoury (Melee Weapons) #codes(upto 1pts)_
		)_
	),
	select3(_
		text("Take a point in Strategy, or select Increase Strategy Skill to add to an existing Strategy skill. You will have to delete the Increase Strategy Skill and up Strategy later."),
		tagwith(Knight(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Strategy (Land) #codes(upto 1pts),
			SK:Strategy (Naval) #codes(upto 1pts),
			#newitem(AD:_Increase Land Strategy, 1, gives(+1pts to "SK:Strategy (Land)"), taboo("SK:Strategy (Land)"), needs("SK:Strategy (Land)"), existing(SK:Strategy (Land)) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Naval Strategy, 1, gives(+1pts to "SK:Strategy (Naval)"), taboo("SK:Strategy (Naval)"), needs("SK:Strategy (Naval)"), existing(SK:Strategy (Naval)) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Wizard-Martial Artist (Dungeon Fantasy), displaycost(+50), cost(0),
	description(Wizard-martial artist is an arduous path, but it isn't with out some benefits.),
	page(DF3:37),
	noresync(yes),
	adds(_
			AD:Chi Talent=1,
			AD:Trained by a Master,
			DI:Disciplines of Faith (Chi Rituals),
			SK:Acrobatics=1pts,
			SK:Jumping=1pts,
			%unarmedcombattypealiaslist%_
	),
	x(_
			#ChoiceList(_
				name(unarmedcombattype),
				title(Unarmed Combat Specialty),
				text(Choose your unarmed combat skills),
				picksallowed(1),
				method(bynumber),
		list(_
				"Grappler (Judo better than Karate)",
				"Striker (Karate better than Judo)"_
			),
	aliaslist(_
				"SK:Judo=2pts, SK:Karate=1pts",
				"SK:Judo=1pts, SK:Karate=2pts"_
			)_
		)_
	),
	select1(_
		text("Select 10 points in Chi abilities and/or chi skills."),
		tagwith(MartialArtist(yes)),
		itemswanted(atleast 1),
		pointswanted(10),
		multitype(yes),
		list(_
			#list(Martial Artist Abilities),
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts)))_
		)_
	)

Wizard-Scout (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Move" with "noresync(yes), maxscore(ST:Basic Speed + 6)"),
	description(This is the option of choice for wizard-warriors who prefer ranged combat. Spell-Archery is a must.),
	page(DF3:37),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Heroic Archer,
			SK:Bow=8pts,
			SK:Camouflage=1pts,
			SK:Fast-Draw (Arrow)=1pts,
			SK:Navigation (Land)=1pts,
			SK:Observation=1pts,
			SK:Shadowing=1pts_
	),
	select1(_
		text("Add Cartography if you don't already have it, otherwise select Increase Cartography Skill and add it to the skill later."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Cartography #codes(upto 1pts),
			#newitem(AD:_Increase Cartography, 1, gives(+1pts to "SK:Cartography"), taboo("SK:Cartography"), needs("SK:Cartography"), existing(SK:Cartography) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select2(_
		text("Add Stealth if you don't already have it, otherwise select Increase Stealth Skill and add it to the skill later."),
		tagwith(Scout(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Stealth #codes(upto 1pts),
			#newitem(AD:_Increase Stealth, 1, gives(+1pts to "SK:Stealth"), taboo("SK:Stealth"), needs("SK:Stealth"), existing(SK:Stealth) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

Wizard-Swashbuckler (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:Basic Speed" with "noresync(yes), maxscore(((ST:DX + ST:HT) / 4) + 4)"),
	description(The wizard-swashbuckler defends well, addressing the melee mage's biggest weakness.),
	page(DF3:37),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+1,
			ST:Basic Speed=ST:Basic Speed-.25_
	),
	adds(_
			AD:Enhanced Parry (%Melee Weapon%)=1,
			AD:Weapon Master=1,
			SK:Acrobatics=2pts_
	),
	select1(_
		text("Either put [8] points into a weapon you already know, or take a new sword skill at [8] points."),
		tagwith(Swashbuckler(yes)),
		itemswanted(1),
		pointswanted(8),
		multitype(yes),
		list(_
			SK:Broadsword #codes(upto 8pts, downto 8pts),
			SK:Rapier #codes(upto 8pts, downto 8pts),
			SK:Saber #codes(upto 8pts, downto 8pts),
			SK:Shortsword #codes(upto 8pts, downto 8pts),
			#BuildSelectList(Skills where cat includes "Combat/Weapon", template(#newitem(AD:_Increase %ListItem%, existing(SK:%ListItem%)) #codes(upto %points+8pts, downto %points+8pts) ))_
		)_
	)

Wizard-Thief (Dungeon Fantasy), displaycost(+50), cost(0),
	replacetags(in "ST:DX" with "noresync(yes), maxscore(25)"),
	description(Spells like Invisibility and Mage-Stealth so effectively compensate for physical shortcomings that the wizard-thief is the mundane thief's biggest rival.),
	page(DF3:37),
	noresync(yes),
	sets(_
			ST:DX=ST:DX+2,
			ST:Basic Speed=ST:Basic Speed-.5_
	),
	adds(_
			AD:Flexibility,
			AD:High Manual Dexterity=1,
			SK:Filch=1pts,
			SK:Forced Entry=1pts,
			SK:Lockpicking=1pts,
			SK:Pickpocket=1pts,
			SK:Traps=1pts_
	),
	select1(_
		text("Add a Climbing skill, or raise an existing Climbing skill by [1] point."),
		tagwith(Thief(yes)),
		itemswanted(1),
		pointswanted(1),
		multitype(yes),
		list(_
			SK:Climbing #codes(upto 1pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to "SK:Climbing"), taboo("SK:Climbing"), needs("SK:Climbing"), existing(SK:Climbing) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	),
	select2(_
		text("Either [4] points in Stealth, or [3] in an existing Stealth skill and one additional skill."),
		tagwith(Thief(yes)),
		itemswanted(atleast 1),
		pointswanted(4),
		multitype(yes),
		list(_
			SK:Stealth #codes(upto 4pts, downto 4pts),
			#newitem(AD:_Increase Stealth, 3, gives(+3pts to SK:Stealth), taboo("SK:Stealth"), needs("SK:Stealth"), existing(SK:Stealth) ) #codes(upto %points+3pts, downto %points+3pts),
			#newitem(AD:_Increase Climbing, 1, gives(+1pts to "SK:Climbing"), taboo("SK:Climbing"), needs("SK:Climbing"), existing(SK:Climbing) ), #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Filch, 1, gives(+1pts to SK:Filch), taboo("SK:Filch"), needs("SK:Filch"), existing(SK:Filch) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Forced Entry, 1, gives(+1pts to SK:Forced Entry), taboo("SK:Forced Entry"), needs("SK:Forced Entry"), existing(SK:Forced Entry) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Lockpicking, 1, gives(+1pts to SK:Lockpicking), taboo("SK:Lockpicking"), needs("SK:Lockpicking"), existing(SK:Lockpicking) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Pickpocket, 1, gives(+1pts to SK:Pickpocket), taboo("SK:Pickpocket"), needs("SK:Pickpocket"), existing(SK:Pickpocket) ) #codes(upto %points+1pts, downto %points+1pts),
			#newitem(AD:_Increase Traps, 1, gives(+1pts to SK:Traps), taboo("SK:Traps"), needs("SK:Traps"), existing(SK:Traps) ) #codes(upto %points+1pts, downto %points+1pts)_
		)_
	)

<Character Templates, Character Templates - Dungeon Fantasy, Character Templates - Dungeon Fantasy - Adventurers>
Evil Cleric (Dungeon Fantasy), displaycost(250), cost(0),
	description(You're the mortal representative of the Powers of Evil. You might not be the physical foe of Good that is the Unholy Warrior (p.7), but you're no wallowing hedonist...),
	page(DF3:23),
	noresync(yes),
	sets(_
		{ST:ST}=12,
		{ST:DX}=12,
		{ST:IQ}=14,
		{ST:HT}=12,
		{ST:Hit Points}=ST:ST,
		{ST:Will}=ST:IQ,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=6.0,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	needs(20 Spells), ident(Unholy),
	adds(_
		{AD:Clerical Investment},
		{AD:Power Investiture (Unholy)}=3,
		{DI:Social Stigma (Excommunicated)},
		{SK:Exorcism}=4pts,
		{SK:Interrogation}=2pts,
		{SK:Intimidation}=2pts,
		{SK:Occultism}=1pts,
		{SK:Public Speaking}=1pts,
		{SK:Poisons}=4pts,
		{SK:Teaching}=1pts,
		{SK:Theology}=1pts,
		{SK:Religious Ritual}=1pts,
		{SK:Meditation}=1pts_
	),
	select1(#List(Languages)),
	select2(_
		text("Please select 25 points in Unholy abilities or spells."),
		pointswanted(upto 25),
		tagwith(EvilCleric(yes)),
		itemswanted(atleast 1),
		multitype(yes),
		list(_
			#list(Evil Cleric Abilities),
			#grouplist(GR:AllSpellsUnholy, append( #codes(upto 1pts)))_
		)_
	),
	select3(_
		text("Please select a further 20 points in advantages."),
		pointswanted(upto 20),
		tagwith(EvilCleric(yes)),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Advantages where EvilCleric is "Yes", template(#newitem(AD:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(AD:%ListItem%)))),
			#list(GMAdvantages),
			#list(Evil Cleric Abilities),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Will #codes(upto 4, downto 1),
			AD:Extra Fatigue Points #codes(upto 6, downto 1),
			AD:Fearlessness,
			AD:Unfazeable,
			AD:Language,
			AD:Language (Spoken),
			AD:Language (Written),
			AD:Luck,
			AD:Mind Shield,
			#newitem(AD:Power Investiture 4-5 (Unholy), 10/20, existing(AD:Power Investiture (Unholy))) #codes(upto 5, downto 4),
			AD:Resistant to Disease #codes(upto 2, downto 1),
			AD:Resistant to Evil Supernatural Powers #codes(upto 2, downto 1),
			AD:Resistant to Poison #codes(upto 1, downto 1),
			AD:Signature Gear_
		)_
	),
	select4(_
		text("Please select -15 points from the following disadvantages."),
		pointswanted( -15),
		tagwith(EvilCleric(yes)),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Bad Temper,
			DI:Gluttony,
			DI:Greed,
			DI:Jealousy,
			DI:Laziness,
			DI:Lecherousness,
			DI:Selfish_
		)_
	),
	select5(_
		text("Please select a further -25 points from the following disadvantages."),
		pointswanted( -25),
		tagwith(EvilCleric(yes)),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where EvilCleric is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Bad Temper,
			DI:Bloodlust,
			DI:Callous,
			DI:Disciplines of Faith (Mysticism),
			DI:Disciplines of Faith (Ritualism),
			DI:Fanaticism,
			DI:Gluttony,
			DI:Greed,
			DI:Jealousy,
			DI:Laziness,
			DI:Lecherousness,
			DI:Paranoia,
			DI:Selfish,
			DI:Stubbornness,
			DI:Weirdness Magnet,
			#newitem(_
				DI:Intolerance (Good Religions), -5, page(B140), cat(Mundane, Mental)_
	),
			#newitem(_
				DI:Intolerance (All other Religions), -10, page(B140), cat(Mundance, Mental)_
			)_
		)_
	),
	select6(_
		text("Please select a ranged weapon package"),
		pointswanted(atleast 4),
		tagwith(EvilCleric(yes)),
		itemswanted(1),
		list(_
			SK:Innate Attack (Beam) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Breath) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Gaze) #codes(upto 4pts, downto 4pts),
			SK:Innate Attack (Projectile) #codes(upto 4pts, downto 4pts),
			SK:Throwing #codes(upto 4pts, downto 4pts),
			SK:Sling #codes(upto 4pts, downto 4pts)_
		)_
	),
	select7(_
		text("Please select 12 points of Melee weapon skills"),
		pointswanted(12),
		tagwith(EvilCleric(yes)),
		itemswanted(upto 2),
		list(_
			SK:Axe/Mace #codes(upto 8pts, downto 8pts),
			SK:Broadsword #codes(upto 8pts, downto 8pts),
			SK:Flail #codes(upto 8pts, downto 8pts),
			SK:Shield (Shield) #codes(upto 4pts, downto 4pts),
			SK:Staff #codes(upto 12pts, downto 12pts)_
		)_
	),
	select8(_
		text("Pick a Hidden Lore specialty"),
		pointswanted(1),
		tagwith(EvilCleric(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 1pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 1pts),
			SK:Hidden Lore (Spirit Lore) #codes(upto 1pts)_
		)_
	),
	select9(_
		text("Please select five background skills"),
		pointswanted(atleast 1),
		tagwith(EvilCleric(yes)),
		itemswanted(upto 5),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Climbing #codes(upto 1pts),
			SK:Stealth #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Panhandling #codes(upto 1pts),
			SK:Savoir-Faire (High Society) #codes(upto 1pts),
			SK:Research #codes(upto 1pts),
			SK:Writing #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Scrounging #codes(upto 1pts),
			SK:Observation #codes(upto 1pts),
			SK:Search #codes(upto 1pts)_
		)_
	),
	select10(_
		text("Please select 20 evil clerical spells."),
		pointswanted(atleast 0, upto 20),
		tagwith(EvilCleric(yes)),
		itemswanted(atleast 0, upto 20),
		list(_
			#grouplist(GR:AllSpellsUnholy, append( #codes(upto 1pts)))_
		)_
	),
	select11(#List(QuirkSelection))

Unholy Warrior (Dungeon Fantasy), displaycost(250), cost(0),
	description(You fight for what's wrong - and the gods have your back.),
	page(DF3:7),
	noresync(yes),
	sets(_
		{ST:ST}=13,
		{ST:DX}=13,
		{ST:IQ}=12,
		{ST:HT}=13,
		{ST:Will}=14,
		{ST:Hit Points}=ST:ST,
		{ST:Perception}=ST:IQ,
		{ST:Fatigue Points}=ST:HT,
		{ST:Basic Speed}=6.00,
		{ST:Basic Move}={ST:Basic Speed}_
	),
	adds(_
		{AD:Born War-Leader}=1,
		{AD:Unholiness}=2,
		{DI:Social Stigma (Excommunicated)},
		{SK:Exorcism}=4pts,
		{SK:Brawling}=2pts,
		{SK:Wrestling}=4pts,
		{SK:Leadership}=1pts,
		{SK:Strategy}=2pts,
		{SK:Tactics}=2pts,
		{SK:Intimidation}=1pts,
		{SK:Religious Ritual}=1pts,
		{SK:Theology}=1pts,
		{SK:Meditation}=1pts,
			%weapontypesaliaslist%,
		{SK:Poisons}=1pts_
	),
	creates(_
				"AD:Unholy Warrior Higher Purpose (Slay Servitors of Good), 5/10, upto(3), page(B59), cat(Supernatural, Mental)"=1,
				"PE:Legionary of the Damned, 1, page(DF3:27)",
				"SK:Physiology ([Primary Victim Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a victim type:", "[Primary Victim Type]", "victim", "Physiology"))"=4pts,
				"SK:Psychology ([Primary Victim Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a victim type:", "[Primary Victim Type]", "victim", "Psychology"))"=4pts_
	),
	x(_
			#ChoiceList(_
				name(weapontypes),
				title(Combat specialty),
		text(Choose your melee skill package.),
				picksallowed(1),
				method(bynumber),
		list(_
				"Axe/Mace and Shield",
				"Broadsword and Shield",
				"Spear and Shield",
				"Flail and Shield",
				"Polearm",
				"Spear only",
				"Two-Handed Axe/Mace",
				"Two-Handed Sword",
				"Two-Handed Flail"_
	),
	aliaslist(_
				"{SK:Axe/Mace}=12pts, {SK:Shield (Shield)}=8pts",
				"{SK:Broadsword}=12pts, {SK:Shield (Shield)}=8pts",
				"{SK:Spear}=12pts, {SK:Shield (Shield)}=8pts",
				"{SK:Flail}=12pts, {SK:Shield (Shield)}=8pts",
				"{SK:Polearm}=20pts",
				"{SK:Spear}=20pts",
				"{SK:Two-Handed Axe/Mace}=20pts",
				"{SK:Two-Handed Sword}=20pts",
				"{SK:Two-Handed Flail}=20pts"_
			)_
		)_
	),
	select1(#List(Languages)),
	select2(_
		text("Please select at least 25 points from Unholy abilities and another 25 from mundane advantages."),
		pointswanted(50),
		tagwith(UnholyWarrior(yes)),
		itemswanted(atleast 1),
		list(_
			#list(GMAdvantages),
			#list(Unholy Warrior Abilities),
			AD:Combat Reflexes,
			AD:High Pain Threshold,
			AD:Luck,
			AD:Rapid Healing,
			AD:Recovery,
			AD:Signature Gear,
			AD:Unfazeable,
			AD:Enhanced Block #codes(upto 1, downto 1),
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 1, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Hit Points #codes(upto 3, downto 1),
			AD:Extra Will #codes(upto 5, downto 1),
			AD:Fearlessness #codes(upto 7, downto 1),
			AD:Hard to Kill #codes(upto 5, downto 1),
			AD:Hard to Subdue #codes(upto 5, downto 1),
			AD:Magic Resistance #codes(upto 12, downto 1),
			AD:Striking ST #codes(upto 2, downto 1),
			AD:Resistant to Disease #codes(upto 1, downto 1),
			AD:Resistant to Poison #codes(upto 1, downto 1),
			PE:Weapon Bond (%Weapon%),
			#newitem(_
				AD:Resistant to Evil Supernatural Powers, 5/7, levelnames(+3 to resist, +8 to resist), upto(2), page(B81)_
	),
			#newitem(AD:_Increase Born War-Leader, 5/10, existing(AD:Born War-Leader)),
			AD:Extra Unholiness _
		)_
	),
	select3(_
		text("Please select -15 points from the following disadvantages."),
		pointswanted(-15),
		tagwith(UnholyWarrior(yes)),
		itemswanted(atleast 1),
		list(_
			#list(GMDisadvantages),
			DI:Bad Temper,
			DI:Gluttony,
			DI:Greed,
			DI:Jealousy,
			DI:Laziness,
			DI:Lecherousness,
			DI:Selfish_
		)_
	),
	select4(_
		text("Please select another -15 points from these disadvantages."),
		pointswanted(-15),
		tagwith(UnholyWarrior(yes)),
		itemswanted(atleast 1),
		list(_
			#BuildSelectList(Disdvantages where UnholyWarrior is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),
			#list(GMDisadvantages),
			DI:Bad Temper,
			DI:Bloodlust,
			DI:Bully,
			DI:Callous,
			DI:Code of Honor (Pirates),
			DI:Compulsive Lying,
			DI:Fanaticism,
			DI:Gluttony,
			DI:Greed,
			DI:Jealousy,
			DI:Laziness,
			DI:Lecherousness,
			DI:Overconfidence,
			DI:Selfish,
			DI:Stubbornness,
			#newitem(_
				DI:Intolerance (Good Religions), -5, page(B140), cat(Mundane, Mental)_
	),
			#newitem(_
				DI:Intolerance (All other Religions), -10, page(B140), cat(Mundance, Mental)_
			)_
		)_
	),
	select5(_
		text("Select a form of Hidden Lore."),
		pointswanted(2),
		tagwith(UnholyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Hidden Lore (Demon Lore) #codes(upto 2pts, downto 2pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 2pts, downto 2pts)_
		)_
	),
	select6(_
		text("Select a ranged combat skill."),
		pointswanted(4),
		tagwith(UnholyWarrior(yes)),
		itemswanted(1),
		list(_
			SK:Crossbow #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts),
			SK:Throwing #codes(upto 4pts, downto 4pts)_
		)_
	),
	select7(_
		text("Please select 5 background skills."),
		pointswanted(5),
		tagwith(UnholyWarrior(yes)),
		itemswanted(5),
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),
			SK:Fast-Draw #codes(upto 1pts),
			SK:Climbing #codes(upto 1pts),
			SK:Lance #codes(upto 1pts),
			SK:Stealth #codes(upto 1pts),
			SK:First Aid #codes(upto 1pts),
			SK:Gesture #codes(upto 1pts),
			SK:Interrogation #codes(upto 1pts),
			SK:Hiking #codes(upto 1pts),
			SK:Observation #codes(upto 1pts),
			#newitem(SK:Physiology ([Secondary Victim Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences) #codes(upto 1pts),x(#InputReplace("Please specify a victim type:", "[Secondary Victim Type]", "monster", "Physiology"))),
			#newitem(SK:Psychology ([Secondary Victim Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities) #codes(upto 1pts),x(#InputReplace("Please specify a victim type:", "[Secondary Victim Type]", "monster", "Psychology"))),
			#newitem(SK:Riding (Equines), DX/A, default(DX - 5, SK:Animal Handling - 3, SK:Riding - 10), page(B217), cat(_General, Animal) #codes(upto 1pts))_
		)_
	),
	select8(#List(QuirkSelection))

<Character Templates - Dungeon Fantasy - Power-Ups, Character Templates - Dungeon Fantasy, Character Templates>
Barbarian Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Barbarian Traits and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Barbarians may select any trait from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			AD:Absolute Direction,
			AD:Acute [sense],
			AD:Acute Acute Taste and Smell,
			AD:Acute Touch,
			AD:Acute Vision,
			AD:Acute Hearing,
			PE:Alcohol Tolerance,
			AD:Animal Empathy,
			AD:Animal Friend,
			AD:Barbarian Arm ST #codes(upto 2, downto 1),
			AD:Barbarian Damage Resistance (Crushing) #codes(upto 2, downto 1),
			AD:Barbarian Damage Resistance #codes(upto 2, downto 1),
			AD:Combat Reflexes,
			AD:Discriminatory Smell,
			AD:Extra Attack #codes(upto 1, downto 1),
			AD:Extra ST #codes(upto 3, downto 1),
			AD:Extra HT #codes(upto 3, downto 1),
			AD:Extra Perception #codes(upto 6, downto 1),
			AD:Fearlessness,
			AD:Fit,
			AD:Hard to Kill,
			AD:Hard to Subdue,
			AD:Lifting ST #codes(upto 3, downto 1),
			AD:Luck #codes(upto 2, downto 1),
			AD:Magic Resistance,
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Rapid Healing,
			AD:Recovery,
			AD:Resistant to Disease #codes(upto 2, downto 1),
			AD:Resistant to Poison #codes(upto 2, downto 1),
			AD:Signature Gear,
			AD:Striking ST #codes(upto 2, downto 1),
			AD:Temperature Tolerance #codes(upto 2, downto 1),
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Unfazeable,
			AD:Very Fit,
			AD:Very Rapid Healing_
		)_
	)

Barbarian Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Barbarian Skills.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Barbarians may select any skills from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Animal Handling (Big Cats) #codes(upto 4pts),
			SK:Animal Handling (Dogs) #codes(upto 4pts),
			SK:Animal Handling (Equines) #codes(upto 4pts),
			SK:Animal Handling (Raptors) #codes(upto 4pts),
			SK:Axe/Mace #codes(upto 4pts),
			SK:Bolas #codes(upto 4pts),
			SK:Bow #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Carousing #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Flail #codes(upto 4pts),
			SK:Forced Entry #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Lifting #codes(upto 4pts),
			SK:Mimicry (Animal Sounds) #codes(upto 4pts),
			SK:Mimicry (Bird Calls) #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Polearm #codes(upto 4pts),
			SK:Seamanship #codes(upto 4pts),
			SK:Shield (Shield) #codes(upto 4pts),
			SK:Skiing #codes(upto 4pts),
			SK:Spear #codes(upto 4pts),
			SK:Spear Thrower #codes(upto 4pts),
			SK:Survival (Arctic) #codes(upto 4pts),
			SK:Survival (Desert) #codes(upto 4pts),
			SK:Survival (Island/Beach) #codes(upto 4pts),
			SK:Survival (Jungle) #codes(upto 4pts),
			SK:Survival (Mountain) #codes(upto 4pts),
			SK:Survival (Plains) #codes(upto 4pts),
			SK:Survival (Swampland) #codes(upto 4pts),
			SK:Survival (Woodlands) #codes(upto 4pts),
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts),
			SK:Thrown Weapon (Harpoon) #codes(upto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4ts, downto 1pts),
			SK:Thrown Weapon (Stick) #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Two-Handed Axe/Mace #codes(upto 4pts),
			SK:Two-Handed Sword #codes(upto 4pts),
			SK:Two-Handed Flail #codes(upto 4pts) _
		)_
	)

Bard Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Bard optional Advantages and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Bards may select any trait from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#list(Bard Abilities),
			AD:Acute Hearing,
			AD:Appearance,
			AD:Bard-Song Empathy,
			AD:Bard-Song Mimicry,
			AD:Bard-Song Mind Control,
			AD:Bard-Song Mind Probe,
			AD:Bard-Song Rapier Wit,
			AD:Bard-Song Sonar,
			AD:Bard-Song Speak With Animals,
			AD:Bard-Song Subsonic Speech,
			AD:Bard-Song Telecommunication (Telesend),
			AD:Bard-Song Terror,
			AD:Bard-Song Ultrasonic Speech,
			AD:Bard-Song Unfazeable,
			AD:Charisma #codes(upto 20, downto 1),
			AD:Discriminatory Hearing,
			AD:Eidetic Memory,
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra Fatigue Points #codes(upto 8, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 4),
			AD:Language Talent,
			AD:Language,
			AD:Language (Written),
			AD:Language (Spoken),
			AD:Luck #codes(upto 3, downto 1),
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Musical Ability #codes(upto 3, downto 4),
			AD:Photographic Memory,
			AD:Signature Gear,
			AD:Smooth Operator #codes(upto 1, downto 1),
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Wealth #codes(upto 2, downto 3),
			AD:Wild Talent #codes(upto 10, downto 1),
			PE:No Hangover,
			PE:Penetrating Voice,
			PE:Honest Face _
		)_
	)

Bard Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Bardic Skills and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Bards may select any spell from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#List(Bard Skills),
			SK:Acrobatics #codes(upto 4pts),
			SK:Bow #codes(upto 2pts),
			SK:Climbing #codes(upto 4pts),
			SK:Cloak #codes(upto 4pts),
			SK:Connoisseur #codes(upto 4pts),
			SK:Connoisseur (Dance) #codes(upto 4pts),
			SK:Connoisseur (Literature) #codes(upto 4pts),
			SK:Connoisseur (Music) #codes(upto 4pts),
			SK:Connoisseur (Visual Arts) #codes(upto 4pts),
			SK:Connoisseur (Wine) #codes(upto 4pts),
			SK:Current Affairs ([Regional]) #codes(upto 4pts),
			SK:Current Affairs (Business) #codes(upto 4pts),
			SK:Current Affairs (Headline News) #codes(upto 4pts),
			SK:Current Affairs (High Culture) #codes(upto 4pts),
			SK:Current Affairs (People) #codes(upto 4pts),
			SK:Current Affairs (Politics) #codes(upto 4pts),
			SK:Current Affairs (Popular Culture) #codes(upto 4pts),
			SK:Current Affairs (Science & Technology) #codes(upto 4pts),
			SK:Current Affairs (Sports) #codes(upto 4pts),
			SK:Current Affairs (Travel) #codes(upto 4pts),
			SK:Dancing #codes(upto 4pts),
			SK:Disguise #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Main-Gauche #codes(upto 4pts),
			SK:Mimicry (Speech) #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Rapier #codes(upto 4pts),
			SK:Saber #codes(upto 4pts),
			SK:Scrounging #codes(upto 4pts),
			SK:Sex Appeal #codes(upto 4pts),
			SK:Shield (Buckler) #codes(upto 4pts),
			SK:Shortsword #codes(upto 4pts),
			SK:Sleight of Hand #codes(upto 4pts),
			SK:Smallsword #codes(upto 4pts),
			SK:Teaching #codes(upto 4pts),
			SK:Thrown Weapon (Knife) #codes(upto 2pts),
			SK:Throwing #codes(upto 2pts),
			SK:Ventriloquism #codes(upto 4pts),
			SK:Writing #codes(upto 4pts) _
		)_
	)

Bard Spells (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Bardic Spells and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Bards may select any spell from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#list(Bard Spells)_
		)_
	)

Cleric Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Clerical optional Advantages and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Clerics may select any trait from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#List(Holy Abilities),
			AD:Clerical Wild Talent #codes(upto 20, downto 1),
			AD:Energy Reserve (Holy) #codes(upto 20, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Will #codes(upto 4, downto 1),
			AD:Extra Fatigue Points #codes(upto 6, downto 1),
			AD:Fearlessness,
			AD:Healer #codes(upto 2, downto 1),
			AD:Holy Might Ally (Divine servant of equal points),
			AD:Holy Might Blessed,
			AD:Holy Might Blessed (Heroic Feat; [Attribute]),
			AD:Holy Might Detect (Evil),
			AD:Holy Might Detect (Good),
			AD:Holy Might Detect (Supernatural Beings),
			AD:Holy Might Healing,
			AD:Holy Might Intuition,
			AD:Holy Might Oracle,
			AD:Holy Might Resistant to Evil Supernatural Powers,
			AD:Holy Might Spirit Empathy,
			AD:Holy Might True Faith,
			AD:Language,
			AD:Language (Spoken),
			AD:Language (Written),
			AD:Luck #codes(upto 3, downto 1),
			AD:Mind Shield,
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Resistant to Disease #codes(upto 2, downto 1),
			AD:Signature Gear,
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Unfazeable,
			#newitem(AD:Extra Power Investiture (Holy), 10/20, existing(AD:Power Investiture (Holy))) _
		)_
	)

Cleric Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Clerical Skills and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Clerics may select any skill from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Axe/Mace #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:Enthrallment (Captivate) #codes(upto 4pts),
			SK:Enthrallment (Persuade) #codes(upto 4pts),
			SK:Enthrallment (Suggest) #codes(upto 4pts),
			SK:Enthrallment (Sway Emotions) #codes(upto 4pts),
			SK:Flail #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hidden Lore (Demon Lore) #codes(upto 4pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 4pts),
			SK:Hidden Lore (Spirit Lore) #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Hypnotism #codes(upto 4pts),
			SK:Innate Attack (Beam) #codes(upto 4pts),
			SK:Innate Attack (Breath) #codes(upto 4pts),
			SK:Innate Attack (Gaze) #codes(upto 4pts),
			SK:Innate Attack (Projectile) #codes(upto 4pts),
			SK:Musical Influence #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Panhandling #codes(upto 4pts),
			SK:Research #codes(upto 4pts),
			SK:Savoir-Faire (High Society) #codes(upto 4pts),
			SK:Scrounging #codes(upto 4pts),
			SK:Search #codes(upto 4pts),
			SK:Shield (Shield) #codes(upto 4pts),
			SK:Sling #codes(upto 4pts),
			SK:Staff #codes(upto 4pts),
			SK:Stealth #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Writing #codes(upto 4pts) _
		)_
	)

Cleric Spells (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Clerical Spells.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Clerics may select any spell from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#grouplist(GR:AllSpellsHoly, append( #codes(upto 1pts)))_
		)_
	)

Druid Advantages(Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Druidical Advantages and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Druids may select any Trait from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#List(DruidAbilities),
			AD:Animal Friend #codes(upto 4, downto 1),
			AD:Druidic Ally (Nature spirit or powerful totem beast of equal points),
			AD:Druidic Alternate Form,
			AD:Druidic Animal Empathy,
			AD:Druidic Channeling,
			AD:Druidic Damage Resistance,
			AD:Druidic Detect (All Animals),
			AD:Druidic Detect (All Plants),
			AD:Druidic Medium,
			AD:Druidic Plant Empathy,
			AD:Druidic Speak With Plants,
			AD:Druidic Terrain Adaptation,
			AD:Energy Reserve (Druidic),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Perception #codes(upto 4, downto 1),
			AD:Extra Green Thumb #codes(upto 3, downto 1),
			#newitem(AD:Extra Power Investiture (Druidic), 10/20, existing(AD:Power Investiture (Druidic))),
			AD:Healer #codes(upto 2, downto 1),
			AD:Intuition,
			AD:Luck #codes(upto 2, downto 1),
			AD:Mind Shield #codes(upto 5, downto 1),
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Outdoorsman #codes(upto 2, downto 1),
			AD:Resistant to Disease #codes(upto 2, downto 1),
			AD:Signature Gear #codes(upto 20),
			AD:Spirit Empathy,
			AD:Two-Weapon Fighting ([Single-Handed Weapon])_
		)_
	)

Druid Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Druidical Spells and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Druids may select any spell from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Animal Handling (Big Cats) #codes(upto 4pts),
			SK:Animal Handling #codes(upto 4pts),
			SK:Animal Handling (Dogs) #codes(upto 4pts),
			SK:Animal Handling (Equines) #codes(upto 4pts),
			SK:Animal Handling (Raptors) #codes(upto 4pts),
			SK:Axe/Mace #codes(upto 4pts),
			SK:Blowpipe #codes(upto 4pts),
			SK:Bolas #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Diagnosis #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hidden Lore (Elemental Lore) #codes(upto 4pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 4pts),
			SK:Hidden Lore (Nature Spirit Lore) #codes(upto 4pts),
			SK:Innate Attack (Beam) #codes(upto 4pts),
			SK:Innate Attack (Breath) #codes(upto 4pts),
			SK:Innate Attack (Gaze) #codes(upto 4pts),
			SK:Innate Attack (Projectile) #codes(upto 4pts),
			SK:Knife #codes(upto 1pts),
			SK:Lasso #codes(upto 4pts),
			SK:Mimicry (Animal Sounds) #codes(upto 4pts),
			SK:Mimicry (Bird Calls) #codes(upto 4pts),
			SK:Net #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Poisons #codes(upto 4pts),
			SK:Shield (Shield) #codes(upto 4pts),
			SK:Shortsword #codes(upto 4pts),
			SK:Sling #codes(upto 4pts),
			SK:Spear #codes(upto 4pts),
			SK:Staff #codes(upto 4pts),
			SK:Survival (Arctic) #codes(upto 4pts),
			SK:Survival (Desert) #codes(upto 4pts),
			SK:Survival (Island/Beach) #codes(upto 4pts),
			SK:Survival (Jungle) #codes(upto 4pts),
			SK:Survival (Mountain) #codes(upto 4pts),
			SK:Survival (Plains) #codes(upto 4pts),
			SK:Survival (Swampland) #codes(upto 4pts),
			SK:Survival (Woodlands) #codes(upto 4pts),
			SK:Teaching #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts),
			SK:Thrown Weapon (Stick) #codes(upto 4pts)_
		)_
	)

Druid Spells (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Druidical Spells and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Druids may select any spell from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#grouplist(GR:AllSpellsDruidic, append( #codes(upto 1pts)))_
		)_
	)

Holy Warrior Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Holy Warrior optional Advantages and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Holy Warriors may select any advantage from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#List(Holy Abilities),
			AD:Clerical Wild Talent,
			AD:Combat Reflexes,
			AD:Enhanced Block #codes(upto 2, downto 1),
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 1, downto 1),
			AD:Extra Attack #codes(upto 1, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Hit Points #codes(upto 3, downto 1),
			AD:Extra Will #codes(upto 5, downto 1),
			AD:Fearlessness #codes(upto 7, downto 1),
			AD:Hard to Kill #codes(upto 5, downto 1),
			AD:Hard to Subdue #codes(upto 5, downto 1),
			AD:High Pain Threshold,
			AD:Holy Might Ally (Divine servant of equal points),
			AD:Holy Might Blessed,
			AD:Holy Might Blessed (Heroic Feat; [Attribute]),
			AD:Holy Might Detect (Evil),
			AD:Holy Might Detect (Good),
			AD:Holy Might Detect (Supernatural Beings),
			AD:Holy Might Healing,
			AD:Holy Might Intuition,
			AD:Holy Might Oracle,
			AD:Holy Might Resistant to Evil Supernatural Powers,
			AD:Holy Might Spirit Empathy,
			AD:Holy Might True Faith,
			AD:Luck #codes(upto 3, downto 1),
			AD:Magic Resistance #codes(upto 12, downto 1),
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Recovery,
			AD:Resistant to Disease #codes(upto 1, downto 1),
			AD:Resistant to Poison #codes(upto 1, downto 1),
			AD:Striking ST #codes(upto 2, downto 1),
			PE:Weapon Bond (%Weapon%),
			AD:Rapid Healing,
			AD:Signature Gear,
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Unfazeable,
			#newitem(AD:_Increase Born War-Leader, 5/10, existing(AD:Born War-Leader)),
			AD:Extra Holiness,
			#newitem(AD:Holy Warrior Higher Purpose (Slay Demons), 5/10, upto(3), page(B59), cat(Supernatural, Mental) ),
			#newitem(AD:Holy Warrior Higher Purpose (Slay Undead), 5/10, upto(3), page(B59), cat(Supernatural, Mental) )_
		)_
	)

Holy Warrior Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Holy Warrior Skills.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Holy Warriors may select any skill from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Axe/Mace #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:Crossbow #codes(upto 4pts),
			SK:Fast-Draw #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Flail #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hidden Lore (Demon Lore) #codes(upto 4pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Interrogation #codes(upto 4pts),
			SK:Lance #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Polearm #codes(upto 4pts),
			SK:Shield (Shield) #codes(upto 4pts),
			SK:Spear #codes(upto 4pts),
			SK:Stealth #codes(upto 4pts),
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Two-Handed Axe/Mace #codes(upto 4pts),
			SK:Two-Handed Sword #codes(upto 4pts),
			SK:Two-Handed Flail #codes(upto 4pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts))_
			#newitem(SK:Riding (Equines), DX/A, default(DX - 5, SK:Animal Handling - 3, SK:Riding - 10), page(B217), cat(_General, Animal) #codes(upto 4pts))_
		)_
	)

Knight Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Knight optional Advantages and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Knights may select any traits from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			AD:Enhanced Block #codes(upto 3, downto 1),
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 3, downto 1),
			AD:Extra ST #codes(upto 6, downto 1),
			AD:Extra DX #codes(upto 3, downto 1),
			AD:Extra HT #codes(upto 6, downto 1),
			AD:Extra Hit Points #codes(upto 5, downto 1),
			AD:Extra Attack #codes(upto 2, downto 1),
			AD:Extra Basic Speed #codes(upto 8, downto 1),
			AD:Fearlessness #codes(upto 5, downto 1),
			AD:Fit,
			AD:Hard to Kill #codes(upto 5, downto 1),
			AD:Hard to Subdue #codes(upto 5, downto 1),
			AD:Luck #codes(upto 2, downto 1),
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Rapid Healing,
			AD:Recovery,
			AD:Signature Gear,
			AD:Striking ST #codes(upto 2, downto 1),
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Very Fit,
			AD:Weapon Master #codes(upto 6, downto 1),
			PE:Alcohol Tolerance,
			PE:Penetrating Voice,
			PE:Weapon Bond (%Weapon%),
			#newitem(AD:_Increase Born War-Leader, 5/10, existing(AD:Born War-Leader))_
		)_
	)

Knight Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Knight Skills.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Knights may select any skills from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Armoury (Body Armor) #codes(upto 4pts),
			SK:Armoury (Melee Weapons) #codes(upto 4pts),
			SK:Axe/Mace #codes(upto 4pts),
			SK:Bow #codes(upto 4pts),
			SK:Boxing #codes(upto 4pts),
			SK:Brawling #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Carousing #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:Crossbow #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Flail #codes(upto 4pts),
			SK:Forced Entry #codes(upto 4pts),
			SK:Gambling #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Heraldry #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Intimidation #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Polearm #codes(upto 4pts),
			SK:Savoir-Faire (High Society) #codes(upto 4pts),
			SK:Scrounging #codes(upto 4pts),
			SK:Shortsword #codes(upto 4pts),
			SK:Sling #codes(upto 4pts),
			SK:Spear #codes(upto 4pts),
			SK:Stealth #codes(upto 4pts),
			SK:Streetwise #codes(upto 4pts),
			SK:Sumo Wrestling #codes(upto 4pts),
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Two-Handed Sword #codes(upto 4pts),
			SK:Wrestling #codes(upto 4pts),
			#newitem(_
				SK:Riding (Equines), DX/A, default(DX - 5, SK:Animal Handling - 3, SK:Riding - 10), page(B217), cat(_General, Animal) #codes(upto 4pts) _
			)_
		)_
	)

Martial Artist Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Martial Artist optional Advantages and the Power-Ups from DF3.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Martial Artists may select any traits from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#List(Martial Artist Abilities),
			PE:Weapon Bond (%Weapon%),
			AD:Chi Mastery Catfall,
			AD:Chi Mastery Claws (Blunt Claws),
			AD:Chi Mastery Clinging,
			AD:Chi Mastery Danger Sense,
			AD:Chi Mastery Enhanced Time Sense,
			AD:Chi Mastery Perfect Balance,
			AD:Chi Mastery Damage Resistance,
			AD:Chi Mastery Enhanced Move (Ground),
			AD:Chi Mastery Extra Attack #codes(upto 2, downto 1),
			AD:Chi Mastery Metabolism Control,
			AD:Chi Mastery Regeneration,
			AD:Chi Mastery Resistant to Metabolic Hazards,
			AD:Chi Mastery Striking ST,
			AD:Chi Mastery Super Jump,
			AD:Ambidexterity,
			AD:Combat Reflexes,
			AD:Fit,
			AD:Very Fit,
			AD:Flexibility,
			AD:Double-Jointed,
			AD:High Pain Threshold,
			AD:Luck #codes(upto 2, downto 1),
			AD:Signature Gear,
			AD:Unfazeable,
			AD:Enhanced Dodge #codes(upto 3, downto 1),
			AD:Enhanced Parry (bare hands) #codes(upto 2, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Will #codes(upto 4, downto 1),
			AD:Extra Perception #codes(upto 4, downto 1),
			AD:Extra Fatigue Points #codes(upto 6, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 1),
			AD:Extra Basic Move #codes(upto 2, downto 1),
			AD:Magic Resistance #codes(upto 10, downto 1),
			AD:Mind Shield #codes(upto 4, downto 1),
			AD:Wild Talent,
			#newitem(AD:_Increase Chi Talent, 15/30, existing(AD:Chi Talent)),
			#newitem(_
				AD:Weapon Master (One Exotic Weapon), 20, page(B99), cat(Mundane, Physical) _
			)_
		)_
	)

Martial Artist Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Martial Artist Skills.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Martial Artists may select any skills from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 4pts, downto 1pts))),
			SK:Autohypnosis #codes(upto 4pts),
			SK:Axe/Mace #codes(upto 4pts),
			SK:Blind Fighting #codes(upto 4pts),
			SK:Blowpipe #codes(upto 4pts),
			SK:Body Control #codes(upto 4pts),
			SK:Breaking Blow #codes(upto 4pts),
			SK:Breath Control #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:Esoteric Medicine (Chi) #codes(upto 4pts),
			SK:Fast-Draw #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Flail #codes(upto 4pts),
			SK:Flying Leap #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Immovable Stance #codes(upto 4pts),
			SK:Intimidation #codes(upto 4pts),
			SK:Jitte/Sai #codes(upto 4pts),
			SK:Judo #codes(upto 4pts),
			SK:Karate #codes(upto 4pts),
			SK:Kiai #codes(upto 4pts),
			SK:Knife #codes(upto 4pts),
			SK:Kusari #codes(upto 4pts),
			SK:Light Walk #codes(upto 4pts),
			SK:Mental Strength #codes(upto 4pts),
			SK:Mind Block #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Parry Missile Weapons #codes(upto 4pts),
			SK:Power Blow #codes(upto 4pts),
			SK:Pressure Points #codes(upto 4pts),
			SK:Push #codes(upto 4pts),
			SK:Running #codes(upto 4pts),
			SK:Shortsword #codes(upto 4pts),
			SK:Sling #codes(upto 4pts),
			SK:Smallsword #codes(upto 4pts),
			SK:Staff #codes(upto 4pts),
			SK:Teaching #codes(upto 4pts),
			SK:Thrown Weapon (Dart) #codes(upto 4pts),
			SK:Thrown Weapon (Knife) #codes(upto 4pts),
			SK:Thrown Weapon (Shuriken) #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Throwing Art #codes(upto 4pts),
			SK:Tonfa #codes(upto 4pts) _
		)_
	)

Scout Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Scout Advantages.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Scouts may select any traits from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			AD:Absolute Direction,
			AD:Acute Vision #codes(upto 10, downto 1),
			AD:Combat Reflexes,
			AD:Danger Sense,
			AD:Extra Attack #codes(upto 1, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Perception #codes(upto 4, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 4),
			AD:Extra Basic Move #codes(upto 6, downto 1),
			AD:Fit,
			AD:High Pain Threshold,
			AD:Luck #codes(upto 2, downto 1),
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Night Vision #codes(upto 9, downto 1),
			AD:Peripheral Vision,
			AD:Rapid Healing,
			AD:Scout Enhanced Tracking,
			AD:Scout Telescopic Vision,
			AD:Signature Gear,
			AD:Silence #codes(upto 2, downto 1),
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Very Fit,
			PE:Weapon Bond (%Weapon%),
			#newitem(AD:_Increase Outdoorsman, 10/20, existing(AD:Outdoorsman)),
			#newitem(_
				AD:Weapon Master (Bow), displaycost(20), cost(20), page(B99), cat(Mundane, Physical)_
			)_
		)_
	)

Scout Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Scout Skills.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Scouts may select any skills from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Armoury (Missile Weapons) #codes(upto 4pts),
			SK:Boating (Unpowered) #codes(upto 4pts),
			SK:Brawling #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Fast-Draw #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Garrote #codes(upto 4pts),
			SK:Jumping #codes(upto 4pts),
			SK:Knife #codes(upto 4pts),
			SK:Knot-Tying #codes(upto 4pts),
			SK:Navigation (Land) #codes(upto 4pts),
			SK:Navigation (Sea) #codes(upto 4pts),
			SK:Prospecting #codes(upto 4pts),
			SK:Running #codes(upto 4pts),
			SK:Seamanship #codes(upto 4pts),
			SK:Search #codes(upto 4pts),
			SK:Shield (Shield) #codes(upto 4pts),
			SK:Shortsword #codes(upto 4pts),
			SK:Skiing #codes(upto 4pts),
			SK:Spear #codes(upto 4pts),
			SK:Staff #codes(upto 4pts),
			SK:Survival (Arctic) #codes(upto 4pts),
			SK:Survival (Desert) #codes(upto 4pts),
			SK:Survival (Island/Beach) #codes(upto 4pts),
			SK:Survival (Jungle) #codes(upto 4pts),
			SK:Survival (Mountain) #codes(upto 4pts),
			SK:Survival (Plains) #codes(upto 4pts),
			SK:Survival (Swampland) #codes(upto 4pts),
			SK:Survival (Woodlands) #codes(upto 4pts),
			SK:Swimming #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Weather Sense #codes(upto 4pts),
			SK:Wrestling #codes(upto 4pts),
			#newitem(_
				SK:Riding (Equines), DX/A, default(DX - 5, SK:Animal Handling - 3, SK:Riding - 10), page(B217), cat(_General, Animal), #codes(upto 4pts)_
			)_
		)_
	)

Swashbuckler Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Swashbuckler Advantages.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Swashbucklers may select any traits from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			AD:Ambidexterity,
			AD:Appearance #codes(upto 5, downto 1),
			AD:Charisma #codes(upto 12, downto 1),
			AD:Daredevil,
			AD:Enhanced Block #codes(upto 3, downto 1),
			AD:Enhanced Dodge #codes(upto 1, downto 1),
			AD:Extra Attack #codes(upto 2, downto 1),
			AD:Extra ST #codes(upto 6, downto 1),
			AD:Extra DX #codes(upto 3, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 1),
			AD:Extra Basic Move #codes(upto 2, downto 1),
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Perfect Balance,
			AD:Rapier Wit,
			AD:Signature Gear,
			AD:Serendipity #codes(upto 4, downto 1),
			AD:Striking ST #codes(upto 2, downto 1),
			AD:Swashbuckler Enhanced Time Sense,
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			PE:Alcohol Tolerance,
			PE:No Hangover,
			#newitem(AD:_Increase Enhanced Parry (Broadsword), 5/10, existing(AD:Enhanced Parry (Broadsword))),
			#newitem(AD:_Increase Enhanced Parry (Rapier), 5/10, existing(AD:Enhanced Parry (Rapier))),
			#newitem(AD:_Increase Enhanced Parry (Saber), 5/10, existing(AD:Enhanced Parry (Saber))),
			#newitem(AD:_Increase Enhanced Parry (Shortsword), 5/10, existing(AD:Enhanced Parry (Shortsword))),
			#newitem(AD:_Increase Enhanced Parry (Smallsword), 5/10, existing(AD:Enhanced Parry (Smallsword))),
			#newitem(AD:_Increase Luck, 15/45, existing(AD:Luck))_
		)_
	)

Swashbuckler Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Swashbuckler Skills.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Swashbucklers may select any skills from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Blind Fighting #codes(upto 4pts),
			SK:Boxing #codes(upto 4pts),
			SK:Brawling #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:Cloak #codes(upto 4pts),
			SK:Connoisseur #codes(upto 4pts),
			SK:Connoisseur (Dance) #codes(upto 4pts),
			SK:Connoisseur (Literature) #codes(upto 4pts),
			SK:Connoisseur (Music) #codes(upto 4pts),
			SK:Connoisseur (Visual Arts) #codes(upto 4pts),
			SK:Connoisseur (Wine) #codes(upto 4pts),
			SK:Fast-Draw #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Flying Leap #codes(upto 4pts),
			SK:Gambling #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Intimidation #codes(upto 4pts),
			SK:Kiai #codes(upto 4pts),
			SK:Main-Gauche #codes(upto 4pts),
			SK:Power Blow #codes(upto 4pts),
			SK:Rapier #codes(upto 4pts),
			SK:Saber #codes(upto 4pts),
			SK:Savoir-Faire (High Society) #codes(upto 4pts),
			SK:Scrounging #codes(upto 4pts),
			SK:Seamanship #codes(upto 4pts),
			SK:Search #codes(upto 4pts),
			SK:Sex Appeal #codes(upto 4pts),
			SK:Shield (Buckler) #codes(upto 4pts),
			SK:Shortsword #codes(upto 4pts),
			SK:Smallsword #codes(upto 4pts),
			SK:Streetwise #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Thrown Weapon (Knife) #codes(upto 4pts)_
		)_
	)

Thief Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Thief Advantages.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Thiefs may select any traits from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			AD:Ambidexterity,
			AD:Catfall,
			AD:Combat Reflexes,
			AD:Danger Sense,
			AD:Double-Jointed,
			AD:Enhanced Dodge #codes(upto 3, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra Perception #codes(upto 6, downto 1),
			AD:Extra Basic Move #codes(upto 2, downto 1),
			AD:Extra Basic Speed #codes(upto 4, downto 1),
			AD:Gizmo #codes(upto 3, downto 1),
			AD:Luck #codes(upto 3, downto 1),
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Night Vision #codes(upto 9, downto 1),
			AD:Peripheral Vision,
			AD:Sensitive Touch,
			AD:Serendipity,
			AD:Signature Gear,
			AD:Silence #codes(upto 2, downto 1),
			AD:Thief Vibration Sense (Air),
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Wealth #codes(upto 2, downto 1),
			PE:Honest Face,
			#newitem(AD:_Increase High Manual Dexterity, 5/10, existing(AD:High Manual Dexterity)),
			AD:Surprise Striking ST,
			#newitem(_
				AD:Weapon Master (Knife), displaycost(20), cost(20), page(B99), cat(Mundane, Physical)_
	),
			#newitem(_
				AD:Weapon Master (Main-Gauche), displaycost(20), cost(20), page(B99), cat(Mundane, Physical)_
			)_
		)_
	)

Thief Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Thief Skills.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Thiefs may select any skills from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Bow #codes(upto 4pts),
			SK:Cartography #codes(upto 4pts),
			SK:Cloak #codes(upto 4pts),
			SK:Connoisseur #codes(upto 4pts),
			SK:Connoisseur (Dance) #codes(upto 4pts),
			SK:Connoisseur (Literature) #codes(upto 4pts),
			SK:Connoisseur (Music) #codes(upto 4pts),
			SK:Connoisseur (Visual Arts) #codes(upto 4pts),
			SK:Connoisseur (Wine) #codes(upto 4pts),
			SK:Crossbow #codes(upto 4pts),
			SK:Disguise #codes(upto 4pts),
			SK:Fast-Draw #codes(upto 4pts),
			SK:Fast-Talk #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Forgery #codes(upto 4pts),
			SK:Garrote #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Lip Reading #codes(upto 4pts),
			SK:Main-Gauche #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Panhandling #codes(upto 4pts),
			SK:Poisons #codes(upto 4pts),
			SK:Rapier #codes(upto 4pts),
			SK:Saber #codes(upto 4pts),
			SK:Scrounging #codes(upto 4pts),
			SK:Seamanship #codes(upto 4pts),
			SK:Shield (Buckler) #codes(upto 4pts),
			SK:Shortsword #codes(upto 4pts),
			SK:Sling #codes(upto 4pts),
			SK:Smallsword #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Thrown Weapon (Knife) #codes(upto 4pts)_
		)_
	)

Wizard Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Wizard Advantages.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Wizards may select any traits from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			AD:Eidetic Memory,
			AD:Energy Reserve (Magical) #codes(upto 20, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra Will #codes(upto 5, downto 1),
			AD:Extra Fatigue Points #codes(upto 10, downto 1),
			AD:Intuition,
			AD:Gizmo #codes(upto 3, downto 1),
			AD:Language #codes(upto 3, downto 1),
			AD:Language Talent,
			AD:Luck #codes(upto 2, downto 1),
			AD:Mind Shield,
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Photographic Memory,
			AD:Signature Gear,
			AD:Spirit Empathy,
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Wizard Magic Resistance,
			AD:Wizard Mana Enhancer,
			#newitem(AD:_Increase Wild Talent, 5/10, existing(AD:Wild Talent)),
			#newitem(_
				AD:Wild Talent, 20/20, displaycost(21/level), mods(Wild Talent), page(B99), cat(Supernatural, Mental),
initmods(Retention, +25%, group(Wild Talent), page(B99) _
| Focused, -20%, group(Wild Talent), page(B100))_
	),
			#newitem(AD:Extra Magery, 10/20, existing(AD:Magery)) _
		)_
	)

Wizard Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All optional Wizard Skills.),
	page(DF3:38),
	noresync(yes),
	select1(_
		text("Wizards may select any skills from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Body Sense #codes(upto 4pts),
			SK:Cartography #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:Diplomacy #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hidden Lore (Demon Lore) #codes(upto 4pts),
			SK:Hidden Lore (Magical Items Lore) #codes(upto 4pts),
			SK:Hidden Lore (Magical Writings Lore) #codes(upto 4pts),
			SK:Hidden Lore (Spirit Lore) #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Innate Attack (Beam) #codes(upto 4pts),
			SK:Innate Attack (Breath) #codes(upto 4pts),
			SK:Innate Attack (Gaze) #codes(upto 4pts),
			SK:Innate Attack (Projectile) #codes(upto 4pts),
			SK:Savoir-Faire (High Society) #codes(upto 4pts),
			SK:Scrounging #codes(upto 4pts),
			SK:Shield (Buckler) #codes(upto 4pts),
			SK:Sling #codes(upto 4pts),
			SK:Smallsword #codes(upto 4pts),
			SK:Staff #codes(upto 4pts),
			SK:Stealth #codes(upto 4pts),
			SK:Strategy (Land) #codes(upto 4pts),
			SK:Strategy (Naval) #codes(upto 4pts),
			SK:Thrown Weapon (Dart) #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			#newitem(SK:Fast-Draw (Potion), DX/E, page(B194), cat(_General, Combat/Weapons - Melee Combat, Combat/Weapons - Ranged Combat), #codes(upto 4pts)),
			#newitem(SK:Physiology, IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences), x(#InputToTag("You must specialize by monster type - Physiology Modifiers apply (p. B181):", nameext, "Monster Type", "Physiology")))_
		)_
	)

Evil Cleric Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Evil Clerical optional Advantages.),
	page(DF3:23),
	noresync(yes),
	select1(_
		text("Evil Clerics may select any trait from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			AD:Clerical Wild Talent #codes(upto 20, downto 1),
			AD:Energy Reserve (Unholy) #codes(upto 20, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra IQ #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Will #codes(upto 4, downto 1),
			AD:Extra Fatigue Points #codes(upto 6, downto 1),
			AD:Fearlessness,
			AD:Unholy Might Ally (Demon or undead of equal points),
			AD:Unholy Might Channeling,
			AD:Unholy Might Detect (Evil),
			AD:Unholy Might Detect (Good),
			AD:Unholy Might Detect (Supernatural Beings),
			AD:Unholy Might Dread Touch,
			AD:Unholy Might Medium,
			AD:Unholy Might Patron,
			AD:Unholy Might Spirit Empathy,
			AD:Unholy Might Terror,
			AD:Language,
			AD:Language (Spoken),
			AD:Language (Written),
			AD:Luck #codes(upto 3, downto 1),
			AD:Mind Shield,
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Resistant to Disease #codes(upto 2, downto 1),
			AD:Resistant to Evil Supernatural Powers #codes(upto 2, downto 1),
			AD:Resistant to Poison #codes(upto 1, downto 1),
			AD:Signature Gear,
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Unfazeable,
			#newitem(AD:Extra Power Investiture (Unholy), 10/20, existing(AD:Power Investiture (Unholy)))_
		)_
	)

Evil Cleric Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Evil Clerical Skills.),
	page(DF3:23),
	noresync(yes),
	select1(_
		text("Evil Clerics may select any skill from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Axe/Mace #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:Enthrallment (Captivate) #codes(upto 4pts),
			SK:Enthrallment (Persuade) #codes(upto 4pts),
			SK:Enthrallment (Suggest) #codes(upto 4pts),
			SK:Enthrallment (Sway Emotions) #codes(upto 4pts),
			SK:Flail #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hidden Lore (Demon Lore) #codes(upto 4pts),
			SK:Hidden Lore (Faerie Lore) #codes(upto 4pts),
			SK:Hidden Lore (Spirit Lore) #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Hypnotism #codes(upto 4pts),
			SK:Innate Attack (Beam) #codes(upto 4pts),
			SK:Innate Attack (Breath) #codes(upto 4pts),
			SK:Innate Attack (Gaze) #codes(upto 4pts),
			SK:Innate Attack (Projectile) #codes(upto 4pts),
			SK:Musical Influence #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Panhandling #codes(upto 4pts),
			SK:Research #codes(upto 4pts),
			SK:Savoir-Faire (High Society) #codes(upto 4pts),
			SK:Scrounging #codes(upto 4pts),
			SK:Search #codes(upto 4pts),
			SK:Shield (Shield) #codes(upto 4pts),
			SK:Sling #codes(upto 4pts),
			SK:Staff #codes(upto 4pts),
			SK:Stealth #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Writing #codes(upto 4pts) _
		)_
	)

Evil Cleric Spells (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Evil Cleric Spells.),
	page(DF3:24),
	noresync(yes),
	select1(_
		text("Evil Clerics may select any spells from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			#grouplist(GR:AllSpellsUnholy, append( #codes(upto 1pts)))_
		)_
	)

Unholy Warrior Advantages (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Unholy Warrior optional Advantages.),
	page(DF3:27),
	noresync(yes),
	select1(_
		text("Unholy Warriors may select any trait from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			AD:Clerical Wild Talent,
			AD:Combat Reflexes,
			AD:Enhanced Block #codes(upto 2, downto 1),
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 1, downto 1),
			AD:Extra Attack #codes(upto 1, downto 1),
			AD:Extra ST #codes(upto 2, downto 1),
			AD:Extra DX #codes(upto 1, downto 1),
			AD:Extra HT #codes(upto 2, downto 1),
			AD:Extra Hit Points #codes(upto 3, downto 1),
			AD:Extra Will #codes(upto 5, downto 1),
			AD:Fearlessness #codes(upto 7, downto 1),
			AD:Hard to Kill #codes(upto 5, downto 1),
			AD:Hard to Subdue #codes(upto 5, downto 1),
			AD:High Pain Threshold,
			AD:Unholy Might Ally (Demon or undead of equal points),
			AD:Unholy Might Channeling,
			AD:Unholy Might Detect (Evil),
			AD:Unholy Might Detect (Good),
			AD:Unholy Might Detect (Supernatural Beings),
			AD:Unholy Might Dread Touch,
			AD:Unholy Might Medium,
			AD:Unholy Might Patron,
			AD:Unholy Might Spirit Empathy,
			AD:Unholy Might Terror,
			AD:Luck #codes(upto 3, downto 1),
			AD:Magic Resistance #codes(upto 12, downto 1),
			AD:Mortal Foe (%foetypealiaslist%),
			AD:Recovery,
			AD:Resistant to Disease #codes(upto 1, downto 1),
			AD:Resistant to Evil Supernatural Powers #codes(upto 2, downto 1),
			AD:Resistant to Poison #codes(upto 1, downto 1),
			AD:Striking ST #codes(upto 2, downto 1),
			PE:Weapon Bond (%Weapon%),
			AD:Rapid Healing,
			AD:Signature Gear,
			AD:Two-Weapon Fighting ([Single-Handed Weapon]),
			AD:Unfazeable,
			#newitem(AD:_Increase Born War-Leader, 5/10, existing(AD:Born War-Leader)),
			AD:Extra Holiness,
			#newitem(AD:Unholy Warrior Higher Purpose (Slay Servitors of Good), 5/10, upto(3), page(B59), cat(Supernatural, Mental)_
			)_
		)_
	)

Unholy Warrior Skills (Dungeon Fantasy), displaycost(varies), cost(0),
	description(All Optional Unholy Warrior Skills.),
	page(DF3:27),
	noresync(yes),
	select1(_
		text("Unholy Warriors may select any skill from this list."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		list(_
			SK:Axe/Mace #codes(upto 4pts),
			SK:Broadsword #codes(upto 4pts),
			SK:Climbing #codes(upto 4pts),
			SK:Crossbow #codes(upto 4pts),
			SK:Fast-Draw #codes(upto 4pts),
			SK:First Aid #codes(upto 4pts),
			SK:Flail #codes(upto 4pts),
			SK:Gesture #codes(upto 4pts),
			SK:Hidden Lore (Demon Lore) #codes(upto 4pts),
			SK:Hidden Lore (Undead Lore) #codes(upto 4pts),
			SK:Hiking #codes(upto 4pts),
			SK:Interrogation #codes(upto 4pts),
			SK:Lance #codes(upto 4pts),
			SK:Observation #codes(upto 4pts),
			SK:Polearm #codes(upto 4pts),
			SK:Shield (Shield) #codes(upto 4pts),
			SK:Spear #codes(upto 4pts),
			SK:Stealth #codes(upto 4pts),
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts),
			SK:Thrown Weapon (Spear) #codes(upto 4pts),
			SK:Throwing #codes(upto 4pts),
			SK:Two-Handed Axe/Mace #codes(upto 4pts),
			SK:Two-Handed Sword #codes(upto 4pts),
			SK:Two-Handed Flail #codes(upto 4pts),
			#newitem(SK:Physiology ([Secondary Monster Type]), IQ/H, tl(0-12), default(IQ - 6, SK:Diagnosis - 5, SK:Physician - 5, SK:Surgery - 5), page(B213), cat(_General, Medical, Natural Sciences),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Physiology")) #codes(upto 1pts)),
			#newitem(SK:Psychology ([Secondary Monster Type]), IQ/H, default(IQ - 6, SK:Sociology - 4), page(B216), cat(_General, Medical, Social Sciences/Humanities),x(#InputReplace("Please specify a monster type:", "[Secondary Monster Type]", "monster", "Psychology")) #codes(upto 1pts)),
			#newitem(SK:Riding (Equines), DX/A, default(DX - 5, SK:Animal Handling - 3, SK:Riding - 10), page(B217), cat(_General, Animal) #codes(upto 4pts))_
		)_
	)

Psionicist (Dungeon Fantasy), displaycost(varies), cost(0),
	description(Psionic advantages all in one place.),
	page(DF3:40),
	noresync(yes),
	needs(AD:Unusual Background (Psionic)),
	select1(_
		text("Any character can become a psionicist, all they need is the appropriate Unusual Background."),
		pointswanted(atleast 0, upto 1000),
		itemswanted(atleast 0, upto 1000),
		multitype(yes),
		list(_
			AD:Unusual Background (Psionic),
			AD:Psi Talent,
			AD:Psionic Clairsentience,
			AD:Psionic Damage Resistance #codes(upto 6, downto 1),
			AD:Psionic Detect (Psionics),
			AD:Psionic Affliction (Mind Blast),
			AD:Psionic Mind Control,
			AD:Psionic Mind Reading,
			AD:Psionic Mind Shield #codes(upto 6, downto 1),
			AD:Psionic Psychometry,
			AD:Psionic Para-Radar,
			AD:Psionic Telecommunication (Telesend),
			AD:Psionic Telekinesis #codes(upto 10, downto 1),
			SK:Hypnotism #codes(upto 4pts),
			SK:Mental Strength #codes(upto 4pts),
			SK:Mind Block #codes(upto 4pts)_
		)_
	)

*******************************************************************************************************\[STOP]
[GROUPS]
******************************************************************************************************\[START]
<AllAdvantages>
AD:Widget-Worker
AD:Halfling Marksmanship
AD:Elder Gift
AD:Pickaxe Penchant
AD:Forest Guardian

<AllAdvantagesMental>
AD:Widget-Worker
AD:Halfling Marksmanship
AD:Elder Gift
AD:Pickaxe Penchant
AD:Forest Guardian

<Elder Gift>
SK:Alchemy
SK:Hidden Lore
SK:Occultism
SK:Thaumatology

<Forest Guardian>
SK:Bow
SK:Camouflage
SK:Fast-Draw (Arrow)
SK:Stealth
SK:Survival (Woodlands)

<Halfling Marksmanship>
SK:Bow
SK:Sling
SK:Throwing
SK:Thrown Weapon (Dart)
SK:Thrown Weapon (Knife)
SK:Thrown Weapon (Stick)

<Pickaxe Penchant>
SK:Axe/Mace
SK:Forced Entry
SK:Prospecting
SK:Thrown Weapon (Axe/Mace)
SK:Two-Handed Axe/Mace

<Widget Worker>
SK:Armoury (Missile Weapons)
SK:Forced Entry
SK:Lockpicking
SK:Scrounging
SK:Traps

<RacialTemplates>

<AllSpellsHoly>
"SP:Spell-Archery (Holy)"

<AllSpellsDruidic>
"SP:Spell-Archery (Druidic)"

<AllSpellsUnholy>
"SP:Spell-Archery (Unholy)"
"SP:Armor (Unholy)"
"SP:Aura (Unholy)"
"SP:Coolness (Unholy)"
"SP:Darkness (Unholy)"
"SP:Death Vision (Unholy)"
"SP:Debility (Unholy)"
"SP:Decay (Unholy)"
"SP:Detect Magic (Unholy)"
"SP:Detect Poison (Unholy)"
"SP:Fear (Unholy)"
"SP:Final Rest (Unholy)"
"SP:Frailty (Unholy)"
"SP:Itch (Unholy)"
"SP:Night Vision (Unholy)"
"SP:Recover Energy (Unholy)"
"SP:Sense Life (Unholy)"
"SP:Sense Spirit (Unholy)"
"SP:Shield (Unholy)"
"SP:Silence (Unholy)"
"SP:Stench (Unholy)"
"SP:Thunderclap (Unholy)"
"SP:Blackout (Unholy)"
"SP:Blight (Unholy)"
"SP:Clumsiness (Unholy)"
"SP:Command (Unholy)"
"SP:Compel Lie (Unholy)"
"SP:Compel Truth (Unholy)"
"SP:Control Zombie (Unholy)"
"SP:Dark Vision (Unholy)"
"SP:Foul Water (Unholy)"
"SP:Gloom (Unholy)"
"SP:Great Voice (Unholy)"
"SP:Pain (Unholy)"
"SP:Panic (Unholy)"
"SP:Persuasion (Unholy)"
"SP:Poison Food (Unholy)"
"SP:Resist Acid (Unholy)"
"SP:Resist Cold (Unholy)"
"SP:Resist Disease (Unholy)"
"SP:Resist Fire (Unholy)"
"SP:Resist Lightning (Unholy)"
"SP:Resist Pain (Unholy)"
"SP:Resist Poison (Unholy)"
"SP:Resist Pressure (Unholy)"
"SP:Seeker (Unholy)"
"SP:Shape Darkness (Unholy)"
"SP:Steal Energy (Unholy)"
"SP:Strike Blind (Unholy)"
"SP:Strike Deaf (Unholy)"
"SP:Strike Dumb (Unholy)"
"SP:Summon Spirit (Unholy)"
"SP:Terror (Unholy)"
"SP:Truthsayer (Unholy)"
"SP:Turn Spirit (Unholy)"
"SP:Turn Zombie (Unholy)"
"SP:Vexation (Unholy)"
"SP:Weaken Blood (Unholy)"
"SP:Affect Spirits (Unholy)"
"SP:Astral Vision (Unholy)"
"SP:Body of Shadow (Unholy)"
"SP:Command Spirit ([Spirit]; Unholy)"
"SP:Destroy Air (Unholy)"
"SP:Destroy Water (Unholy)"
"SP:Dispel Possession (Unholy)"
"SP:Foolishness (Unholy)"
"SP:Hunger (Unholy)"
"SP:Icy Weapon (Unholy)"
"SP:Madness (Unholy)"
"SP:Magic Resistance (Unholy)"
"SP:Nightmare (Unholy)"
"SP:Oath (Unholy)"
"SP:Paralyze Limb (Unholy)"
"SP:Pestilence (Unholy)"
"SP:Repel Spirits (Unholy)"
"SP:See Secrets (Unholy)"
"SP:Sensitize (Unholy)"
"SP:Silver Tongue (Unholy)"
"SP:Slow Healing (Unholy)"
"SP:Steal Vitality (Unholy)"
"SP:Strengthen Will (Unholy)"
"SP:Suspended Animation (Unholy)"
"SP:Thirst (Unholy)"
"SP:Water to Wine (Unholy)"
"SP:Weaken Will (Unholy)"
"SP:Wither Plant (Unholy)"
"SP:Zombie (Unholy)"
"SP:Agonize (Unholy)"
"SP:Astral Block (Unholy)"
"SP:Banish (Unholy)"
"SP:Curse (Unholy)"
"SP:Deathtouch (Unholy)"
"SP:Dehydrate (Unholy)"
"SP:Dispel Magic (Unholy)"
"SP:Divination (Astrology; Unholy)"
"SP:Divination (Augury; Unholy)"
"SP:Divination (Cartomancy; Unholy)"
"SP:Divination (Crystal-Gazing; Unholy)"
"SP:Divination (Dactylomancy; Unholy)"
"SP:Divination (Extispicy; Unholy)"
"SP:Divination (Gastromancy; Unholy)"
"SP:Divination (Geomancy; Unholy)"
"SP:Divination (Lecanomancy; Unholy)"
"SP:Divination (Numerology; Unholy)"
"SP:Divination (Oneiromancy; Unholy)"
"SP:Divination (Physiognomy; Unholy)"
"SP:Divination (Pyromancy; Unholy)"
"SP:Divination (Sortilege; Unholy)"
"SP:Divination (Symbol-Casting; Unholy)"
"SP:Flesh to Stone (Unholy)"
"SP:Fool's Banquet (Unholy)"
"SP:Frostbite (Unholy)"
"SP:Gift of Letters (Unholy)"
"SP:Gift of Tongues (Unholy)"
"SP:Mindlessness (Unholy)"
"SP:Ruin (Unholy)"
"SP:Stop Healing (Unholy)"
"SP:Suspend Curse (Unholy)"
"SP:Total Paralysis (Unholy)"
"SP:Vigil (Unholy)"
"SP:Earthquake (Unholy)"
"SP:Entrap Spirit (Unholy)"
"SP:Mass Zombie (Unholy)"
"SP:Pentagram (Unholy)"
"SP:Remove Curse (Unholy)"
"SP:Rotting Death (Unholy)"
"SP:Storm (Unholy)"
"SP:Suspend Mana (Unholy)"
"SP:Bind Spirit ([Spirit]; Unholy)"
"SP:Bind Spirit (Banshees; Unholy)"
"SP:Bind Spirit (Manitous; Unholy)"
"SP:Bind Spirit (Specters; Unholy)"
"SP:Drain Mana (Unholy)"
"SP:Possession (Unholy)"
"SP:Summon Demon (Unholy)"

*******************************************************************************************************\[STOP]
[EQUIPMENT]
******************************************************************************************************\[START]

*<Concoctions - Poisons>
#MergeTags in "EQ:Bladeblack (Utility)" with "mods(Pixie Shot)"
#MergeTags in "EQ:Monster Drool (Utility)" with "mods(Pixie Shot)"
#MergeTags in "EQ:Arrow" with "mods(Arrow)"

*******************************************************************************************************\[STOP]
[MODIFIERS]
******************************************************************************************************\[START]
<_General>
Accessibility: Can only be powered by Energy Reserve, -5%, shortname(Can only be powered by ER), group(_General), page(P119)
Mana Sensitive, -10%, group(_General), page(DF3:13)

<Equipment>
_Perk: Better Power Item, 0, shortname(Better Power Item), group(Equipment), page(DF3:6),
	gives(_
		=+@if((1.5 * owner::cost) > 26000 THEN 40 ELSE _
		@if((1.5 * owner::cost) > 18000 THEN 35 ELSE _
		@if((1.5 * owner::cost) > 12000 THEN 30 ELSE _
		@if((1.5 * owner::cost) > 7000 THEN 25 ELSE _
		@if((1.5 * owner::cost) > 6200 THEN 20 ELSE _
		@if((1.5 * owner::cost) > 5500 THEN 19 ELSE _
		@if((1.5 * owner::cost) > 4900 THEN 18 ELSE _
		@if((1.5 * owner::cost) > 4300 THEN 17 ELSE _
		@if((1.5 * owner::cost) > 3800 THEN 16 ELSE _
		@if((1.5 * owner::cost) > 3300 THEN 15 ELSE _
		@if((1.5 * owner::cost) > 2800 THEN 14 ELSE _
		@if((1.5 * owner::cost) > 2400 THEN 13 ELSE _
		@if((1.5 * owner::cost) > 2000 THEN 12 ELSE _
		@if((1.5 * owner::cost) > 1700 THEN 11 ELSE _
		@if((1.5 * owner::cost) > 1400 THEN 10 ELSE _
		@if((1.5 * owner::cost) > 1100 THEN 9 ELSE _
		@if((1.5 * owner::cost) > 880 THEN 8 ELSE _
		@if((1.5 * owner::cost) > 670 THEN 7 ELSE _
		@if((1.5 * owner::cost) > 490 THEN 6 ELSE _
		@if((1.5 * owner::cost) > 340 THEN 5 ELSE _
		@if((1.5 * owner::cost) > 220 THEN 4 ELSE _
		@if((1.5 * owner::cost) > 120 THEN 3 ELSE _
		@if((1.5 * owner::cost) > 50 THEN 2 ELSE 1_
		))))))))))))))))))))))) to ST:Power Item _
	), description(Only available to Dark Ones with the Better Power Item perk)

_Dungeon Fantasy Perk: Better Power Item, 0, shortname(Better Power Item), group(Equipment), page(DF3:6),
	gives(_
		=+@if((1.5 * owner::cost) > 26000 THEN 40 ELSE _
		@if((1.5 * owner::cost) > 18000 THEN 35 ELSE _
		@if((1.5 * owner::cost) > 12000 THEN 30 ELSE _
		@if((1.5 * owner::cost) > 7000 THEN 25 ELSE _
		@if((1.5 * owner::cost) > 6200 THEN 20 ELSE _
		@if((1.5 * owner::cost) > 5500 THEN 19 ELSE _
		@if((1.5 * owner::cost) > 4900 THEN 18 ELSE _
		@if((1.5 * owner::cost) > 4300 THEN 17 ELSE _
		@if((1.5 * owner::cost) > 3800 THEN 16 ELSE _
		@if((1.5 * owner::cost) > 3300 THEN 15 ELSE _
		@if((1.5 * owner::cost) > 2800 THEN 14 ELSE _
		@if((1.5 * owner::cost) > 2400 THEN 13 ELSE _
		@if((1.5 * owner::cost) > 2000 THEN 12 ELSE _
		@if((1.5 * owner::cost) > 1700 THEN 11 ELSE _
		@if((1.5 * owner::cost) > 1400 THEN 10 ELSE _
		@if((1.5 * owner::cost) > 1100 THEN 9 ELSE _
		@if((1.5 * owner::cost) > 880 THEN 8 ELSE _
		@if((1.5 * owner::cost) > 670 THEN 7 ELSE _
		@if((1.5 * owner::cost) > 490 THEN 6 ELSE _
		@if((1.5 * owner::cost) > 340 THEN 5 ELSE _
		@if((1.5 * owner::cost) > 220 THEN 4 ELSE _
		@if((1.5 * owner::cost) > 120 THEN 3 ELSE _
		@if((1.5 * owner::cost) > 50 THEN 2 ELSE 1_
		))))))))))))))))))))))) to ST:Power Item _
	), description(Only available to Dark Ones with the Better Power Item perk)

Dungeon Fantasy: Dwarven Gear, -10%, shortname(Dwarven Gear), tier(1), page(DF3:6), group(equipment)
Dungeon Fantasy: Elven Gear, -10%, shortname(Elven Gear), tier(1), page(DF3:7,8), group(equipment)

Dungeon Fantasy: SM -1 Faerie Equipment, *1, gives(*1/2 to owner::baseweight), shortname(SM-1 Faerie), tier(1)
Dungeon Fantasy: SM -2 Faerie Equipment, *1, gives(*1/5 to owner::baseweight), shortname(SM-2 Faerie), tier(1)
Dungeon Fantasy: SM -4 Faerie Equipment, *1, gives(*1/20 to owner::baseweight), shortname(SM-4 Faerie), tier(1)
Dungeon Fantasy: SM -6 Faerie Equipment, *1, gives(*1/100 to owner::baseweight), shortname(SM-6 Faerie), tier(1)
Dungeon Fantasy: SM -1 Mundane Equipment, *1/2, gives(*1/2 to owner::baseweight), shortname(SM-1 Mundane), tier(1)
Dungeon Fantasy: SM -2 Mundane Equipment, *1/5, gives(*1/5 to owner::baseweight), shortname(SM-2 Mundane), tier(1)
Dungeon Fantasy: SM -4 Mundane Equipment, *1/20, gives(*1/20 to owner::baseweight), shortname(SM-4 Mundane), tier(1)
Dungeon Fantasy: SM -6 Mundane Equipment, *1/100, gives(*1/100 to owner::baseweight), shortname(SM-6 Mundane), tier(1)

Dungeon Fantasy: SM -1 Faerie Tool, *1, group(Equipment), shortname(SM-1 Faerie), tier(1),
	gives(*2/3 to owner::baseweight,
		*3/4 to owner::minst,
		-1 to owner::damage,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "1" ),
			( "3", "2" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C,1" ), ( "1, 2", "C,1" ), ( "1,2*", "C,1*" ),( "1, 2*", "C,1*" ),
			( "2,3", "1,2" ), ( "2, 3", "1,2" ), ( "2,3*", "1,2*" ),( "2, 3*", "1,2*" ),
			( "1-3", "C-2" ), ( "1-3*", "C-2*" ),
			( "1-4", "C-2" ), ( "1-4*", "C-2*" ),
			( "1-5*", "C-3*" ),
			( "1-6*", "C-4*" ),
			( "1-7*", "C-4*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -2 Faerie Tool, *1, group(Equipment), shortname(SM-2 Faerie), tier(1),
	gives(*1/3 to owner::baseweight,
		*1/2 to owner::minst,
		-2 to owner::damage,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "1" ),
			( "3", "1" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C,1" ), ( "1, 2", "C,1" ), ( "1,2*", "C,1*" ),( "1, 2*", "C,1*" ),
			( "2,3", "1" ), ( "2, 3", "1" ), ( "2, 3*", "1" ), ( "2,3*", "1" ),
			( "1-3", "C-1" ), ( "1-3*", "C-1*" ),
			( "1-4", "C-2" ), ( "1-4*", "C-2*" ),
			( "1-5*", "C-2*" ),
			( "1-6*", "C-3*" ),
			( "1-7*", "C-3*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -4 Faerie Tool, *1, group(Equipment), shortname(SM-4 Faerie), tier(1),
	gives(*1/8 to owner::baseweight,
		*1/4 to owner::minst,
		-4 to owner::damage,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "C" ),
			( "3", "C" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C" ), ( "1, 2", "C" ), ( "1,2*", "C" ), ( "1, 2*", "C" ),
			( "2,3", "C" ), ( "2, 3", "C" ), ( "2,3*", "C" ), ( "2, 3*", "C" ),
			( "1-3", "C" ), ( "1-3*", "C" ),
			( "1-4", "C-1" ), ( "1-4*", "C-1*" ),
			( "1-5*", "C-1*" ),
			( "1-6*", "C-1*" ),
			( "1-7*", "C-1*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -6 Faerie Tool, *1, group(Equipment), shortname(SM-6 Faerie), tier(1),
	gives(*1/25 to owner::baseweight,
		*1/10 to owner::minst,
		-6 to owner::damage,
		=nobase to owner::reach$,
		="C" to owner::reach$)
* Reach reduced to 1/12, everything is reach C
Dungeon Fantasy: SM -1 Mundane Tool, *2/3, group(Equipment), shortname(SM-1 Mundane), tier(1),
	gives(*2/3 to owner::baseweight,
		*3/4 to owner::minst,
		-1 to owner::damage,
		0.5 to owner::armordivisor,
		*2/3 to owner::rangehalfdam,
		*2/3 to owner::rangemax,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "1" ),
			( "3", "2" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C,1" ), ( "1, 2", "C,1" ), ( "1,2*", "C,1*" ), ( "1, 2*", "C,1*" ),
			( "2,3", "1,2" ),( "2, 3", "1,2" ), ( "2,3*", "1,2*" ), ( "2, 3*", "1,2*" ),
			( "1-3", "C-2" ), ( "1-3*", "C-2*" ),
			( "1-4", "C-2" ), ( "1-4*", "C-2*" ),
			( "1-5*", "C-3*" ),
			( "1-6*", "C-4*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -2 Mundane Tool, *1/3, group(Equipment), shortname(SM-2 Mundane), tier(1),
	gives(*1/3 to owner::baseweight,
		*1/2 to owner::minst,
		-2 to owner::damage,
		0.2 to owner::armordivisor,
		*1/2 to owner::rangehalfdam,
		*1/2 to owner::rangemax,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "1" ),
			( "3", "1" ),
			( "C,1", "C" ),
			( "1,2", "C,1" ), ( "1,2*", "C,1*" ),
			( "2,3", "1" ), ( "2,3*", "1" ),
			( "1-3", "C-1" ), ( "1-3*", "C-1*" ),
			( "1-4", "C-2" ), ( "1-4*", "C-2*" ),
			( "1-5*", "C-2*" ),
			( "1-6*", "C-3*" ),
			( "1-7*", "C-3*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -4 Mundane Tool, *1/8, group(Equipment), shortname(SM-4 Mundane), tier(1),
	gives(*1/8 to owner::baseweight,
		*1/4 to owner::minst,
		-4 to owner::damage,
		0.1 to owner::armordivisor,
		*1/4 to owner::rangehalfdam,
		*1/4 to owner::rangemax,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "C" ),
			( "3", "C" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C" ), ( "1, 2", "C" ), ( "1,2*", "C" ), ( "1, 2*", "C" ),
			( "2,3", "C" ), ( "2, 3", "C" ), ( "2,3*", "C" ), ( "2, 3*", "C" ),
			( "1-3", "C" ), ( "1-3*", "C" ),
			( "1-4", "C-1" ), ( "1-4*", "C-1*" ),
			( "1-5*", "C-1*" ),
			( "1-6*", "C-1*" ),
			( "1-7*", "C-1*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -6 Mundane Tool, *1/12, group(Equipment), shortname(SM-6 Mundane), tier(1),
	gives(*1/25 to owner::baseweight,
		*1/10 to owner::minst,
		-6 to owner::damage,
		0.1 to owner::armordivisor,
		*1/12 to owner::rangehalfdam,
		*1/12 to owner::rangemax,
		=nobase to owner::reach$,
		="C" to owner::reach$)
* Reach reduced to 1/12, everything is reach C

<_Power Modifier>
Psionics, -10%, group(_Power Modifier), page(DF3:40)
Unholy, -10%, group(_Power Modifier), page(DF3:27)

<Arrow>
Boffer Point (TL3), *2, page(DF3:23), group(Arrow)

<Bow Quality>
Boffer Point (TL3), +0, page(DF3:23), group(Bow Quality),
	addmode(Bodkin Point,
			damage(0),
			damtype(na),
			armordivisor(1),
			lc(%copyfirst),
			acc(%copyfirst),
			calcrange(%copyfirst),
			rangehalfdam(%copyfirst),
			rangemax(%copyfirst),
			rof(%copyfirst),
			shots(%copyfirst),
			minst(%copyfirst),
			bulk(%copyfirst),
			skillused(%copyfirst),
			rcl(%copyfirst),
			notes(%copyfirst)_
			)

<Bow Quality>
Dungeon Fantasy: Bow-Harp, +5 CF, gives(+1.5 to owner::baseweight), group(Bow Quality), page(DF3:21), shortname(Bow-Harp)

<Doesn't Breathe>
Oxygen Absorption, -25%, group(Doesn't Breathe), page(B49)

<Energy Reserve>
Abilities Only, -10%, group(Energy Reserve), page(P119)
One Power, -50%, group(Energy Reserve), page(P119)
Slow Recharge, -20%/-60%, upto(2), levelnames(1 pt/hr, 1 pt/day), group(Energy Reserve), page(P119)
Special Recharge, -70%/-80%, upto(2), levelnames( , energy bleeds away at 1 pt/sec), group(Energy Reserve), page(P119)
Stunts Only, -10%, group(Energy Reserve), page(P119)

<Enhanced Tracking>
Multiple Lock-Ons, +20%, group(Enhanced Tracking), page(P49)

<Injury Tolerance>
Damage Reduction, +50/+75, upto(3), levelnames(/2, /3, /4), mods(Limited Defense), group(Injury Tolerance), page(P53)

<Limited Defense>
Limited (Crushing only), -40%, group(Damage Resistance), page(DF3:38)
Limited Defense: Psi, -20%, group(Limited Defense), page(B46)

<Mind Shield>
Psi, -50%, group(Mind Shield), page(B70)

<Permeation>
Extended (type of material), +20%/+40%, group(Permeation), page(P66)

<Pixie Shot>
Pixie Shot, *0.5, group(Pixie Shot), page(DF3:9)

<_Power Modifier>
Unholy, -10%, group(_Power Modifier), page(DF3:27)

<Regeneration>
Not vs. Fire or Acid, -20%, group(Regeneration), page(DF3:15)

<Secondary Effects>
Incapacitation: Unconsciousness, +40%, shortname(Unconsciousness), group(Secondary Effects), page(B36)

<Supernatural Feature>
Not Quite Right, -5, group(Supernatural Feature), page(DF3:12)

<Two-Weapons>
Has Ambidexterity, -1, cat(Two-Weapons), page(DF3:41), needs(AD:Ambidexterity)

<Armor>
Dungeon Fantasy: SM -1 Faerie Armor, *1, gives(*1/2 to owner::baseweight, -1 to owner::dr), shortname(SM-1 Faerie), tier(1)
Dungeon Fantasy: SM -2 Faerie Armor, *1, gives(*1/5 to owner::baseweight, -2 to owner::dr), shortname(SM-2 Faerie), tier(1)
Dungeon Fantasy: SM -4 Faerie Armor, *1, gives(*1/20 to owner::baseweight, -4 to owner::dr), shortname(SM-4 Faerie), tier(1)
Dungeon Fantasy: SM -6 Faerie Armor, *1, gives(*1/100 to owner::baseweight, -6 to owner::dr), shortname(SM-6 Faerie), tier(1)
Dungeon Fantasy: SM -1 Mundane Armor, *1/2, gives(*1/2 to owner::baseweight, *1/2 to owner::dr), shortname(SM-1 Mundane), tier(1)
Dungeon Fantasy: SM -2 Mundane Armor, *1/5, gives(*1/5 to owner::baseweight, *1/5 to owner::dr), shortname(SM-2 Mundane), tier(1)
Dungeon Fantasy: SM -4 Mundane Armor, *1/20, gives(*1/20 to owner::baseweight, *1/20 to owner::dr), shortname(SM-4 Mundane), tier(1)
Dungeon Fantasy: SM -6 Mundane Armor, *1/100, gives(*1/100 to owner::baseweight, *1/100 to owner::dr), shortname(SM-6 Mundane), tier(1)

<Melee Quality>
Dungeon Fantasy: SM -1 Faerie Weapon, *1, group(Melee Quality), shortname(SM-1 Faerie), tier(1),
	gives(*2/3 to owner::baseweight,
		*3/4 to owner::minst,
		-1 to owner::damage,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "1" ),
			( "3", "2" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C,1" ), ( "1, 2", "C,1" ), ( "1,2*", "C,1*" ),( "1, 2*", "C,1*" ),
			( "2,3", "1,2" ), ( "2, 3", "1,2" ), ( "2,3*", "1,2*" ),( "2, 3*", "1,2*" ),
			( "1-3", "C-2" ), ( "1-3*", "C-2*" ),
			( "1-4", "C-2" ), ( "1-4*", "C-2*" ),
			( "1-5*", "C-3*" ),
			( "1-6*", "C-4*" ),
			( "1-7*", "C-4*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -2 Faerie Weapon, *1, group(Melee Quality), shortname(SM-2 Faerie), tier(1),
	gives(*1/3 to owner::baseweight,
		*1/2 to owner::minst,
		-2 to owner::damage,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "1" ),
			( "3", "1" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C,1" ), ( "1, 2", "C,1" ), ( "1,2*", "C,1*" ),( "1, 2*", "C,1*" ),
			( "2,3", "1" ), ( "2, 3", "1" ), ( "2, 3*", "1" ), ( "2,3*", "1" ),
			( "1-3", "C-1" ), ( "1-3*", "C-1*" ),
			( "1-4", "C-2" ), ( "1-4*", "C-2*" ),
			( "1-5*", "C-2*" ),
			( "1-6*", "C-3*" ),
			( "1-7*", "C-3*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -4 Faerie Weapon, *1, group(Melee Quality), shortname(SM-4 Faerie), tier(1),
	gives(*1/8 to owner::baseweight,
		*1/4 to owner::minst,
		-4 to owner::damage,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "C" ),
			( "3", "C" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C" ), ( "1, 2", "C" ), ( "1,2*", "C" ), ( "1, 2*", "C" ),
			( "2,3", "C" ), ( "2, 3", "C" ), ( "2,3*", "C" ), ( "2, 3*", "C" ),
			( "1-3", "C" ), ( "1-3*", "C" ),
			( "1-4", "C-1" ), ( "1-4*", "C-1*" ),
			( "1-5*", "C-1*" ),
			( "1-6*", "C-1*" ),
			( "1-7*", "C-1*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -6 Faerie Weapon, *1, group(Melee Quality), shortname(SM-6 Faerie), tier(1),
	gives(*1/25 to owner::baseweight,
		*1/10 to owner::minst,
		-6 to owner::damage,
		=nobase to owner::reach$,
		="C" to owner::reach$)
* Reach reduced to 1/12, everything is reach C
Dungeon Fantasy: SM -1 Mundane Weapon, *2/3, group(Melee Quality), shortname(SM-1 Mundane), tier(1),
	gives(*2/3 to owner::baseweight,
		*3/4 to owner::minst,
		-1 to owner::damage,
		0.5 to owner::armordivisor,
		*2/3 to owner::rangehalfdam,
		*2/3 to owner::rangemax,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "1" ),
			( "3", "2" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C,1" ), ( "1, 2", "C,1" ), ( "1,2*", "C,1*" ), ( "1, 2*", "C,1*" ),
			( "2,3", "1,2" ),( "2, 3", "1,2" ), ( "2,3*", "1,2*" ), ( "2, 3*", "1,2*" ),
			( "1-3", "C-2" ), ( "1-3*", "C-2*" ),
			( "1-4", "C-2" ), ( "1-4*", "C-2*" ),
			( "1-5*", "C-3*" ),
			( "1-6*", "C-4*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -2 Mundane Weapon, *1/3, group(Melee Quality), shortname(SM-2 Mundane), tier(1),
	gives(*1/3 to owner::baseweight,
		*1/2 to owner::minst,
		-2 to owner::damage,
		0.2 to owner::armordivisor,
		*1/2 to owner::rangehalfdam,
		*1/2 to owner::rangemax,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "1" ),
			( "3", "1" ),
			( "C,1", "C" ),
			( "1,2", "C,1" ), ( "1,2*", "C,1*" ),
			( "2,3", "1" ), ( "2,3*", "1" ),
			( "1-3", "C-1" ), ( "1-3*", "C-1*" ),
			( "1-4", "C-2" ), ( "1-4*", "C-2*" ),
			( "1-5*", "C-2*" ),
			( "1-6*", "C-3*" ),
			( "1-7*", "C-3*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -4 Mundane Weapon, *1/8, group(Melee Quality), shortname(SM-4 Mundane), tier(1),
	gives(*1/8 to owner::baseweight,
		*1/4 to owner::minst,
		-4 to owner::damage,
		0.1 to owner::armordivisor,
		*1/4 to owner::rangehalfdam,
		*1/4 to owner::rangemax,
		=nobase to owner::reach$,
		=$/textindexedvalue( {$modetag(reach)},
			( "C", "C" ),
			( "1", "C" ),
			( "2", "C" ),
			( "3", "C" ),
			( "C,1", "C" ), ( "C, 1", "C" ),
			( "1,2", "C" ), ( "1, 2", "C" ), ( "1,2*", "C" ), ( "1, 2*", "C" ),
			( "2,3", "C" ), ( "2, 3", "C" ), ( "2,3*", "C" ), ( "2, 3*", "C" ),
			( "1-3", "C" ), ( "1-3*", "C" ),
			( "1-4", "C-1" ), ( "1-4*", "C-1*" ),
			( "1-5*", "C-1*" ),
			( "1-6*", "C-1*" ),
			( "1-7*", "C-1*" ),
			( "", "" ),
		else "Error" ) to owner::reach$)
Dungeon Fantasy: SM -6 Mundane Weapon, *1/12, group(Melee Quality), shortname(SM-6 Mundane), tier(1),
	gives(*1/25 to owner::baseweight,
		*1/10 to owner::minst,
		-6 to owner::damage,
		0.1 to owner::armordivisor,
		*1/12 to owner::rangehalfdam,
		*1/12 to owner::rangemax,
		=nobase to owner::reach$,
		="C" to owner::reach$)
* Reach reduced to 1/12, everything is reach C

<Bow Quality>
Dungeon Fantasy: SM -1 Faerie Weapon, *1, group(Bow Quality), shortname(SM-1 Faerie), tier(1),
	gives(*2/3 to owner::baseweight,
		*3/4 to owner::minst,
		-1 to owner::damage)
Dungeon Fantasy: SM -2 Faerie Weapon, *1, group(Bow Quality), shortname(SM-2 Faerie), tier(1),
	gives(*1/3 to owner::baseweight,
		*1/2 to owner::minst,
		-2 to owner::damage)
Dungeon Fantasy: SM -4 Faerie Weapon, *1, group(Bow Quality), shortname(SM-4 Faerie), tier(1),
	gives(*1/8 to owner::baseweight,
		*1/4 to owner::minst,
		-4 to owner::damage)
Dungeon Fantasy: SM -6 Faerie Weapon, *1, group(Bow Quality), shortname(SM-6 Faerie), tier(1),
	gives(*1/25 to owner::baseweight,
		*1/10 to owner::minst,
		-6 to owner::damage)
Dungeon Fantasy: SM -1 Mundane Weapon, *2/3, group(Bow Quality), shortname(SM-1 Mundane), tier(1),
	gives(*2/3 to owner::baseweight,
		*3/4 to owner::minst,
		-1 to owner::damage,
		*2/3 to owner::rangehalfdam,
		*2/3 to owner::rangemax)
Dungeon Fantasy: SM -2 Mundane Weapon, *1/3, group(Bow Quality), shortname(SM-2 Mundane), tier(1),
	gives(*1/3 to owner::baseweight,
		*1/2 to owner::minst,
		-2 to owner::damage,
		*1/2 to owner::rangehalfdam,
		*1/2 to owner::rangemax)
Dungeon Fantasy: SM -4 Mundane Weapon, *1/8, group(Bow Quality), shortname(SM-4 Mundane), tier(1),
	gives(*1/8 to owner::baseweight,
		*1/4 to owner::minst,
		-4 to owner::damage,
		*1/4 to owner::rangehalfdam,
		*1/4 to owner::rangemax)
Dungeon Fantasy: SM -6 Mundane Weapon, *1/25, group(Bow Quality), shortname(SM-6 Mundane), tier(1),
	gives(*1/25 to owner::baseweight,
		*1/10 to owner::minst,
		-6 to owner::damage,
		*1/12 to owner::rangehalfdam,
		*1/12 to owner::rangemax)

*******************************************************************************************************\[STOP]
[LISTS]
******************************************************************************************************\[START]
<Evil Cleric Abilities>
AD:Unholy Might Ally (Demon or undead of equal points),
AD:Unholy Might Channeling,
AD:Unholy Might Detect (Evil),
AD:Unholy Might Detect (Good),
AD:Unholy Might Detect (Supernatural Beings),
AD:Unholy Might Dread Touch,
AD:Unholy Might Medium,
AD:Unholy Might Patron,
AD:Unholy Might Spirit Empathy,
AD:Unholy Might Terror

<Unholy Warrior Abilities>
AD:Unholy Might Ally (Demon or undead of equal points),
AD:Unholy Might Channeling,
AD:Unholy Might Detect (Evil),
AD:Unholy Might Detect (Good),
AD:Unholy Might Detect (Supernatural Beings),
AD:Unholy Might Dread Touch,
AD:Unholy Might Medium,
AD:Unholy Might Patron,
AD:Unholy Might Spirit Empathy,
AD:Unholy Might Terror

*******************************************************************************************************\[STOP]
[SPELLS]
******************************************************************************************************\[START]
<Meta-Spells:Me>
Spell-Archery, type(IQ/H), CountAsNeeds(Magical), ident(Magical), needs(SK:Bow>15, AD:Magery=3), page(DF3:41), mods(Spells), cat(Meta-Spells), shortcat(Me), prereqcount(0), class(Special), time(per underlying spell), duration(Until Shot), castingcost(3+), description(Prereq Count: 0 Prerequisites: Magery 3), magery(3)

<~Unholy - Air>
<~Unholy - Animal>
<~Unholy - Body Control>
<~Unholy - Communication & Empathy>
<~Unholy - Earth>
<~Unholy - Enchantment>
<~Unholy - Fire>
<~Unholy - Food>
<~Unholy - Gate>
<~Unholy - Healing>
<~Unholy - Illusion & Creation>
<~Unholy - Knowledge>
<~Unholy - Light & Darkness>
<~Unholy - Making & Breaking>
<~Unholy - Meta-Spells>
<~Unholy - Mind Control>
<~Unholy - Movement>
<~Unholy - Necromancy>
<~Unholy - Plant>
<~Unholy - Protection & Warning>
<~Unholy - Sound>
<~Unholy - Technological>
<~Unholy - Technology>
<~Unholy - Water>
<~Unholy - Weather>
<~Unholy PI 1>
<~Unholy PI 2>
<~Unholy PI 3>
<~Unholy PI 4>
<~Unholy PI 5>
<~Unholy PI 6>

<~Holy>

* PI 3
#Clone "SP:Spell-Archery"  as "SP:Spell-Archery (Holy)"
#ReplaceTags in "SP:Spell-Archery (Holy)" with "prereqcount(), cat(~Holy, ~Holy PI 3, ~Holy - Meta-Spells), shortcat(Me), CountAsNeed(Holy), ident(Holy), needs(AD:Power Investiture ()=3|ST: PI=3), magery(PI 3), description(Prereq: Power Investiture (Holy) 3)"

<~Druidic>

* PI 3
#Clone "SP:Spell-Archery"  as "SP:Spell-Archery (Druidic)"
#ReplaceTags in "SP:Spell-Archery (Druidic)" with "prereqcount(), cat(~Druidic, ~Druidic PI 3, ~Druidic - Meta-Spells), shortcat(Dru, Me), CountAsNeed(Druidic), ident(Druidic), needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), magery(PI 3), description(Prereq: Power Investiture (Druidic) 3)"

<~Unholy>

* PI 3
#Clone "SP:Spell-Archery"  as "SP:Spell-Archery (Unholy)"
#ReplaceTags in "SP:Spell-Archery (Unholy)" with "prereqcount(), cat(~Unholy, ~Unholy PI 3, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"

<~Unholy>

* PI 1
#Clone "SP:Armor"  as "SP:Armor (Unholy)"
#ReplaceTags in "SP:Armor (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Protection & Warning), shortcat(Un, Pr), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Aura"  as "SP:Aura (Unholy)"
#ReplaceTags in "SP:Aura (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Coolness"  as "SP:Coolness (Unholy)"
#ReplaceTags in "SP:Coolness (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Water, ~Unholy - Protection & Warning), shortcat(Un, Wa, Pr), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Darkness"  as "SP:Darkness (Unholy)"
#ReplaceTags in "SP:Darkness (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Light & Darkness), shortcat(Un, L), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Death Vision"  as "SP:Death Vision (Unholy)"
#ReplaceTags in "SP:Death Vision (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Debility"  as "SP:Debility (Unholy)"
#ReplaceTags in "SP:Debility (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Decay"  as "SP:Decay (Unholy)"
#ReplaceTags in "SP:Decay (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Food), shortcat(Un, Fo), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Detect Magic"  as "SP:Detect Magic (Unholy)"
#ReplaceTags in "SP:Detect Magic (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Detect Poison"  as "SP:Detect Poison (Unholy)"
#ReplaceTags in "SP:Detect Poison (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Protection & Warning, ~Unholy - Healing), shortcat(Un, Pr, H), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Fear"  as "SP:Fear (Unholy)"
#ReplaceTags in "SP:Fear (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Final Rest"  as "SP:Final Rest (Unholy)"
#ReplaceTags in "SP:Final Rest (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Healing, ~Unholy - Necromancy), shortcat(Un, H, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Frailty"  as "SP:Frailty (Unholy)"
#ReplaceTags in "SP:Frailty (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Itch"  as "SP:Itch (Unholy)"
#ReplaceTags in "SP:Itch (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Night Vision"  as "SP:Night Vision (Unholy)"
#ReplaceTags in "SP:Night Vision (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Light & Darkness), shortcat(Un, L), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Recover Energy"  as "SP:Recover Energy (Unholy)"
#ReplaceTags in "SP:Recover Energy (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Healing), shortcat(Un, H), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Sense Life"  as "SP:Sense Life (Unholy)"
#ReplaceTags in "SP:Sense Life (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Sense Spirit"  as "SP:Sense Spirit (Unholy)"
#ReplaceTags in "SP:Sense Spirit (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Shield"  as "SP:Shield (Unholy)"
#ReplaceTags in "SP:Shield (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Protection & Warning), shortcat(Un, Pr), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Silence"  as "SP:Silence (Unholy)"
#ReplaceTags in "SP:Silence (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Sound), shortcat(Un, S), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Stench"  as "SP:Stench (Unholy)"
#ReplaceTags in "SP:Stench (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Air), shortcat(Un, Ai), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"
#Clone "SP:Thunderclap"  as "SP:Thunderclap (Unholy)"
#ReplaceTags in "SP:Thunderclap (Unholy)" with "cat(~Unholy, ~Unholy PI 1, ~Unholy - Sound), shortcat(Un, S), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=1|ST:Unholy PI=1), magery(PI 1), description(Prereq: Power Investiture (Unholy) 1)"

* PI 2
#Clone "SP:Blackout"  as "SP:Blackout (Unholy)"
#ReplaceTags in "SP:Blackout (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Light & Darkness), shortcat(Un, L), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Blight"  as "SP:Blight (Unholy)"
#ReplaceTags in "SP:Blight (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Plant), shortcat(Un, Pl), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Clumsiness"  as "SP:Clumsiness (Unholy)"
#ReplaceTags in "SP:Clumsiness (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Command"  as "SP:Command (Unholy)"
#ReplaceTags in "SP:Command (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Compel Lie"  as "SP:Compel Lie (Unholy)"
#ReplaceTags in "SP:Compel Lie (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Communication & Empathy, ~Unholy - Mind Control), shortcat(Un, C, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Compel Truth"  as "SP:Compel Truth (Unholy)"
#ReplaceTags in "SP:Compel Truth (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Control Zombie"  as "SP:Control Zombie (Unholy)"
#ReplaceTags in "SP:Control Zombie (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Dark Vision"  as "SP:Dark Vision (Unholy)"
#ReplaceTags in "SP:Dark Vision (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Light & Darkness), shortcat(Un, L), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Foul Water"  as "SP:Foul Water (Unholy)"
#ReplaceTags in "SP:Foul Water (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Water, ~Unholy - Food), shortcat(Un, Wa, Fo), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Gloom"  as "SP:Gloom (Unholy)"
#ReplaceTags in "SP:Gloom (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Light & Darkness), shortcat(Un, L), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Great Voice"  as "SP:Great Voice (Unholy)"
#ReplaceTags in "SP:Great Voice (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Sound), shortcat(Un, S), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Pain"  as "SP:Pain (Unholy)"
#ReplaceTags in "SP:Pain (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Panic"  as "SP:Panic (Unholy)"
#ReplaceTags in "SP:Panic (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Persuasion"  as "SP:Persuasion (Unholy)"
#ReplaceTags in "SP:Persuasion (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Poison Food"  as "SP:Poison Food (Unholy)"
#ReplaceTags in "SP:Poison Food (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Food), shortcat(Un, Fo), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Resist Acid"  as "SP:Resist Acid (Unholy)"
#ReplaceTags in "SP:Resist Acid (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Water, ~Unholy - Protection & Warning), shortcat(Un, Wa, Pr), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Resist Cold"  as "SP:Resist Cold (Unholy)"
#ReplaceTags in "SP:Resist Cold (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Fire), shortcat(Un, Fi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Resist Disease"  as "SP:Resist Disease (Unholy)"
#ReplaceTags in "SP:Resist Disease (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Healing, ~Unholy - Protection & Warning), shortcat(Un, H, Pr), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Resist Fire"  as "SP:Resist Fire (Unholy)"
#ReplaceTags in "SP:Resist Fire (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Fire), shortcat(Un, Fi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Resist Lightning"  as "SP:Resist Lightning (Unholy)"
#ReplaceTags in "SP:Resist Lightning (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Weather, ~Unholy - Air, ~Unholy - Protection & Warning), shortcat(Un, We, Ai, Pr), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Resist Pain"  as "SP:Resist Pain (Unholy)"
#ReplaceTags in "SP:Resist Pain (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Resist Poison"  as "SP:Resist Poison (Unholy)"
#ReplaceTags in "SP:Resist Poison (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Healing, ~Unholy - Protection & Warning), shortcat(Un, H, Pr), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Resist Pressure"  as "SP:Resist Pressure (Unholy)"
#ReplaceTags in "SP:Resist Pressure (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Protection & Warning), shortcat(Un, Pr), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Seeker"  as "SP:Seeker (Unholy)"
#ReplaceTags in "SP:Seeker (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Shape Darkness"  as "SP:Shape Darkness (Unholy)"
#ReplaceTags in "SP:Shape Darkness (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Light & Darkness), shortcat(Un, L), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Steal Energy"  as "SP:Steal Energy (Unholy)"
#ReplaceTags in "SP:Steal Energy (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Strike Blind"  as "SP:Strike Blind (Unholy)"
#ReplaceTags in "SP:Strike Blind (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Strike Deaf"  as "SP:Strike Deaf (Unholy)"
#ReplaceTags in "SP:Strike Deaf (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Strike Dumb"  as "SP:Strike Dumb (Unholy)"
#ReplaceTags in "SP:Strike Dumb (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Summon Spirit"  as "SP:Summon Spirit (Unholy)"
#ReplaceTags in "SP:Summon Spirit (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Terror"  as "SP:Terror (Unholy)"
#ReplaceTags in "SP:Terror (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Truthsayer"  as "SP:Truthsayer (Unholy)"
#ReplaceTags in "SP:Truthsayer (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Turn Spirit"  as "SP:Turn Spirit (Unholy)"
#ReplaceTags in "SP:Turn Spirit (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Turn Zombie"  as "SP:Turn Zombie (Unholy)"
#ReplaceTags in "SP:Turn Zombie (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Vexation"  as "SP:Vexation (Unholy)"
#ReplaceTags in "SP:Vexation (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"
#Clone "SP:Weaken Blood"  as "SP:Weaken Blood (Unholy)"
#ReplaceTags in "SP:Weaken Blood (Unholy)" with "cat(~Unholy, ~Unholy PI 2, ~Unholy - Body Control, ~Unholy - Necromancy), shortcat(Un, B, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=2|ST:Unholy PI=2), magery(PI 2), description(Prereq: Power Investiture (Unholy) 2)"

* PI 3
#Clone "SP:Affect Spirits"  as "SP:Affect Spirits (Unholy)"
#ReplaceTags in "SP:Affect Spirits (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Astral Vision"  as "SP:Astral Vision (Unholy)"
#ReplaceTags in "SP:Astral Vision (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Knowledge, ~Unholy - Necromancy), shortcat(Un, K, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Body of Shadow"  as "SP:Body of Shadow (Unholy)"
#ReplaceTags in "SP:Body of Shadow (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Light & Darkness), shortcat(Un, L), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Command Spirit ([Spirit])"  as "SP:Command Spirit ([Spirit]; Unholy)"
#ReplaceTags in "SP:Command Spirit ([Spirit]; Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Destroy Air"  as "SP:Destroy Air (Unholy)"
#ReplaceTags in "SP:Destroy Air (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Air), shortcat(Un, Ai), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Destroy Water"  as "SP:Destroy Water (Unholy)"
#ReplaceTags in "SP:Destroy Water (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Water), shortcat(Un, Wa), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Dispel Possession"  as "SP:Dispel Possession (Unholy)"
#ReplaceTags in "SP:Dispel Possession (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Foolishness"  as "SP:Foolishness (Unholy)"
#ReplaceTags in "SP:Foolishness (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Hunger"  as "SP:Hunger (Unholy)"
#ReplaceTags in "SP:Hunger (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Body Control, ~Unholy - Food), shortcat(Un, B, Fo), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Icy Weapon"  as "SP:Icy Weapon (Unholy)"
#ReplaceTags in "SP:Icy Weapon (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Water), shortcat(Un, Wa), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Madness"  as "SP:Madness (Unholy)"
#ReplaceTags in "SP:Madness (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Magic Resistance"  as "SP:Magic Resistance (Unholy)"
#ReplaceTags in "SP:Magic Resistance (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Nightmare"  as "SP:Nightmare (Unholy)"
#ReplaceTags in "SP:Nightmare (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Oath"  as "SP:Oath (Unholy)"
#ReplaceTags in "SP:Oath (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Paralyze Limb"  as "SP:Paralyze Limb (Unholy)"
#ReplaceTags in "SP:Paralyze Limb (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Pestilence"  as "SP:Pestilence (Unholy)"
#ReplaceTags in "SP:Pestilence (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Repel Spirits"  as "SP:Repel Spirits (Unholy)"
#ReplaceTags in "SP:Repel Spirits (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:See Secrets"  as "SP:See Secrets (Unholy)"
#ReplaceTags in "SP:See Secrets (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Sensitize"  as "SP:Sensitize (Unholy)"
#ReplaceTags in "SP:Sensitize (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Silver Tongue"  as "SP:Silver Tongue (Unholy)"
#ReplaceTags in "SP:Silver Tongue (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Sound), shortcat(Un, S), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Slow Healing"  as "SP:Slow Healing (Unholy)"
#ReplaceTags in "SP:Slow Healing (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Steal Vitality"  as "SP:Steal Vitality (Unholy)"
#ReplaceTags in "SP:Steal Vitality (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Strengthen Will"  as "SP:Strengthen Will (Unholy)"
#ReplaceTags in "SP:Strengthen Will (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Suspended Animation"  as "SP:Suspended Animation (Unholy)"
#ReplaceTags in "SP:Suspended Animation (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Healing), shortcat(Un, H), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Thirst"  as "SP:Thirst (Unholy)"
#ReplaceTags in "SP:Thirst (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Body Control, ~Unholy - Food), shortcat(Un, B, Fo), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Water to Wine"  as "SP:Water to Wine (Unholy)"
#ReplaceTags in "SP:Water to Wine (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Food), shortcat(Un, Fo), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Weaken Will"  as "SP:Weaken Will (Unholy)"
#ReplaceTags in "SP:Weaken Will (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Wither Plant"  as "SP:Wither Plant (Unholy)"
#ReplaceTags in "SP:Wither Plant (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Plant), shortcat(Un, Pl), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"
#Clone "SP:Zombie"  as "SP:Zombie (Unholy)"
#ReplaceTags in "SP:Zombie (Unholy)" with "cat(~Unholy, ~Unholy PI 3, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=3|ST:Unholy PI=3), magery(PI 3), description(Prereq: Power Investiture (Unholy) 3)"

* PI 4
#Clone "SP:Agonize"  as "SP:Agonize (Unholy)"
#ReplaceTags in "SP:Agonize (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Astral Block"  as "SP:Astral Block (Unholy)"
#ReplaceTags in "SP:Astral Block (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Banish"  as "SP:Banish (Unholy)"
#ReplaceTags in "SP:Banish (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Curse"  as "SP:Curse (Unholy)"
#ReplaceTags in "SP:Curse (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Deathtouch"  as "SP:Deathtouch (Unholy)"
#ReplaceTags in "SP:Deathtouch (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Dehydrate"  as "SP:Dehydrate (Unholy)"
#ReplaceTags in "SP:Dehydrate (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Water), shortcat(Un, Wa), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Dispel Magic"  as "SP:Dispel Magic (Unholy)"
#ReplaceTags in "SP:Dispel Magic (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Astrology)"  as "SP:Divination (Astrology; Unholy)"
#ReplaceTags in "SP:Divination (Astrology; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Augury)"  as "SP:Divination (Augury; Unholy)"
#ReplaceTags in "SP:Divination (Augury; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Cartomancy)"  as "SP:Divination (Cartomancy; Unholy)"
#ReplaceTags in "SP:Divination (Cartomancy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Crystal-Gazing)"  as "SP:Divination (Crystal-Gazing; Unholy)"
#ReplaceTags in "SP:Divination (Crystal-Gazing; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Dactylomancy)"  as "SP:Divination (Dactylomancy; Unholy)"
#ReplaceTags in "SP:Divination (Dactylomancy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Extispicy)"  as "SP:Divination (Extispicy; Unholy)"
#ReplaceTags in "SP:Divination (Extispicy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Gastromancy)"  as "SP:Divination (Gastromancy; Unholy)"
#ReplaceTags in "SP:Divination (Gastromancy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Geomancy)"  as "SP:Divination (Geomancy; Unholy)"
#ReplaceTags in "SP:Divination (Geomancy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Lecanomancy)"  as "SP:Divination (Lecanomancy; Unholy)"
#ReplaceTags in "SP:Divination (Lecanomancy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Numerology)"  as "SP:Divination (Numerology; Unholy)"
#ReplaceTags in "SP:Divination (Numerology; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Oneiromancy)"  as "SP:Divination (Oneiromancy; Unholy)"
#ReplaceTags in "SP:Divination (Oneiromancy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Physiognomy)"  as "SP:Divination (Physiognomy; Unholy)"
#ReplaceTags in "SP:Divination (Physiognomy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Pyromancy)"  as "SP:Divination (Pyromancy; Unholy)"
#ReplaceTags in "SP:Divination (Pyromancy; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Sortilege)"  as "SP:Divination (Sortilege; Unholy)"
#ReplaceTags in "SP:Divination (Sortilege; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Divination (Symbol-Casting)"  as "SP:Divination (Symbol-Casting; Unholy)"
#ReplaceTags in "SP:Divination (Symbol-Casting; Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Knowledge), shortcat(Un, K), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Flesh to Stone"  as "SP:Flesh to Stone (Unholy)"
#ReplaceTags in "SP:Flesh to Stone (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Earth), shortcat(Un, Ea), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Fool's Banquet"  as "SP:Fool's Banquet (Unholy)"
#ReplaceTags in "SP:Fool's Banquet (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Food), shortcat(Un, Fo), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Frostbite"  as "SP:Frostbite (Unholy)"
#ReplaceTags in "SP:Frostbite (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Water), shortcat(Un, Wa), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Gift of Letters"  as "SP:Gift of Letters (Unholy)"
#ReplaceTags in "SP:Gift of Letters (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Gift of Tongues"  as "SP:Gift of Tongues (Unholy)"
#ReplaceTags in "SP:Gift of Tongues (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Mindlessness"  as "SP:Mindlessness (Unholy)"
#ReplaceTags in "SP:Mindlessness (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Ruin"  as "SP:Ruin (Unholy)"
#ReplaceTags in "SP:Ruin (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Making & Breaking), shortcat(Un, Ma), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Stop Healing"  as "SP:Stop Healing (Unholy)"
#ReplaceTags in "SP:Stop Healing (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Suspend Curse"  as "SP:Suspend Curse (Unholy)"
#ReplaceTags in "SP:Suspend Curse (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Total Paralysis"  as "SP:Total Paralysis (Unholy)"
#ReplaceTags in "SP:Total Paralysis (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Body Control), shortcat(Un, B), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"
#Clone "SP:Vigil"  as "SP:Vigil (Unholy)"
#ReplaceTags in "SP:Vigil (Unholy)" with "cat(~Unholy, ~Unholy PI 4, ~Unholy - Mind Control), shortcat(Un, Mi), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=4|ST:Unholy PI=4), magery(PI 4), description(Prereq: Power Investiture (Unholy) 4)"

* PI 5
#Clone "SP:Earthquake"  as "SP:Earthquake (Unholy)"
#ReplaceTags in "SP:Earthquake (Unholy)" with "cat(~Unholy, ~Unholy PI 5, ~Unholy - Earth), shortcat(Un, Ea), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=5|ST:Unholy PI=5), magery(PI 5), description(Prereq: Power Investiture (Unholy) 5)"
#Clone "SP:Entrap Spirit"  as "SP:Entrap Spirit (Unholy)"
#ReplaceTags in "SP:Entrap Spirit (Unholy)" with "cat(~Unholy, ~Unholy PI 5, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=5|ST:Unholy PI=5), magery(PI 5), description(Prereq: Power Investiture (Unholy) 5)"
#Clone "SP:Mass Zombie"  as "SP:Mass Zombie (Unholy)"
#ReplaceTags in "SP:Mass Zombie (Unholy)" with "cat(~Unholy, ~Unholy PI 5, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=5|ST:Unholy PI=5), magery(PI 5), description(Prereq: Power Investiture (Unholy) 5)"
#Clone "SP:Pentagram"  as "SP:Pentagram (Unholy)"
#ReplaceTags in "SP:Pentagram (Unholy)" with "cat(~Unholy, ~Unholy PI 5, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=5|ST:Unholy PI=5), magery(PI 5), description(Prereq: Power Investiture (Unholy) 5)"
#Clone "SP:Remove Curse"  as "SP:Remove Curse (Unholy)"
#ReplaceTags in "SP:Remove Curse (Unholy)" with "cat(~Unholy, ~Unholy PI 5, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=5|ST:Unholy PI=5), magery(PI 5), description(Prereq: Power Investiture (Unholy) 5)"
#Clone "SP:Rotting Death"  as "SP:Rotting Death (Unholy)"
#ReplaceTags in "SP:Rotting Death (Unholy)" with "cat(~Unholy, ~Unholy PI 5, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=5|ST:Unholy PI=5), magery(PI 5), description(Prereq: Power Investiture (Unholy) 5)"
#Clone "SP:Storm"  as "SP:Storm (Unholy)"
#ReplaceTags in "SP:Storm (Unholy)" with "cat(~Unholy, ~Unholy PI 5, ~Unholy - Weather, ~Unholy - Air, ~Unholy - Water), shortcat(Un, We, Ai, Wa), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=5|ST:Unholy PI=5), magery(PI 5), description(Prereq: Power Investiture (Unholy) 5)"
#Clone "SP:Suspend Mana"  as "SP:Suspend Mana (Unholy)"
#ReplaceTags in "SP:Suspend Mana (Unholy)" with "cat(~Unholy, ~Unholy PI 5, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=5|ST:Unholy PI=5), magery(PI 5), description(Prereq: Power Investiture (Unholy) 5)"

* PI 6
#Clone "SP:Bind Spirit ([Spirit])"  as "SP:Bind Spirit ([Spirit]; Unholy)"
#ReplaceTags in "SP:Bind Spirit ([Spirit]; Unholy)" with "cat(~Unholy, ~Unholy PI 6, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=6|ST:Unholy PI=6), magery(PI 6), description(Prereq: Power Investiture (Unholy) 6)"
#Clone "SP:Bind Spirit (Banshees)"  as "SP:Bind Spirit (Banshees; Unholy)"
#ReplaceTags in "SP:Bind Spirit (Banshees; Unholy)" with "cat(~Unholy, ~Unholy PI 6, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=6|ST:Unholy PI=6), magery(PI 6), description(Prereq: Power Investiture (Unholy) 6)"
#Clone "SP:Bind Spirit (Manitous)"  as "SP:Bind Spirit (Manitous; Unholy)"
#ReplaceTags in "SP:Bind Spirit (Manitous; Unholy)" with "cat(~Unholy, ~Unholy PI 6, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=6|ST:Unholy PI=6), magery(PI 6), description(Prereq: Power Investiture (Unholy) 6)"
#Clone "SP:Bind Spirit (Specters)"  as "SP:Bind Spirit (Specters; Unholy)"
#ReplaceTags in "SP:Bind Spirit (Specters; Unholy)" with "cat(~Unholy, ~Unholy PI 6, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=6|ST:Unholy PI=6), magery(PI 6), description(Prereq: Power Investiture (Unholy) 6)"
#Clone "SP:Drain Mana"  as "SP:Drain Mana (Unholy)"
#ReplaceTags in "SP:Drain Mana (Unholy)" with "cat(~Unholy, ~Unholy PI 6, ~Unholy - Meta-Spells), shortcat(Un, Me), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=6|ST:Unholy PI=6), magery(PI 6), description(Prereq: Power Investiture (Unholy) 6)"
#Clone "SP:Possession"  as "SP:Possession (Unholy)"
#ReplaceTags in "SP:Possession (Unholy)" with "cat(~Unholy, ~Unholy PI 6, ~Unholy - Communication & Empathy), shortcat(Un, C), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=6|ST:Unholy PI=6), magery(PI 6), description(Prereq: Power Investiture (Unholy) 6)"
#Clone "SP:Summon Demon"  as "SP:Summon Demon (Unholy)"
#ReplaceTags in "SP:Summon Demon (Unholy)" with "cat(~Unholy, ~Unholy PI 6, ~Unholy - Necromancy), shortcat(Un, N), CountAsneed(Unholy), ident(Unholy), prereqcount(), needs(AD:Power Investiture (Unholy)=6|ST:Unholy PI=6), magery(PI 6), description(Prereq: Power Investiture (Unholy) 6)"


*******************************************************************************************************\[STOP]
[TEMPLATES]
******************************************************************************************************\[START]
#MergeTags in "TE:Barbarian Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian Skills (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Barbarian-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Barbarian-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Bard Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard Skills (Dungeon Fantasy)" with {replacetags(in "TE:Bard Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard Spells (Dungeon Fantasy)" with {replacetags(in "TE:Bard Spells (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Bard-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Bard-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Cleric Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric Skills (Dungeon Fantasy)" with {replacetags(in "TE:Cleric Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric Spells (Dungeon Fantasy)" with {replacetags(in "TE:Cleric Spells (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Cleric-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Cleric-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Druid Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid Skills (Dungeon Fantasy)" with {replacetags(in "TE:Druid Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid Spells (Dungeon Fantasy)" with {replacetags(in "TE:Druid Spells (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Druid-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Druid-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Evil Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Evil Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Evil Cleric Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Evil Cleric Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Evil Cleric Skills (Dungeon Fantasy)" with {replacetags(in "TE:Evil Cleric Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Evil Cleric Spells (Dungeon Fantasy)" with {replacetags(in "TE:Evil Cleric Spells (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior Skills (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Holy Warrior-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Holy Warrior-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Knight Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight Skills (Dungeon Fantasy)" with {replacetags(in "TE:Knight Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Knight-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Knight-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist Skills (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Martial Artist-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Martial Artist-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Psionicist (Dungeon Fantasy)" with {replacetags(in "TE:Psionicist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Scout Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout Skills (Dungeon Fantasy)" with {replacetags(in "TE:Scout Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Scout-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Scout-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler Skills (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Swashbuckler-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Swashbuckler-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Thief Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief Skills (Dungeon Fantasy)" with {replacetags(in "TE:Thief Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Thief-Wizard (Dungeon Fantasy)" with {replacetags(in "TE:Thief-Wizard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Unholy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Unholy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Unholy Warrior Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Unholy Warrior Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Unholy Warrior Skills (Dungeon Fantasy)" with {replacetags(in "TE:Unholy Warrior Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard Advantages (Dungeon Fantasy)" with {replacetags(in "TE:Wizard Advantages (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard Skills (Dungeon Fantasy)" with {replacetags(in "TE:Wizard Skills (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Barbarian (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Barbarian (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Bard (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Bard (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Cleric (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Cleric (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Druid (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Druid (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Holy Warrior (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Holy Warrior (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Knight (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Knight (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Martial Artist (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Martial Artist (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Scout (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Scout (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Swashbuckler (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Swashbuckler (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
#MergeTags in "TE:Wizard-Thief (Dungeon Fantasy)" with {replacetags(in "TE:Wizard-Thief (Dungeon Fantasy)" with "x(), y(), select1(), select2(), select3(), select4(), select5(), select6(), select7(), select8(), select9(), select10(), select11(), select12(), select13(), select14(), select15()")}
