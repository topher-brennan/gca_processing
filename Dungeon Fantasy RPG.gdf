Encoding=UTF-8
Version=3
* The version information above MUST be the first line of the data file, 
* or the first line AFTER the 'Encoding=UTF-8' line, when that is included.

Description=2022 January 3. Dungeon Fantasy RPG - GCA4 Version. DO NOT load Dungeon Fantasy RPG - Equipment.gdf with this file, it is included and updated. _
			NOW includes Emily's Dungeon Fantasy RPG - Equipment.gdf file contents, so that file is no longer needed separately._
			NOW includes a rebuilt equipment section with just DFRPG equipment. (Missing some magic items, and enchantments)._
			Edited and updated for the Dungeon Fantasy RPG by Armin. _
			Huge thanks to Emily Smirle (Bruno), RobKamm, and Eric B. Smith for the original _
			GURPS Dungeon Fantasy files, which made this so very much easier.
Program=4.0.423
WorldBook=Dungeon Fantasy RPG
Taboo="GURPS Basic Set 4th Ed.--Characters.gdf","Dungeon Fantasy RPG - Equipment.gdf"
Incomplete=Yes


[AUTHOR]
*******************************************************************************************************\[START]
//  
//   GURPS® Character Assistant
//   Filename: Dungeon Fantasy RPG.gdf
// 
//   Created: Saturday, December 23, 2017
//	 Modified: Tuesday, January 9, 2018 - finally finished drafts for all Professional Templates
//	 Modified: Tuesday, January 22, 2018 - some bug fixes to all <Holy Might> ads 
//										   and <Holy Skills> skills, and to the Cleric template 
//	 Modified: Thursday, September 5, 2019 - Bug fixes
//					* References to ~Holy changed to ~Clerical
//					* Added '+1 to "SK:Singing",	+1 to "SK:Musical Composition",	+1 to "SK:Musical Instrument",'
//						to gives() for Bardic Talent
//					* Signature Gear no longer leveled, Attribute tracker removed
//					* Fixed Energy Reserve limits
//					* Extra Hidden Lore skills for Wizards are no longer added at 2pts
//					* Adjusted the alt3list of the #ChoiceList of the Knight template, so that the last 3 options
//						all maximize the required points for the 2-handed weapon option (#upto and #downto are the same)
//						so that it works as expected.
//	 Modified: Tuesday, June 23, 2020 - Changed modifier group Weapon to _Weapon so the included modifiers could be
//						found by the weapons that might need them.
//			   Thursday, May 13, 2021 - Added NoDefaultLevelDiscount=Yes to Settings.
//			   Saturday, May 15, 2021 - Updated Body with Skin.
//			   Thursday, May 20, 2021 - LA: adjustments
//			   Satuday, June 4, 2021  - weightcapacity() to backpacks
//			   Thursday, June 17, 2021  - ident(Druidic) to Esoteric Medicine (Druidic), Herb Lore, Cleric ident(holy) to ident(Clerical)
//			   Thursday, September 15, 2021  - All cases of 'Armoury' changed to 'Armory'
//	 Modified: Friday, November 12, 2021 - All page number tags of "A" changed to "DFRPG:A"
//			   Saturday, November 13, 2021 - Removed old Equipment section, inserted new ones from Armin & Emily.
//			   Thursday, December 2, 2021 - Added Ammunition, Ranged Weapons, fixed some bugs
//			   Thursday, December 30, 2021 - Reviewed and updated a whole lot of weapons
//	 Modified: Sunday, January 2, 2022 - Returned notes() and removed itemnotes() from the GCA5 version, some bug fixes
//	 Modified: Sunday, January 3, 2022 - Added dr() and hp() to shields (from Basic Set) for retro-compatibility
					* Fixed Body to GCA4 compatible.
// 
//   Requires GCA v4 or later!
//  
//   This data file contains information taken from Dungeon Fantasy: Adventurers.
//   Dungeon Fantasy Copyright © 2017 by Steve Jackson Games Incorporated. All rights reserved.
//  
//   Information in this file includes:
//  	Attributes,	Advantages, Disadvantages, Quirks, Skills, Spells, Equipment, and Templates.
//      Various other supporting information.
//  
*******************************************************************************************************************
//  
//   Based on GURPS Dungeon Fantasy data files by Emily Smirle (Bruno), RobKamm, and Eric B. Smith.
//   Armin D. Sykes - Synthesized, Edited, Updated, and possibly Mutilated.
//   Eric B. Smith	- GURPS Data File Coordinator, Skill Categories.
//  
//   If you find any errors or omissions in this file please contact the Data File Coordinator at:
//   ericbsmith42@gmail.com
//  
//   Or drop a message in the GCA4 forum at:
//   http://forums.sjgames.com
//  
*******************************************************************************************************************
//  
//   GURPS is a registered trademark of Steve Jackson Games Incorporated, used with GCA by permission of Steve Jackson
//   Games. All rights reserved.
//  
//   The GURPS game is Copyright © 1986-1989, 1991-1994 by Steve Jackson Games Incorporated. This product includes
//   copyrighted material from the GURPS game, which is used by permission of Steve Jackson Games Incorporated. All
//   rights reserved by Steve Jackson Games Incorporated.
//  
*******************************************************************************************************************
//   \par	new paragraph in RTF in description() tag
//   ~P		new paragraph in the #Message() directive

********************************************************************************************************\[STOP]
[SETTINGS]
*******************************************************************************************************\[START]
ModMaxNegPercentLimit = -80
NeedsDefaultSkillTag = baseapppoints
NeedsDefaultSkillValue = 1
NeedsDefaultSpellTag = baseapppoints
NeedsDefaultSpellValue = 1
RuleOf = 20
NoDefaultLevelDiscount=Yes

********************************************************************************************************\[STOP]
[SKILLTYPES]
*******************************************************************************************************\[START]
N/A, cost(0/1), base(0), defaultstat(0), relname()
N | A, cost(0/1), base(0), defaultstat(%default), relname(def), subzero(yes)

DX/E, cost(1/2/4/8), base(-1), defaultstat(ST:DX), relname(DX)
DX/A, cost(1/2/4/8), base(-2), defaultstat(ST:DX), relname(DX)
DX/H, cost(1/2/4/8), base(-3), defaultstat(ST:DX), relname(DX)
DX/VH, cost(1/2/4/8), base(-4), defaultstat(ST:DX), relname(DX)
DX/WC, cost(3/6/12/24), base(-4), defaultstat(ST:DX), relname(DX)

IQ/E, cost(1/2/4/8), base(-1), defaultstat(ST:IQ), relname(IQ)
IQ/A, cost(1/2/4/8), base(-2), defaultstat(ST:IQ), relname(IQ)
IQ/H, cost(1/2/4/8), base(-3), defaultstat(ST:IQ), relname(IQ)
IQ/VH, cost(1/2/4/8), base(-4), defaultstat(ST:IQ), relname(IQ)
IQ/WC, cost(3/6/12/24), base(-4), defaultstat(ST:IQ), relname(IQ)

HT/E, cost(1/2/4/8), base(-1), defaultstat(ST:HT), relname(HT)
HT/A, cost(1/2/4/8), base(-2), defaultstat(ST:HT), relname(HT)
HT/H, cost(1/2/4/8), base(-3), defaultstat(ST:HT), relname(HT)
HT/VH, cost(1/2/4/8), base(-4), defaultstat(ST:HT), relname(HT)
HT/WC, cost(3/6/12/24), base(-4), defaultstat(ST:HT), relname(HT)

Will/E, cost(1/2/4/8), base(-1), defaultstat(ST:Will), relname(Will)
Will/A, cost(1/2/4/8), base(-2), defaultstat(ST:Will), relname(Will)
Will/H, cost(1/2/4/8), base(-3), defaultstat(ST:Will), relname(Will)
Will/VH, cost(1/2/4/8), base(-4), defaultstat(ST:Will), relname(Will)
Will/WC, cost(3/6/12/24), base(-4), defaultstat(ST:Will), relname(Will)

Per/E, cost(1/2/4/8), base(-1), defaultstat(ST:Perception), relname(Per)
Per/A, cost(1/2/4/8), base(-2), defaultstat(ST:Perception), relname(Per)
Per/H, cost(1/2/4/8), base(-3), defaultstat(ST:Perception), relname(Per)
Per/VH, cost(1/2/4/8), base(-4), defaultstat(ST:Perception), relname(Per)
Per/WC, cost(3/6/12/24), base(-4), defaultstat(ST:Perception), relname(Per)

Tech/A, cost(1/2/3), base(0), defaultstat(%default), relname(def), subzero(yes)
Tech/H, cost(2/3/4), base(0), defaultstat(%default), relname(def), subzero(yes)

Combo/2, cost(4/5), base(-6), defaultstat(%combo), relname(def), subzero(yes), zeropointsokay(yes)
Combo/3, cost(5/6), base(-12), defaultstat(%combo), relname(def), subzero(yes), zeropointsokay(yes)

********************************************************************************************************\[STOP]
[BASICDAMAGE]
*******************************************************************************************************\[START]

//   Starting this section will clear any existing 
//   basic damage items.
//  
//   You must list the following items in order, because
//   GCA will not sort them, but it does search through
//   them in order.
//  
//   st() is the score that Damage Base must be <= 
//   thr() is the basic thrust damage
//   sw() is the basic swing damage

st(1), thr(1d-6), sw(1d-5)
st(2), thr(1d-6), sw(1d-5)
st(3), thr(1d-5), sw(1d-4)
st(4), thr(1d-5), sw(1d-4)
st(5), thr(1d-4), sw(1d-3)

st(6), thr(1d-4), sw(1d-3)
st(7), thr(1d-3), sw(1d-2)
st(8), thr(1d-3), sw(1d-2)
st(9), thr(1d-2), sw(1d-1)
st(10), thr(1d-2), sw(1d)

st(11), thr(1d-1), sw(1d+1)
st(12), thr(1d-1), sw(1d+2)
st(13), thr(1d), sw(2d-1)
st(14), thr(1d), sw(2d)
st(15), thr(1d+1), sw(2d+1)

st(16), thr(1d+1), sw(2d+2)
st(17), thr(1d+2), sw(3d-1)
st(18), thr(1d+2), sw(3d)
st(19), thr(2d-1), sw(3d+1)
st(20), thr(2d-1), sw(3d+2)

st(21), thr(2d), sw(4d-1)
st(22), thr(2d), sw(4d)
st(23), thr(2d+1), sw(4d+1)
st(24), thr(2d+1), sw(4d+2)
st(25), thr(2d+2), sw(5d-1)

st(26), thr(2d+2), sw(5d)
st(27), thr(3d-1), sw(5d+1)
st(28), thr(3d-1), sw(5d+1)
st(29), thr(3d), sw(5d+2)
st(30), thr(3d), sw(5d+2)

st(31), thr(3d+1), sw(6d-1)
st(32), thr(3d+1), sw(6d-1)
st(33), thr(3d+2), sw(6d)
st(34), thr(3d+2), sw(6d)
st(35), thr(4d-1), sw(6d+1)

st(36), thr(4d-1), sw(6d+1)
st(37), thr(4d), sw(6d+2)
st(38), thr(4d), sw(6d+2)
st(39), thr(4d+1), sw(7d-1)

st(40), thr(4d+1), sw(7d-1)
st(45), thr(5d), sw(7d+1)
st(50), thr(5d+2), sw(8d-1)
st(55), thr(6d), sw(8d+1)
st(60), thr(7d-1), sw(9d)
st(65), thr(7d+1), sw(9d+2)
st(70), thr(8d), sw(10d)
st(75), thr(8d+2), sw(10d+2)
st(80), thr(9d), sw(11d)
st(85), thr(9d+2), sw(11d+2)
st(90), thr(10d), sw(12d)
st(95), thr(10d+2), sw(12d+2)

st(100), thr(11d), sw(13d)

//   The LAST item in the list is always the item that is to be used
//   for anything that didn't fall under the preceding items.

st(0), thr((@int(ST:Striking ST/10)+1)d), sw((@int(ST:Striking ST/10)+3)d)

//   you must use the extra set of parens to separate the math part
//   from the 'd' for the dice.

********************************************************************************************************\[STOP]
[CONVERTDICE]
*******************************************************************************************************\[START]

//   Convert damage bonus into extra dice, as per the Optional Rule: Modifying Dice + Adds on p. B269.
//  
//   Starting this section will clear any existing,_
//   convert dice items
//  
//   break()'if the bonus is this Value or more ...
//   adddice()   '... add this Value to the damage dice ...
//   subtract()  '... then subtract this amount from the bonus
//  
//   you need to start with the biggest break you want to deal with,_
//   and work down to the smallest, because GCA doesn't sort these either
//   

break(7), adddice(2), subtract(7)
break(4), adddice(1), subtract(4)

********************************************************************************************************\[STOP]
[BODY]
*******************************************************************************************************\[START]

<Humanoid>
name(Head), group(Head, All)
name(Eyes), group(Head, Eyes, All), display(-1), expanded(-1), posx(6), posy(0)
name(LeftEye), group(Head, LeftEye, Eyes, All)
name(RightEye), group(Head, RightEye, Eyes, All)
name(Neck), group(Neck, Body, Full Suit, All), display(-1), expanded(-1), posx(6), posy(50)
name(Skull), group(Head, Skull, All), basedr(2), dr(2), display(-1), expanded(-1), posx(155), posy(0)
name(Face), group(Head, Face, All), display(-1), expanded(-1), posx(155), posy(50)
name(Torso), group(Torso, Body, Full Suit, All), display(-1), expanded(-1), posx(4), posy(110)
name(Groin), group(Groin, Body, Full Suit, All), display(-1), expanded(-1), posx(195), posy(275)
name(Arms), group(Arms, Limbs, Full Suit, All), display(-1), expanded(-1), posx(200), posy(130)
name(LeftArm), group(LeftArm, Arms, Limbs, Full Suit, All)
name(RightArm), group(RightArm, Arms, Limbs, Full Suit, All)
name(Hands), group(Hands, Full Suit, All), display(-1), expanded(-1), posx(210), posy(180)
name(LeftHand), group(LeftHand, Hands, Full Suit, All)
name(RightHand), group(RightHand, Hands, Full Suit, All)
name(Legs), group(Legs, Limbs, Full Suit, All), display(-1), expanded(-1), posx(168), posy(340)
name(LeftLeg), group(LeftLeg, Legs, Limbs, Full Suit, All)
name(RightLeg), group(RightLeg, Legs, Limbs, Full Suit, All)
name(Feet), group(Feet, Full Suit, All), display(-1), expanded(-1), posx(168), posy(392)
name(LeftFoot), group(LeftFoot, Feet, Full Suit, All)
name(RightFoot), group(RightFoot, Feet, Full Suit, All)
name(Body), group(Body, Full Suit, All)
name(Full Suit), group(Full Suit, All)
name(All), group(All)


********************************************************************************************************\[STOP]
[ATTRIBUTES]
*******************************************************************************************************\[START]
//   mainwin() positions:
//	1 ST
//	2 DX
//	3 IQ
//	4 HT
//	5 Hit Points
//	6 Will
//	7 Perception
//	8 Fatigue Points
//	9 Basic Speed
//   10 Basic Move
//   11 Reserved for movement attributes activated by taking advantages or disadvantages
//  	(e.g. Flight, Tunneling, No Legs (Aquatic))
//   12 Size Modifier
//   13 --------------------
//   14 Tech Level
//   15 Money
//   16 Status
//   17 Monthly Pay
//   18 Cost of Living

//   Basic Attributes
*******************************************************************************************************************
ST, symbol(ST), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels),_
	up(10), down(-10), mainwin(1), mods(No Fine Manipulators, Size),_
	disadat(-1), display(no),_
	initmods( Size, -10%, group(Size ST),_
			formula(-@if(ST:Size Modifier::score > 0 & owner::score > 0 THEN ST:Size Modifier::score * 10 else 0)),_
			forceformula(yes) _
		|  No Fine Manipulators, -40%, group(No Fine Manipulators Stat),_
			formula(-@if(ST:No Fine Manipulators > 0 & owner::level > 0 then 40 else 0)),_
			forceformula(yes) _
		)

DX, symbol(DX), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels),_
	up(20), down(-20), mainwin(2), mods(No Fine Manipulators Stat),_
	disadat(-1), display(no),_
	parryat(@int(me::score/2)+3), blockat(@int(me::score/2)+1),_
	initmods(No Fine Manipulators, -0%, formula(-@if(ST:No Fine Manipulators > 0 & owner::level > 0 then 40 else 0)), forceformula(yes), group(No Fine Manipulators Stat), page(B145))

IQ, symbol(IQ), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(20), down(-20), mainwin(3), disadat(-1), display(no)
HT, symbol(HT), basevalue(10), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(10), down(-10), mainwin(4), disadat(-1), display(no)

//   Secondary Characteristics
*******************************************************************************************************************
Basic Lift, basevalue(@int(100 * ST:Lifting ST * ST:Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))/100), maxscore(1000000), minscore(0), symbol(BL), round(@if(ST:Lifting ST::score <= 7 then 0 else 1))

Hit Points, basevalue(ST:ST), step(1), maxscore(1000000), minscore(0 - me::syslevels),_
	up(2), down(-2), symbol(HP), mods(Size HP), mainwin(5),_
	display(no), disadat(-1),_
	initmods( Size, -10%, group(Size HP),_
			formula(-@if(ST:Size Modifier::score > 0 & ST:Hit Points::level > 0 THEN ST:Size Modifier::score * 10 else 0)),_
			forceformula(yes) _
		)

Will, basevalue(ST:IQ), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), mainwin(6), disadat(-1)
Perception, basevalue(ST:IQ), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), symbol(Per), mainwin(7), disadat(-1)
Fatigue Points, basevalue(ST:HT), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(3), down(-3), symbol(FP), display(No), mainwin(8), disadat(-1)
Basic Speed, basevalue((ST:HT + ST:DX) / 4), step(0.25), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), display(No), mainwin(9), disadat(-1)
Basic Move, basevalue(@if("DI:No Legs (Sessile)" THEN 0 ELSE ST:Basic Speed)), step(1), maxscore(1000000), minscore(0 - me::syslevels), up(5), down(-5), round(-1), display(No), mainwin(10), disadat(-1)

Striking ST, basevalue(ST:ST), step(1), maxscore(1000000), minscore(ST:ST), up(5), down(0), round(-1), display(No),_
	initmods( Size, -10%, group(Size),_
			formula(-@if(ST:Size Modifier::score > 0 & ST:Striking ST::level > 0 THEN ST:Size Modifier::score * 10 else 0)),_
			forceformula(yes) _
		)
Lifting ST, basevalue(ST:ST), step(1), maxscore(1000000), minscore(ST:ST), up(3), down(0), round(-1), display(No),_
	initmods( Size, -10%, group(Size),_
			formula(-@if(ST:Size Modifier::score > 0 & ST:Lifting ST::level > 0 THEN ST:Size Modifier::score * 10 else 0)),_
			forceformula(yes) _
		)

Size Modifier, symbol(SM), basevalue(0), maxscore(1000000), minscore(-100), round(-1), up(0), down(0), step(1), mainwin(12)

Vision, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Hearing, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Taste/Smell, basevalue(ST:Perception), maxscore(1000000), minscore(0)
Touch, basevalue(ST:Perception), maxscore(1000000), minscore(0)

Dodge, basevalue(ST:Basic Speed + 3), maxscore(1000000), minscore(0), round(-1), display(No)
Parry, basevalue(0), maxscore(1000000), minscore(0), display(No)
Block, basevalue(0), maxscore(1000000), minscore(0), display(No)
DB, basevalue(0), maxscore(1000000), minscore(0), display(No)

One Arm SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),_
	gives(_
		=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:One Arm Reach _
		)

Two Arm SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),_
	gives(_
		=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Two Arm Reach _
		)

Extra Arm SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),_
	gives(_
		=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Extra Arm Reach _
		)

Leg SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),_
	gives(=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Leg Reach)

Neck SM, basevalue(ST:Size Modifier), maxscore(1000000), minscore(0), display(no),_
	gives(=+@if(me::score < 1 THEN 0 ELSE @if(me::score = 1 THEN 0.5 ELSE @if(me::score = 2 THEN 1 ELSE (@indexedvalue((me::score- (6 * @int(me::score / 6))) + 1, 0.7,1,1.5,2,3,5) * (10 ^ @int(me::score / 6)))))) to ST:Neck Reach)

One Arm Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Two Arm Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Extra Arm Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Leg Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)
Neck Reach, basevalue(0), maxscore(1000000), minscore(0), display(No)

Fright Check, basevalue(ST:Will)
Consciousness Check, basevalue(ST:HT::score), maxscore(1000000), minscore(0), display(yes)
Death Check, basevalue(ST:HT::score), maxscore(1000000), minscore(0), display(yes)
DR, symbol(DR), round(-1), display(no)
Damage Base, symbol(DamageBase), basevalue(ST:Striking ST), display(no)

//   Encumbrance
*******************************************************************************************************************
Encumbrance Penalty, basevalue(char::enclevel), display(No),_
	conditional(_
				-1 to (SK:Climbing, SK:Stealth),_
				-2 to SK:Swimming,_
				-1 to (SK:Judo, SK:Karate, "SK:Main-Gauche", SK:Rapier, SK:Saber, SK:Smallsword) when "striking or parrying"_
				)

No Encumbrance, basevalue(ST:Basic Lift), maxscore(10000000), minscore(0), symbol(NEnc), round(0), display(No)
Light Encumbrance, basevalue(2 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(LEnc), round(0), display(No)
Medium Encumbrance, basevalue(3 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(MEnc), round(0), display(No)
Heavy Encumbrance, basevalue(6 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(HEnc), round(0), display(No)
X-Heavy Encumbrance, basevalue(10 * ST:Basic Lift), maxscore(10000000), minscore(0), symbol(XEnc), round(0), display(No)

No Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), ST:Ground Move)), maxscore(10000000), minscore(0), symbol(NEncMove), round(-1), display(No)
Light Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.8 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(LEncMove), round(-1), display(No)
Medium Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.6 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(MEncMove), round(-1), display(No)
Heavy Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.4 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(HEncMove), round(-1), display(No)
X-Heavy Encumbrance Move, basevalue(@MAX(@if(ST:Ground Move = 0 THEN 0 ELSE 1), 0.2 * ST:Ground Move)), maxscore(1000000), minscore(0), symbol(XEncMove), round(-1), display(No)


//   Arm ST/Physical Feats
*******************************************************************************************************************
One Arm Lifting ST, basevalue(ST:Lifting ST), maxscore(1000000), minscore(0), round(-1)
One Arm Striking ST, basevalue(ST:Striking ST), maxscore(1000000), minscore(0), round(-1)
Two Arm Lifting ST, basevalue(ST:Lifting ST), maxscore(1000000), minscore(0), round(-1)
Two Arm Striking ST, basevalue(ST:Striking ST), maxscore(1000000), minscore(0), round(-1)
Three Arm Lifting ST, basevalue(@if(AD:Extra Arms > 0 THEN ST:Lifting ST ELSE 0)), maxscore(1000000), minscore(0), round(-1)
Three Arm Striking ST, basevalue(@if(AD:Extra Arms > 0 THEN ST:Striking ST ELSE 0)), maxscore(1000000), minscore(0), round(-1)

One-Handed Lift, basevalue(2 * @if(ST:One Arm Lifting ST::score <= 7 then ST:One Arm Lifting ST * ST:One Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5) else @int((ST:One Arm Lifting ST * ST:One Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))+0.5))), maxscore(1000000), minscore(0), round(1), page(B353), units(lb | kg)
Two-Handed Lift, basevalue(8 * @if(ST:Two Arm Lifting ST::score <= 7 then ST:Two Arm Lifting ST * ST:Two Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5) else @int((ST:Two Arm Lifting ST * ST:Two Arm Lifting ST / @if(ST:Metric = 1 THEN 11 ELSE 5))+0.5))), maxscore(1000000), minscore(0), round(1), page(B353), units(lb | kg)

High Jump, basevalue((((6 * @max(ST:Basic Ground Move, SK:Jumping::level / 2)) - 10) * @if(ST:Metric = 1 THEN 2.5 ELSE 1)) * (2 ^ ST:Super Jump)), maxscore(1000000), minscore(0), page(B352), units(in | cm)
Broad Jump, basevalue((((2 * @max(ST:Basic Ground Move, SK:Jumping::level / 2)) - 3) / @if(ST:Metric = 1 THEN 3 ELSE 1)) * (2 ^ ST:Super Jump)), maxscore(1000000), minscore(0), page(B352), units(ft | m)

Shove/Knock Over, basevalue(12 * ST:Basic Lift), maxscore(1000000), minscore(0), page(B353), units(lb | kg)
Carry on Back, basevalue(15 * ST:Basic Lift), maxscore(1000000), minscore(0), page(B353), units(lb | kg)
Shift Slightly, basevalue(50 * ST:Basic Lift), maxscore(1000000), minscore(0), page(B353), units(lb | kg)
*
//   Movement
*******************************************************************************************************************
Ground Move, basevalue(ST:Basic Ground Move), maxscore(1000000), minscore(0), round(-1)
Water Move, basevalue(ST:Basic Water Move), step(1), maxscore(1000000), minscore(0), up(5), down(-5), round(-1)
Air Move, basevalue(ST:Basic Air Move), maxscore(1000000), minscore(0), hide(yes), display(no), up(2), down(-2), step(1), round(-1)
Space Move, basevalue(ST:Basic Space Move), maxscore(1000000), minscore(0), hide(yes), display(no), up(2), down(-2), step(1), round(-1)
Tunneling Move, basevalue(@itemhasmod(AD:Tunneling, Tunneling Move)), maxscore(1000000), minscore(0), hide(yes), display(no)
Brachiation Move, basevalue(ST:Basic Brachiation Move), maxscore(1000000), minscore(0), hide(yes), display(no), round(-1)
Jump Move, basevalue(@max(ST:Ground Move, @round((ST:Broad Jump/15)+0.49999, 0))), maxscore(1000000), minscore(0), hide(yes), display(no)

//   Social Background
*******************************************************************************************************************
--------------------, basevalue(0), mainwin(13), display(no)
Tech Level, basevalue(0), step(1), maxscore(12), minscore(0), up(5), down(-5), symbol(TL), round(1), mainwin(14), mods(Tech Level)
Money Base, basevalue(0), step(0), minscore(0), display(No), hide(yes)
Money, basevalue(ST:Money Base + _
				(ST:Starting Wealth * @max(_
								@if(@hasmod(5% of Starting Wealth) THEN 0.05),_
								@if(@hasmod(10% of Starting Wealth) THEN 0.1),_
								@if(@hasmod(15% of Starting Wealth) THEN 0.15),_
								@if(@hasmod(20% of Starting Wealth) THEN 0.2),_
								@if(@hasmod(30% of Starting Wealth) THEN 0.3),_
								@if(@hasmod(40% of Starting Wealth) THEN 0.4),_
								@if(@hasmod(50% of Starting Wealth) THEN 0.5),_
								@if(@hasmod(60% of Starting Wealth) THEN 0.6),_
								@if(@hasmod(70% of Starting Wealth) THEN 0.7),_
								@if(@hasmod(80% of Starting Wealth) THEN 0.8),_
								@if(@hasmod(90% of Starting Wealth) THEN 0.9),_
								@if(@hasmod(100% of Starting Wealth) THEN 1) _
								) _
				) - char::equipmentcost),_
	step(0), minscore(0), display(No), mainwin(15), initmods(20% of Starting Wealth, +0), mods(Money)

//  ^^^^ Revisit p. 517
Monthly Pay, basevalue(_
					@indexedvalue(3 + AD:Wealth::level - DI:Wealth::level, 0.2, 0.5, 1, 2, 5, 20, 100, 1000, 10000, 100000, 1000000) * _
					@indexedvalue(1 + ST:Tech Level::basevalue, 625, 650, 675, 700, 800, 1100, 1600, 2100, 2600, 3600, 5600, 8100, 10600) _
					),_
	step(0), minscore(0), display(No), round(1), mainwin(17),_
	description(The /typical/ Monthly Pay for a job of the character's selected Wealth Level and the campaign's set Tech Level, as calculated based on the tables on p. B516-517)

Cost of Living, basevalue(_
							@indexedvalue(ST:Status::score + 3, 100, 300, 600, 1200, 3000, 12000, 60000, 600000, 6000000, 60000000, 600000000)_
							),_
	step(0), minscore(0), display(No), round(1), mainwin(18),_
	description(The /typical/ Cost of Living for the character's selected Status Level, as calculated from the 'Cost of Living' table on p. B265)

Starting Wealth, basevalue(ST:Wealth Modifier * @indexedvalue(ST:Tech Level::basevalue + 1, 25, 50, 75, 100, 200, 500, 1000, 1500, 2000, 3000, 5000, 7500, 10000)),_
	step(0), minscore(0), display(No)
Remaining Funds, basevalue(ST:Starting Wealth - char::equipmentcost), step(0), minscore(0), display(No)
Wealth Modifier, basevalue(10), step(1), minscore(0), display(No), round(-1)
// Signature Gear, basevalue(0), display(No), hide(yes), step(0), minscore(0)

//   Telekinesis Stats
*******************************************************************************************************************
TK ST, basevalue(0), maxscore(1000000), minscore(0), hide(yes), display(no)
TK Basic Lift, symbol(TK BL), basevalue(ST:TK ST * ST:TK ST / @if(ST:Metric = 1 THEN 11 ELSE 5)), maxscore(1000000), minscore(0), round(@if(ST:TK ST::score <= 7 then 0 else 1)), hide(yes), display(no), units(lb | kg)
TK Max Lift, symbol(TK ML), basevalue(8 * "ST:TK Basic Lift"), maxscore(1000000), minscore(0), hide(yes), display(no), units(lb | kg)
TK Shove/Knock Over, basevalue(12 * ST:TK Basic Lift), maxscore(1000000), minscore(0), hide(yes), display(no), page(B353), units(lb | kg)
TK Shift Slightly, basevalue(50 * ST:TK Basic Lift), maxscore(1000000), minscore(0), hide(yes), display(no), page(B353), units(lb | kg)
TK Move, basevalue(0), maxscore(1000000), minscore(0), hide(yes), display(no)

TK No Encumbrance, basevalue(ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKNEnc), round(0), hide(yes), display(no)
TK Light Encumbrance, basevalue(2 * ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKLEnc), round(0), hide(yes), display(no)
TK Medium Encumbrance, basevalue(3 * ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKMEnc), round(0), hide(yes), display(no)
TK Heavy Encumbrance, basevalue(6 * ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKHEnc), round(0), hide(yes), display(no)
TK X-Heavy Encumbrance, basevalue(10 * ST:TK Basic Lift), maxscore(10000000), minscore(0), symbol(TKXEnc), round(0), hide(yes), display(no)

TK No Encumbrance Move, basevalue(ST:TK Move), maxscore(10000000), minscore(0), symbol(TKNEncMove), round(-1), hide(yes), display(no)
TK Light Encumbrance Move, basevalue(0.8 * ST:TK Move), maxscore(1000000), minscore(0), symbol(TKLEncMove), round(-1), hide(yes), display(no)
TK Medium Encumbrance Move, basevalue(0.6 * ST:TK Move), maxscore(1000000), minscore(0), symbol(TKMEncMove), round(-1), hide(yes), display(no)
TK Heavy Encumbrance Move, basevalue(0.4 * ST:TK Move), maxscore(1000000), minscore(0), symbol(TKHEncMove), round(-1), hide(yes), display(no)
TK X-Heavy Encumbrance Move, basevalue(0.2 * ST:TK Move), maxscore(1000000), minscore(0), symbol(TKXEncMove), round(-1), hide(yes), display(no)

//   Melee Weapon Table listings
*******************************************************************************************************************
Punch, display(no), mode(Punch),_
	gives(=-@textindexedvalue($modetag(charskillused), ("SK:Karate", ST:Encumbrance Penalty::score), ELSE 0) to me::skillscore$, =+(@textindexedvalue($modetag(charskillused), ("SK:Karate", 1), ELSE 0) * (@int(($modetag(charskillscore) + ST:Encumbrance Penalty::score)/2) - @int($modetag(charskillscore)/2) - ST:Encumbrance Penalty::score)) to me::parryscore$),_
	damage(_
		thr-1 + _
			@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0)) + _
				@max(_
					@if(me::charskillused = "SK:Brawling" THEN @if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0) ELSE 0),_
					@if(me::charskillused = "SK:Boxing" THEN @if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)) ELSE 0),_
					@if(me::charskillused = "SK:Karate" THEN @if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) ELSE 0)_
				)_
		), damtype(_
					$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C), parry(0), skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate), mods(Punch/Kick),_
	damagebasedon(ST:Punch),_
	reachbasedon(ST:One Arm Reach),_
	basevalue(ST:One Arm Striking ST)

Kick, display(no), mode(Kick),_
	gives(=-@textindexedvalue($modetag(charskillused), ("SK:Karate", ST:Encumbrance Penalty::score), ELSE 0) to me::skillscore$, =+(@textindexedvalue($modetag(charskillused), ("SK:Karate", 1), ELSE 0) * (@int(($modetag(charskillscore) + ST:Encumbrance Penalty::score)/2) - @int($modetag(charskillscore)/2) - ST:Encumbrance Penalty::score)) to me::parryscore$),_
	damage(_
				thr+ _
				@if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0))) + _
				@if("DI:Horizontal::level" = 1 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + _
				@max(_
					@if(me::charskillused = "SK:Brawling" THEN @if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0) ELSE 0),_
					@if(me::charskillused = "SK:Karate" THEN @if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) ELSE 0)_
				)_
			), damtype(_
				$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))_
				), reach(C,1), parry(No), skillused(ST:DX-2, SK:Brawling-2, SK:Karate-2, SK:Kicking (Karate), SK:Kicking (Brawling)), mods(Punch/Kick),_
	damagebasedon(ST:Kick), reachbasedon(ST:Leg Reach), basevalue(ST:Striking ST)

Bite, display(no), mode(Bite), mods(Combat Table),_
	damage(_
		thr-1 + _
		@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Bite) else 0) + _
		-@if("DI:Weak Bite::level" = 1 then 2 * @basethdice(ST:Bite) else 0)_
		),_
	damtype($if("AD:Teeth (Sharp Teeth)::level" = 1 THEN "cut" ELSE $if("AD:Teeth (Sharp Beak)::level" = 1 THEN "pi+" ELSE $if("AD:Teeth (Fangs)::level" = 1 THEN "imp" ELSE $if("AD:Vampiric Bite::level" = 1 THEN "cut" ELSE "cr"))))), reach(C), parry(No), skillused(ST:DX, SK:Brawling),_
	damagebasedon(ST:Bite), reachbasedon(ST:Neck Reach), basevalue(ST:Striking ST)

//   Helper stats
*******************************************************************************************************************
Metric, basevalue(0), up(0), down(0), step(1), maxscore(1), minscore(0), display(yes), hide(yes)
Super Jump, basevalue(0), hide(yes), display(no)
Enhanced Ground Move, basevalue(0), hide(yes), display(no),_
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Ground Move::basescore - ST:Ground Move::basescore _
		to ST:Ground Move _
		)
Enhanced Air Move, basevalue(0), hide(yes), display(no),_
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Air Move::basescore - ST:Air Move::basescore _
		to ST:Air Move _
		)
Enhanced Space Move, basevalue(0), hide(yes), display(no),_
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Space Move::basescore - ST:Space Move::basescore _
		to ST:Space Move _
		)
Enhanced Water Move, basevalue(0), hide(yes), display(no),_
	gives(_
		=@if( me::score = @int(me::score) then _
			@power(2, me::score) _
		else _
			@power(2, @int(me::score)) * 1.5 _
			) * ST:Water Move::basescore - ST:Water Move::basescore _
		to ST:Water Move _
		)

Basic Ground Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),_
	basevalue(@if("DI:No Legs (Aerial)" THEN 0 ELSE @if("DI:No Legs (Aquatic)" THEN 0 ELSE @if("DI:No Legs (Semi-Aquatic)" THEN ST:Basic Move/5 ELSE @if("DI:No Legs (Sessile)" THEN 0 ELSE ST:Basic Move)))))
Basic Water Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),_
	basevalue(ST:Basic Move / @if(AD:Amphibious THEN 1 ELSE @if("DI:No Legs (Aquatic)" THEN 1 ELSE @if("DI:No Legs (Semi-Aquatic)" THEN 1 ELSE 5))))
Basic Air Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),_
	basevalue(_
				@if(@itemhasmod(AD:Flight, Gliding) THEN ST:Basic Move ELSE _
				@if(@itemhasmod(AD:Flight, Controlled Gliding) THEN ST:Basic Move ELSE _
				@if(AD:Flight THEN _
					@if(@itemhasmod(Flight, Space Flight Only) THEN 0 ELSE 2 * ST:Basic Speed) ELSE _
					0 )_
				)))
Basic Space Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),_
	basevalue(@if(@itemhasmod(AD:Flight, Newtonian Space Flight) THEN 2 * Basic Speed ELSE @if(@itemhasmod(AD:Flight, Space Flight) THEN 2 * Basic Speed ELSE @if(@itemhasmod(AD:Flight, Space Flight Only) THEN 2 * Basic Speed ELSE 0 ))))
Basic Brachiation Move, maxscore(1000000), minscore(0), hide(yes), display(no), round(-1),_
	basevalue(_
				@if(AD:Brachiator THEN ST:Basic Move / 2 ELSE 0)_
				)

No Fine Manipulators, basevalue(0), display(no), hide(yes)
Native Languages, basevalue(0), display(no), hide(yes)
Native Cultural Familiarities, basevalue(0), display(no), hide(yes)

//   Magery Prerequisite Work-around Stats
*******************************************************************************************************************
Magery 0, basevalue(0), display(no), minscore(0), maxscore(100), hide(yes)
MageryBase, basevalue(0), display(no), minscore(0), maxscore(100), hide(yes)
Magery, basevalue(0), display(no), minscore(0), maxscore(1000000), hide(yes),_
	gives(=+me::score to ("CO:Air", "CO:Animal", "CO:Body Control", "CO:Communication & Empathy", "CO:Earth", "CO:Enchantment", "CO:Fire", "CO:Food", "CO:Illusion", "CO:Gate", "CO:Healing", "CO:Knowledge", "CO:Light & Darkness", "CO:Making & Breaking", "CO:Meta-Spells", "CO:Mind Control", "CO:Movement", "CO:Necromantic", "CO:Plant", "CO:Protection & Warning", "CO:Sound", "CO:Technological", "CO:Water", "CO:Weather"))
Magery Air, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Body Control, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Communication & Empathy, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Earth, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Enchantment, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Fire, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Gate, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Healing, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Knowledge, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Light & Darkness, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Meta-Spells, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Mind Control, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Movement, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Necromantic, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Protection & Warning, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Water, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)

Magery Animal, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Food, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Illusion, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Making & Breaking, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Plant, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Sound, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Technological, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)
Magery Weather, basevalue(ST:Magery), display(no), minscore(0), maxscore(100), hide(yes)

//   Reaction
*******************************************************************************************************************
Appealing, basevalue(0), display(no)
Unappealing, basevalue(0), display(no)
Reaction, basevalue(0), display(no)
Status, basevalue(0), minscore(-2), maxscore(8 limitingtotal), up(5), down(-5), step(1), display(no), round(-1), mainwin(16)

*******************************************************************************************************************
//
// Dungeon Fantasy Special Additions
//

//  Power Item Stats
Power Item, basevalue(0), display(no), minscore(0), maxscore(1000000)

//  Power Investiture Prerequisite Work-around Stats

Holy PI, basevalue(0), display(no), minscore(0), maxscore(1000000), hide(yes)
Druidic PI, basevalue(0), display(no), minscore(0), maxscore(1000000), hide(yes)
EnchantmentEnergyMultiplier, basevalue(1), display(no), hide(yes)
EnchantmentSlowAndSureCost, basevalue(20), display(no), hide(yes)
EnchantmentQuickAndDirtyThreshold, basevalue(100), display(no), hide(yes)
EnchantmentQuickAndDirtyCost, basevalue(1), display(no), hide(yes)

#ReplaceTags in "ST:Money" with "initmods(100% of Starting Wealth, +0)"


********************************************************************************************************\[STOP]
[ADVANTAGES]
*******************************************************************************************************\[START]

// Special Traits **********************************************************************************

<Attributes>
Extra ST, 10/20, page(DFRPG:A8), gives(+1 to ST:ST)
Extra DX, 20/40, page(DFRPG:A8), gives(+1 to ST:DX)
Extra IQ, 20/40, page(DFRPG:A8), gives(+1 to ST:IQ)
Extra HT, 10/20, page(DFRPG:A8), gives(+1 to ST:HT)

Extra Will, 5/10, page(DFRPG:A10), gives(+1 to ST:Will)
Extra Perception, 5/10, page(DFRPG:A10), gives(+1 to ST:Perception)
Extra Hit Points, 2/4, page(DFRPG:A10), gives(+1 to ST:Hit Points)
Extra Fatigue Points, 3/6, page(DFRPG:A10), gives(+1 to ST:Fatigue Points)
Extra Basic Move, 5/10, page(DFRPG:A11), gives(+1 to ST:Basic Move)

<Racial Attributes>
Racial ST Bonus, 10/20, page(DFRPG:A8), gives(+1 to ST:ST)
Racial DX Bonus, 20/40, page(DFRPG:A8), gives(+1 to ST:DX)
Racial IQ Bonus, 20/40, page(DFRPG:A8), gives(+1 to ST:IQ)
Racial HT Bonus, 10/20, page(DFRPG:A8), gives(+1 to ST:HT)

Racial Will Bonus, 5/10, page(DFRPG:A10), gives(+1 to ST:Will)
Racial Perception Bonus, 5/10, page(DFRPG:A10), gives(+1 to ST:Perception)
Racial Hit Points Bonus, 2/4, page(DFRPG:A10), gives(+1 to ST:Hit Points)
Racial Fatigue Points Bonus, 3/6, page(DFRPG:A10), gives(+1 to ST:Fatigue Points)
Racial Basic Move Bonus, 5/10, page(DFRPG:A11), gives(+1 to ST:Basic Move)

<Wealth>
Trading Character Points for Money, 1/2,
	gives(+500 to ST:Money, +500 to ST:Remaining Funds),
	page(DFRPG:A95),
	upto(5),
	levelnames("$500","$1,000","$1,500","$2,000","$2,500"),
	x( #message(According to The Dungeon Fantasy Roleplaying Game points spent on extra cash are not part of the point total. GCA doesn't have any way to do this at this time, and so character point totals may be higher than those for published character examples.) )

<Special Barbarian Traits>
Discriminatory Smell, 15, 
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A16)
Lifting ST, 3/6, 
	cat(Attributes, Exotic, Physical, Exotic Physical, Special Dwarf Traits),
	gives(+1 to ST:Lifting ST), 
	mods(Lifting ST, No Fine Manipulators, Size), 
	page(DFRPG:A16, DFRPG:A43) 
Temperature Tolerance (Cold), 1/2, 
	cat(Exotic, Physical, Exotic Physical, Special Cat-Folk Traits),
	upto(3), 
	page(DFRPG:A16, DFRPG:A43)
Temperature Tolerance (Heat), 1/2, 
	cat(Exotic, Physical, Exotic Physical, Special Cat-Folk Traits),
	upto(3), 
	page(DFRPG:A16, DFRPG:A43)
Tough Skin, 3/6, 
	cat(Exotic, Physical, Exotic Physical, Special Dwarf Traits, Special Half-Ogre Traits),
	gives(+1 To ST:DR), 
	page(DFRPG:A16, DFRPG:A44)


<Bard-Song>
Bardic Talent, 10/20, 
	upto(6), 
	page(DFRPG:A17),
	cat(Mundane, Mental, Talents, Mundane Mental, Bard),
	gives(_
		+1 to "SK:Singing",
		+1 to "SK:Musical Composition",
		+1 to "SK:Musical Instrument",
		+1 to "AD:Song of Command::skillscore",
		+1 to "AD:Song of Echoes::skillscore",
		+1 to "AD:Song of Humiliation::skillscore",
		+1 to "AD:Song of Sending::skillscore",
		+1 to "AD:Song of Terror::skillscore",
		+1 to "AD:Song of the Wild::skillscore",
		+1 to "ST:Magery Communication & Empathy",
		+1 to "ST:Magery Mind Control",
		+1 to "ST:Magery Knowledge",
		+1 to "ST:Sound",
		+1 to "ST:Magery 0",
		+1 to ("CO:Communication & Empathy", "CO:Mind Control", "CO:Knowledge", "CO:Sound")_
	),
	description(Bardic Talent enables you to buy Bard-Song abilities; add its level (maximum six) to all rolls required to use such powers. It also allows you to learn and cast wizardly spells from the Communication and Empathy, Knowledge, Mind Control, and Sound colleges.)
Song of Command, 35, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A18),
	skillused(ST:IQ)
Song of Echoes, 14, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A18),
	skillused(ST:Hearing)
Song of Humiliation, 4, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A18),
	skillused(SK:Singing)
Song of Sending, 21, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A18),
	skillused(ST:IQ)
Song of Terror, 21, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A18)
Song of the Wild, 18, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A18)

<Holy Might>
Power Investiture, 10/20,
	cat(Supernatural, Mental, Supernatural Mental, Holy Might),
	page(DFRPG:A20),
	gives(+1 to "AD:Contingency Casting::skillscore",
		+1 to "AD:Detect Evil::skillscore",
		+1 to "AD:Divine Guidance::skillscore",
		+1 to "AD:Divine Omens::skillscore",
		+1 to "AD:Faith Healing::skillscore",
		+1 to "AD:Turning::skillscore",
		+1 to "AD:Detect Good::skillscore",
		+1 to "ST:Holy PI",
		+1 to "CO:~Clerical"),
	description(For Clerics!),
	countasneed(Clerical),
	ident(Clerical),
	replacetags(in "ST:Power Item" with "display(yes), mainwin(19), noresync(yes)"),
	upto(6)

Contingency Casting, 14, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A20),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	skillused(ST:IQ) 
Detect Evil, 18, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A18),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	skillused(ST:Perception|ST:IQ), 
	mode(Detect|Learn)
Divine Guidance, 14, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A18),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	skillused(ST:IQ)
Divine Omens, 14, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A18),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	skillused(ST:Perception|ST:IQ), 
	mode(Detect|Interpret)
Faith Healing, 33, 
	cat(Supernatural, Mental, Supernatural Mental),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	page(DFRPG:A18),
	skillused(ST:IQ)
Turning, 24, 
	cat(Supernatural, Mental, Supernatural Mental),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	page(DFRPG:A18),
	skillused(ST:Will)
Detect Good, 9,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A26),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	skillused(ST:Perception|ST:IQ), 
	mode(Detect|Learn)
Heroic Grace, 9/18, 
	cat(Supernatural, Mental, Supernatural Mental),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	upto(2), 
	page(DFRPG:A26)
Heroic Might, 9/18, 
	cat(Supernatural, Mental, Supernatural Mental),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	upto(2), 
	page(DFRPG:A26)
Heroic Vitality, 9/18, 
	cat(Supernatural, Mental, Supernatural Mental),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	upto(2),
	page(DFRPG:A26)
Resist Evil, 1/2,
	cat(Supernatural, Mental, Supernatural Mental),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness),
	upto(6),
	page(DFRPG:A27)

Holiness, 5/10,
	cat(Supernatural,Mental,Supernatural Mental, Holy Might),
	page(DFRPG:A26),
	countasneed(Holiness),
	ident(Holiness),
	gives(+1 to "AD:Contingency Casting::skillscore",
		+1 to "AD:Detect Evil::skillscore",
		+1 to "AD:Divine Guidance::skillscore",
		+1 to "AD:Divine Omens::skillscore",
		+1 to "AD:Faith Healing::skillscore",
		+1 to "AD:Turning::skillscore",
		+1 to "AD:Detect Good::skillscore"),
	description(For Holy Warriors!),
	upto(6)


<Special Cleric Traits>
Clerical Investment, 5,
	cat(Mundane, Social, Mundane Social),
	page(DFRPG:A22),
	conditional(+1 to ST:Reaction)

<Druidic Arts>
Power Investiture (Druidic), 10/20,
	cat(Supernatural, Mental, Supernatural Mental, Druidic Arts),
	page(DFRPG:A20),
	gives(+1 to AD:Beast Flight::SkillScore,
		+1 to AD:Control Animal::SkillScore,
		+1 to AD:Nature's Shield::SkillScore,
		+1 to AD:Plant Empathy::SkillScore,
		+1 to AD:Speak with Animals::SkillScore,
		+1 to AD:Speak with Plants::SkillScore,
		+1 to "ST:Druidic PI",
		+1 to "CO:~Druidic"),
	description(For Druids!),
	countasneed(Druidic),
	replacetags(in "ST:Power Item" with "display(yes), mainwin(19), noresync(yes)"),
	upto(6)

Beast Flight, 14, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A24)
Control Animal, 33, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A24),
	skillused(ST:IQ)
Nature's Shield, 7/14, 
	cat(Supernatural, Mental, Supernatural Mental),
	upto(2), 
	page(DFRPG:A24)
Plant Empathy, 5, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A24),
	skillused(ST:IQ)
Speak with Animals, 23, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A24),
	skillused(ST:IQ)
Speak with Plants, 14, 
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A24),
	skillused(ST:IQ)

<Special Holy Warrior Traits>
Higher Purpose (Slay Demons), 5/10,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A27),
	upto(3),
	conditional(+1 to CL:Combat/Weapons - Melee Combat::skillscore when "making attack, damage, defense, and resistance rolls against this class of monsters", 
			+1 to CL:Combat/Weapons - Ranged Combat::skillscore when "making attack, damage, defense, and resistance rolls against this class of monsters")
Higher Purpose (Slay Undead), 5/10,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A27),
	upto(3),
	conditional(+1 to CL:Combat/Weapons - Melee Combat::skillscore when "making attack, damage, defense, and resistance rolls against this class of monsters", 
			+1 to CL:Combat/Weapons - Ranged Combat::skillscore when "making attack, damage, defense, and resistance rolls against this class of monsters")
Rest in Pieces, 1, 
	cat(Supernatural, Mental, Supernatural Mental, Perks),
	page(DFRPG:A27)

<Special Knight Traits>
Armor Mastery, 5,
	cat(Supernatural, Physical, Supernatural Physical),
	page(DFRPG:A28)
Rallying Cry, 5,
	cat(Supernatural, Physical, Supernatural Physical),
	page(DFRPG:A28),
	skillused(SK:Leadership)
Sacrificial Block, 1,
	cat(Supernatural, Physical, Supernatural Physical, Perks),
	page(DFRPG:A28)
Sacrificial Parry, 1,
	cat(Supernatural, Physical, Supernatural Physical, Perks),
	page(DFRPG:A29)
Shield Mastery, 15,
	cat(Supernatural, Physical, Supernatural Physical),
	page(DFRPG:A29)
Shield-Wall Training, 1,
	cat(Supernatural, Physical, Supernatural Physical, Perks),
	page(DFRPG:A29)
	
<Chi Mastery>
Chi Talent, 15/30,
	cat(Supernatural, Mental, Supernatural Mental),
	upto(6),
	page(DFRPG:A30),
	gives(+1 to "AD:Dragon Skin::skillscore",
		+1 to "AD:Mantis Strike::skillscore",
		+1 to "AD:Regeneration::skillscore",
		+1 to "AD:Seven Secret Kicks::skillscore",
		+1 to "AD:Spider Climb::skillscore",
		+1 to "AD:Tiger Sprint::skillscore",
		+1 to "AD:Unarmed Master::skillscore",
		+1 to "AD:Uninterrupted Flurry::skillscore",
		+1 to "SK:Autohypnosis",
		+1 to "SK:Blind Fighting",
		+1 to "SK:Body Control",
		+1 to "SK:Breaking Blow",
		+1 to "SK:Breath Control",
		+1 to "SK:Esoteric Medicine (Chi)",
		+1 to "SK:Immovable Stance",
		+1 to "SK:Kiai",
		+1 to "SK:Light Walk",
		+1 to "SK:Mental Strength",
		+1 to "SK:Mind Block",
		+1 to "SK:Parry Missile Weapons",
		+1 to "SK:Power Blow",
		+1 to "SK:Pressure Points",
		+1 to "SK:Push",
		+1 to "SK:Throwing Art")
		
Dragon Skin, 5,
	cat(Exotic, Physical, Exotic Physical),
	gives(+2 To ST:DR), 
	page(DFRPG:A31),
	needs("DI:Disciplines of Faith (Chi Rituals)")
Mantis Strike, 5,
	cat(Exotic, Physical, Exotic Physical),
	gives(+2 to ST:Striking ST),
	conditional(+2 to ST:ST when "Striking ST applies"),
	page(DFRPG:A31),
	needs("DI:Disciplines of Faith (Chi Rituals)")
Regeneration, 23,	
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A31),
	needs("DI:Disciplines of Faith (Chi Rituals)")
Seven Secret Kicks, 7,	
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A31),
	needs("DI:Disciplines of Faith (Chi Rituals)")
Spider Climb, 18,	
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A31),
	needs("DI:Disciplines of Faith (Chi Rituals)"),
	skillused(ST:ST),
	mode(halt fall)
Tiger Sprint, 9/18,
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A31),
	needs("DI:Disciplines of Faith (Chi Rituals)"),
	upto(2),
	gives(+0.5 To ST:Enhanced Ground Move),
	replacetags(in ST:Ground Move with "mainwin(11), noresync(yes)")
Unarmed Master, 25,	
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A31),
	needs("DI:Disciplines of Faith (Chi Rituals)"),
	skillused(ST:HT),
	mode(resist crippling)
Uninterrupted Flurry, 20,	
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A31),
	needs("DI:Disciplines of Faith (Chi Rituals)")

<Special Martial Artist Traits>
Trained By A Master, 30,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A31)

<Special Scout Traits>
Heroic Archer, 20,
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A35),
	skillused(SK:Bow-3),
	mode(ready bow in no time & attack at -3)
Multi-Aim, 6/12,
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A35)
Silence, 5/10,
	cat(Exotic, Physical, Exotic Physical, Special Thief Traits, Special Halfling Traits),
	page(DFRPG:A35, DFRPG:A39, DFRPG:A45)
Strongbow, 1,
	cat(Exotic, Physical, Exotic Physical, Perks),
	page(DFRPG:A35)
Telescopic Vision, 5/10,
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A35)

<Special Swashbuckler Traits>
Armor Familiarity (Main-Gauche), 1/2,
	upto(4),
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A37)
Armor Familiarity (Rapier), 1/2,
	upto(4),
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A37)
Armor Familiarity (Saber), 1/2,
	upto(4),
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A37)
Armor Familiarity (Smallsword), 1/2,
	upto(4),
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A37)
Daredevil, 15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A37)
Enhanced Time Sense, 45,
	cat(Exotic, Mental, Exotic Mental),
	gives(+1 To GR:Combat Reflexes, +2 to ST:Fright Check),
	page(DFRPG:A37),
	taboo(AD:Combat Reflexes)
Every One's a Critical, 15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A37)
Great Void, 10,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A37)
Rapier Wit, 5, 
	page(DFRPG:A37),
	skillused(ST:IQ, SK:Intimidation)
Springing Attack, 10, 
	page(DFRPG:A37),
	skillused(ST:IQ, SK:Intimidation)
	
<Special Thief Traits>
Catfall, 10,
	cat(Exotic, Physical, Exotic Physical, Special Cat-Folk Traits),
	page(DFRPG:A39, DFRPG:A43),
	skillused(ST:DX),
	mode(halve damage from a fall)	
Expert Backstabbing, 2/4,
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A39)
Gizmos, 5/10,
	cat(Exotic, Physical, Exotic Physical, Special Wizard Traits),
	page(DFRPG:A39)
High Manual Dexterity, 5/10,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A39),
	gives(+1 to SK:Knot-Tying, +1 to SK:Lockpicking, +1 to SK:Pickpocket, +1 to SK:Sleight of Hand),
	conditional(+1 to SK:Forgery when "performing fine DX-based tasks", +1 to SK:Traps when "performing fine DX-based tasks")
Sensitive Touch, 10,
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A39),
	gives(+4 to ST:Touch),
	conditional(+4 to SK:Search when "finding loot on bodies", +4 to SK:Traps when "feeling out or intercepting tiny mechanisms")
// Silence in Special Scout Traits

<Special Wizard Traits>
Magery 0, 5,
	cat(Supernatural, Mental, Supernatural Mental, Special Elf Traits),
	page(DFRPG:A41),
	gives(+1 to ST:Magery 0, +AD:Magery::level to me::skillscore),
	skillused(ST:Perception|ST:Perception-3),
	mode(sense wizardly magic items|sense mana level boundaries),
	replacetags(in "ST:Power Item" with "display(yes), mainwin(19), noresync(yes)")
Magery, 10/20,
	cat(Supernatural, Mental, Supernatural Mental),
	needs(AD:Magery 0),
	page(DFRPG:A41),
	gives(+1 to ST:Magery, +1 to ST:MageryBase, +1 to SK:Thaumatology),
	upto(6)
// Gizmos in Special Thief Traits
Improved Magic Resistance, 5/10,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A41)
Wild Magic, 21/42,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A41)

<Special Cat-Folk Traits>
// Catfall in Special Thief Traits
Sharp Claws, 5,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A43)
Sharp Teeth, 1,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A43)
// Temperate Tolerance in Special Barbarian Traits

<Special Dwarf Traits>
Dwarven Gear, 1,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A43),
	x( #message(You will need to add the 'Dwarven Gear' modifier to appropriate equipment yourself to get the 10% price break.) )
// Lifting ST in Special Barbarian Traits
Pickaxe Penchant, 5/10, 
	cat(Mundane, Mental, Mundane Mental, Talents), 
	gives(+1 to GR:Pickaxe Penchant), 
	page(DFRPG:A44), 
	upto(4), 
	description(Axe/Mace, Forced Entry, Prospecting, Thrown Weapon (Axe/Mace), Two-Handed Axe/Mace)
// Tough Skin in Special Barbarian Traits

<Special Elf Traits>
Elven Gear, 1,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A43),
	x( #message(You will need to add the 'Elven Gear' modifier to appropriate equipment yourself to get the 10% price break.) )
Forest Guardian, 5/10, 
	cat(Mundane, Mental, Mundane Mental, Talents), 
	gives(+1 to GR:Forest Guardian), 
	conditional(+1 to ST:Reaction when "interacting with druids, faeries, and bunnies"), 
	page(DFRPG:A44), 
	upto(4), 
	description(Bow, Camouflage, Fast-Draw (Arrow), Stealth, Survival (Woodlands)), 
// Magery 0 in Special Wizard Traits
	
<Special Gnome Traits>
Widget Worker, 5/10, 
	cat(Mundane, Mental, Mundane Mental, Talents), 
	gives(+1 to GR:Widget Worker), 
	page(DFRPG:A44), 
	upto(4), 
	description(Armory (Missile Weapons), Forced Entry, Lockpicking, Scrounging, Traps)
	
<Special Half-Ogre Traits>
// Tough Skin in Special Barbarian Traits

<Special Halfling Traits>
Halfling Marksmanship, 5/10, 
	cat(Mundane, Mental, Mundane Mental, Talents), 
	gives(+1 to GR:Halfling Marksmanship), 
	page(DFRPG:A45), 
	upto(4), 
	conditional(+1 to ST:Reaction when "trying to buy or sell a ranged weapon", +1 to (SK:Merchant, SK:Streetwise) when "trying to buy or sell a ranged weapon"), 
	description(Bow, Sling, Throwing, Thrown Weapon (Dart, Knife, and Stick); bonus is for archers and mobsters.)
// Silence in Special Scout Traits



// General Traits **********************************************************************************

<_General>
Absolute Direction, 5,cat(Mundane Mental, Mundane, Physical, Mental, Mundane Physical),gives(=+3 To SK:Body Sense, =+3 to SK:Navigation),page(DFRPG:A46)
Acute [Special Sense], 2/4,
	cat(Exotic, Physical, Exotic Physical),
	x(#InputReplace("Specify the exact name of the specialized sense that is superior (Detect Evil, Detect Good, etc.):", "[Special Sense]", , "Acute Sense")),
	gives(+1 to ST:[Special Sense]::skillscore, +1 to AD:[Special Sense]::skillscore),
	needs(AD:[Special Sense]),
	page(DFRPG:A46)
Acute Hearing, 2/4,
	cat(Mundane, Physical, Mundane Physical),
	gives(+1 To ST:Hearing),
	skillused(ST:Hearing),
	mode(hear),
	page(DFRPG:A46)
Acute Taste and Smell, 2/4,
	cat(Mundane, Physical, Mundane Physical),
	gives(+1 To ST:Taste/Smell),
	skillused(ST:Taste/Smell),
	mode(taste/smell),
	page(DFRPG:A46)
Acute Touch, 2/4,
	cat(Mundane, Physical, Mundane Physical),
	gives(+1 To ST:Touch),
	skillused(ST:Touch),
	mode(feel),
	page(DFRPG:A46)
Acute Vision, 2/4,
	cat(Mundane, Physical, Mundane Physical),
	gives(+1 To ST:Vision),
	skillused(ST:Vision),
	mode(see),
	taboo(DI:Blindness),
	page(DFRPG:A46)
Ambidexterity, 5,
	cat(Mundane, Physical, Mundane Physical),
	taboo(DI:One Arm, DI:One Hand)
Animal Empathy, 5,
	cat(Mundane, Mental, Mundane Mental),
	skillused(ST:IQ),
	page(DFRPG:A47)
Animal Friend, 5/10,
	cat(Mundane, Mental, Talents, Mundane Mental),
	gives(+1 To GR:Animal Friend, +1 to AD:Speak with Animals::skillscore),
	conditional(+1 to ST:Reaction when "from all animals"),
	upto(_
		@if(_
			me::control_upto > 4 then me::control_upto _
			elseif "TE:Barbarian" then 6 _
			elseif "TE:Druid" then 6 _
			else 4_
		)_
	),
	page(DFRPG:A47),
	description(Animal Handling, Disguise (Animals), Mimicry (Animal Sounds and Bird Calls), Riding, Veterinary)
Appearance, 4/12/16,
	cat(Mundane, Physical, Mundane Physical),
	upto(3),
	page(DFRPG:A47),
	levelnames([Average], Attractive, Handsome/Beautiful, Very Handsome/Very Beautiful),
	taboo(DI:Appearance),
	gives( =@indexedvalue(%level, 1, 2, 2) to ST:Unappealing, 
		=@indexedvalue(%level, 1, 4, 6) to ST:Appealing, 
		=@indexedvalue(%level, 1, 4, 6) to SK:Sex Appeal )
Appearance: Impressive, 4/12/16,
	cat(Mundane, Physical, Mundane Physical),
	upto(3),
	page(DFRPG:A47),
	levelnames([Average], Attractive, Handsome/Beautiful, Very Handsome/Very Beautiful),
	taboo(DI:Appearance),
	gives( =@indexedvalue(%level, 1, 3, 4) to ST:Unappealing, 
		=@indexedvalue(%level, 1, 3, 4) to ST:Appealing)

Born Entertainer, 5/10, 
	cat(Mundane, Mental, Talents, Mundane Mental),
	gives(+1 to GR:Born Entertainer), 
	conditional(+1 to ST:Reaction when "to first reaction or Influence roll after a successful performance"),
	upto( @if(me::control_upto > 4 then me::control_upto elseif "TE:Bard" then 6 else 4) ),
	page(DFRPG:A47),
	description(Acting, Dancing, Performance, Public Speaking, Singing)
Born War-Leader, 5/10,
	cat(Mundane, Mental, Talents, Mundane Mental),
	gives(+1 To GR:Born War-Leader),
	page(DFRPG:A47),
	upto( @if(me::control_upto > 4 then me::control_upto elseif "TE:Knight" then 6 else 4) ),
	conditional(+1 to ST:Reaction when "from professional fighters"),
	description(Connoisseur (Weapons), Leadership, Savoir-Faire, Strategy, Tactics)

Charisma, 5/10,
	cat(Mundane, Mental, Mundane Mental, Talents),
	upto( @if(me::control_upto > 4 then me::control_upto elseif "TE:Bard" then 100 else 4) ),
	page(DFRPG:A48),
	gives(+1 to ST:Reaction, +1 To GR:Charisma),
	conditional(+1 to GR:Influence Skills when "making Influence rolls"),
	description(Leadership, Panhandling, Public Speaking)
Combat Reflexes, 15,
	cat(Mundane, Mental, Mundane Mental),
	gives(+1 To GR:Combat Reflexes, +2 to ST:Fright Check),
	page(DFRPG:A48),
	taboo(DI:Combat Paralysis)
Cultural Adaptability, 10, 
	page(DFRPG:A48)

Danger Sense, 15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A48),
	skillused(ST:Perception),
	mode(Sense Danger)

// Eidetic Memory, 5/10,cat(Mundane, Mental, Mundane Mental),displaycost(5),levelnames(,"Photographic"),upto(2),page(DFRPG:A48),taboo(AD:Photographic Memory),skillused(ST:IQ),mode(recall precise details)
Eidetic Memory, 5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A48),
	taboo(AD:Photographic Memory),
	skillused(ST:IQ),
	mode(recall precise details)
Photographic Memory, 10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A48),
	taboo(AD:Eidetic Memory)
Empathy, 15, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A48), 
	gives(+3 to SK:Detect Lies),
	skillused(ST:IQ),
	mode(empathize)
Energy Reserve (Druidic), 3/6,
	cat(Attributes, Exotic, Physical, Exotic Physical),
	upto(_
		@if(_
			me::control_upto > 3 then me::control_upto _
			elseif "TE:Druid" then 20 _
			else 3_
		)_
	),
	page(DFRPG:A48)
Energy Reserve (Holy), 3/6,
	cat(Attributes, Exotic, Physical, Exotic Physical),
	upto(_
		@if(_
			me::control_upto > 3 then me::control_upto _
			elseif "TE:Cleric" then 20 _
			else 3_
		)_
	),
	page(DFRPG:A48)
Energy Reserve (Magical), 3/6,
	cat(Attributes, Exotic, Physical, Exotic Physical),
	upto(_
		@if(_
			me::control_upto > 3 then me::control_upto _
			elseif "TE:Bard" then 20 _
			elseif "TE:Wizard" then 20 _
			else 3_
		)_
	),
	page(DFRPG:A48)
Enhanced Block (Cloak), 5/10,
	cat(Cinematic, Mundane, Mental, Attributes, Mundane Mental),
	page(DFRPG:A49),
	gives(+1 To ST:Block)
Enhanced Block (Shield), 5/10,
	cat(Cinematic, Mundane, Mental, Attributes, Mundane Mental),
	page(DFRPG:A49),
	gives(+1 To ST:Block)
Enhanced Dodge, 15/30,
	cat(Cinematic, Mundane, Mental, Attributes, Mundane Mental),
	page(DFRPG:A49),
	gives(+1 To ST:Dodge)
Enhanced Parry (%Melee Weapon%), 5/10,
	cat(Cinematic, Mundane, Mental, Attributes, Mundane Mental),
	page(DFRPG:A49),
	gives(+1 to "SK:%Melee Weapon%::parryat" listAs "Enhanced Parry (%Melee Weapon%)"),
	x(#ChoiceList(name(Melee Weapon),title(Enhanced Parry: Choose a Melee Weapon),text(Choose a melee meapon skill from the list for your Enhanced Parry:),picksallowed(1),method(bynumber),list("Axe/Mace","Broadsword","Flail","Jitte/Sai","Knife","Kusari","Main-Gauche","Polearm","Rapier","Saber","Shortsword","Smallsword","Spear","Staff","Tonfa","Two-Handed Axe/Mace","Two-Handed Flail","Two-Handed Sword","Whip" ))),
	noresync(yes)
Enhanced Parry (%Swashbuckler Weapon%), 5/10,
	cat(Cinematic, Mundane, Mental, Attributes, Mundane Mental),
	page(DFRPG:A49),
	gives(+1 to "SK:%Swashbuckler Weapon%::parryat" listAs "Enhanced Parry (%Swashbuckler Weapon%)"),
	x(#ChoiceList(name(Swashbuckler Weapon),title(Enhanced Parry: Choose a Melee Weapon),text(Choose a melee weapon skill from the list for your Enhanced Parry:),picksallowed(1),method(bynumber),list("Broadsword","Main-Gauche","Rapier","Saber","Shortsword","Smallsword" ))),
	noresync(yes)
Enhanced Parry (Unarmed), 5/10,
	cat(Cinematic, Mundane, Mental, Attributes, Mundane Mental),
	page(DFRPG:A49),
	gives(+1 to ST:DX::parryat listAs "Enhanced Parry (Unarmed)",
		+1 to SK:Judo::parryat listAs "Enhanced Parry (Unarmed)",
		+1 to SK:Sumo Wrestling::parryat listAs "Enhanced Parry (Unarmed)",
		+1 to SK:Wrestling::parryat listAs "Enhanced Parry (Unarmed)",
		+1 to SK:Boxing::parryat listAs "Enhanced Parry (Unarmed)",
		+1 to SK:Brawling::parryat listAs "Enhanced Parry (Unarmed)",
		+1 to SK:Karate::parryat listAs "Enhanced Parry (Unarmed)")
Extra Attack, 25/50,
	cat(Mundane, Physical, Mundane Physical),
	upto(_
		@if(_
			me::control_upto > 1 then me::control_upto _
			elseif "TE:Barbarian" then 1 _
			elseif "TE:Holy Warrior" then 1 _
			elseif "TE:Scout" then 1 _
			elseif "TE:Knight" then 2 _
			elseif "TE:Martial Artist" then 2 _
			elseif "TE:Swashbuckler" then 2 _
			else 0_
		)_
	),
	page(DFRPG:A49)

Fearlessness, 2/4,
	cat(Mundane, Mental, Mundane Mental),
	gives(+1 To ST:Fright Check),
	page(DFRPG:A49),
	taboo(DI:Cowardice, AD:Unfazeable)

// Fit, 5/15,cat(Mundane, Physical, Mundane Physical),displaycost(5),upto(2),levelnames(,Very Fit),page(DFRPG:A49),taboo(AD:Very Fit, DI:Unfit, DI:Very Unfit),conditional(+1 to ST:HT when "avoiding knockdown, unconsciousness, or death; to resist disease, poison, magic, etc."),gives(+1 to ST:Consciousness Check, +1 to ST:Death Check)
Fit, 5,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A49),
	taboo(AD:Very Fit, DI:Unfit, DI:Very Unfit),
	conditional(+1 to ST:HT when "avoiding knockdown, unconsciousness, or death; to resist disease, poison, magic, etc."),
	gives(+1 to ST:Consciousness Check, +1 to ST:Death Check)
Very Fit, 15,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A49),
	taboo(AD:Fit, DI:Unfit, DI:Very Unfit),
	conditional(+2 to ST:HT when "avoiding knockdown, unconsciousness, or death; to resist disease, poison, magic, etc."),
	gives(+2 to ST:Consciousness Check, +2 to ST:Death Check)
Flexibility, 5/15,cat(Mundane, Physical, Mundane Physical),displaycost(5),upto(2),levelnames(,Double-Jointed),conditional(=@indexedvalue(me::level, 3, 5) To ST:DX when "ignoring penalties for working in close quarters"),gives(=@indexedvalue(me::level, 3, 5) To SK:Climbing, =@indexedvalue(me::level, 3, 5) To SK:Escape),page(DFRPG:A49),taboo(AD:Double-Jointed)
// Flexibility, 5,cat(Mundane, Physical, Mundane Physical),conditional(+3 To ST:DX when "ignoring penalties for working in close quarters"),gives(+3 To SK:Climbing, +3 to SK:Escape),page(DFRPG:A49),taboo(AD:Double-Jointed)
Double-Jointed, 15,
	cat(Mundane, Physical, Mundane Physical),
	conditional(+5 To ST:DX when "ignoring penalties for working in close quarters"),
	gives(+5 To SK:Climbing, +5 to SK:Escape),
	page(DFRPG:A49),
	taboo(AD:Flexibility)

Green Thumb, 5/10,
	cat(Mundane, Mental, Talents, Mundane Mental),
	gives(+1 To GR:Green Thumb, +1 to AD:Speak with Plants::skillscore),
	page(DFRPG:A50),
	upto( @if(me::control_upto > 4 then me::control_upto elseif "TE:Druid" then 6 else 4) ),
	conditional(+1 to ST:Reaction from "sentient plants and fungi"),
	description(Herb Lore, Naturalist, Pharmacy)

Hard to Kill, 2/4,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A50),
	gives(+1 to ST:Death Check)
Hard to Subdue, 2/4,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A50),
	gives(+1 to ST:Consciousness Check)
Healer, 10/20,
	cat(Mundane, Mental, Talents, Mundane Mental),
	gives(+1 To GR:Healer),
	upto(4),
	page(DFRPG:A50),
	description(Diagnosis, Esoteric Medicine, First Aid, Pharmacy, Surgery, Veterinary, Physiology, Psychology)
High Pain Threshold, 10,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A50),
	taboo(DI:Low Pain Threshold),
	skillused(ST:Will+3|ST:HT+3),
	mode(ignore pain|avoid knockdown)
Honest Face, 1,
	cat(Mundane, Physical, Mundane Physical, Perks),
	page(DFRPG:A50),
	conditional(+1 to SK:Acting when "acting innocent")
	
Intuition, 15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A50),
	skillused(ST:IQ),
	mode(guess correctly)

Language Talent, 10,
	cat(Mundane, Mental, Mundane Mental, Talents),
	page(DFRPG:A50)
Language: %specify% (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, A9),
	x(#InputReplace("Specify the language here:", %specify%, , "Language (Spoken)"))
Language: %specify% (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, A9),
	x(#InputReplace("Specify the language here:", %specify%, , "Language (Written)"))
Language: %specify%, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9),
	x(#InputReplace("Specify the language here:", %specify%, , "Language (Spoken and Written)"))
Language: Ancient (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Ancient (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Ancient, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Angelic (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Angelic (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Angelic, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Demontongue (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Demontongue (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Demontongue, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Dwarvish (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Dwarvish (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Dwarvish, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Elvish (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Elvish (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Elvish, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Gnomish (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Gnomish (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Gnomish, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Elder Tongue (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Elder Tongue (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Elder Tongue, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Faerie (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Faerie (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Faerie, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Orcish (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Orcish (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Orcish, 6,
	cat(Mundane, Social, Language, Language Spoken, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 4 else 6)),
	page(DFRPG:A51, DFRPG:A9)
Language: Reptilian (Spoken), 3,
	cat(Mundane, Social, Language, Language Spoken, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Language: Draconic (Written), 3,
	cat(Mundane, Social, Language, Language Written, Social Background, Mundane Social),
	formula(@if(AD:Language Talent > 0 THEN 2 else 3)),
	page(DFRPG:A51, DFRPG:A9)
Luck, 15/30/60,
	cat(Cinematic, Mundane, Mental, Mundane Mental),
	displaycost(15),
	levelnames(, Extraordinary, Ridiculous),
	page(DFRPG:A51),
	upto(3),
	taboo(Extraordinary Luck, Ridiculous Luck)
// Luck, 15,cat(Cinematic, Mundane, Mental, Mundane Mental),page(DFRPG:A51),taboo(AD:Extraordinary Luck, AD:Ridiculous Luck)
Extraordinary Luck, 30,
	cat(Cinematic, Mundane, Mental, Mundane Mental),
	page(DFRPG:A51),
	taboo(AD:Luck, AD:Ridiculous Luck)
Ridiculous Luck, 60,
	cat(Cinematic, Mundane, Mental, Mundane Mental),
	page(DFRPG:A51),
	taboo(AD:Luck, AD:Extraordinary Luck)

Magic Resistance, 2/4,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A51),
	taboo(AD:Bardic Talent, AD:Magery, AD:Magery 0, AD:Power Investiture, AD:Power Investiture (Druidic) )
Mind Shield, 4/8,
	cat(Exotic, Mental, Exotic Mental),
	page(DFRPG:A51)

Night Vision, 1/2,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A51),
	upto(9),
	taboo(DI:Blindness),
	conditional(+1 to ST:Vision when "offsetting darkess penalties and there is at least some light")

Outdoorsman, 10/20, 
	cat(Mundane, Mental, Talents, Mundane Mental),
	gives(+1 To GR:Outdoorsman), 
	upto( @if(me::control_upto > 4 then me::control_upto elseif "TE:Barbarian" then 6 elseif "TE:Scout" then 6 else 4) ),
	page(DFRPG:A51),
	description(Camouflage, Disguise (Animals), Fishing, Mimicry (Animal Sounds and Bird Calls), Naturalist, Navigation, Survival, Tracking, Weather Sense)

Penetrating Voice, 1,
	cat(Mundane, Physical, Mundane Physical, Perks),
	page(DFRPG:A52),
	taboo(DI:Mute)
Perfect Balance, 15,
	cat(Mundane, Physical, Mundane Physical),
	gives(+1 To SK:Acrobatics, +1 to SK:Climbing),
	page(DFRPG:A52)
Peripheral Vision, 15,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A52),
	taboo(DI:Blindness)

Rapid Healing, 5,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A52),
	taboo(AD:Very Rapid Healing)
Very Rapid Healing, 15,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A52),
	taboo(AD:Rapid Healing)
Recovery, 10,
	cat(Exotic, Physical, Exotic Physical),
	page(DFRPG:A52)
Resistant to Disease, 1/2, 
	cat(Mundane, Physical, Mundane Physical),
	upto(6), 
	page(DFRPG:A52)
Resistant to Poison,  1/2, 
	cat(Mundane, Physical, Mundane Physical),
	upto(6), 
	page(DFRPG:A52)

Serendipity, 15/30,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A52)
Signature Gear, 1,
	cat(Mundane, Social, Perks, Mundane Social),
	page(DFRPG:A53)
Spirit Empathy, 10,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A53),
	skillused(ST:IQ),
	mode(empathize)
Striking ST, 5/10, 
	cat(Exotic, Physical, Exotic Physical),
	upto(2),
	gives(+1 to ST:Striking ST),
	conditional(+1 to ST:ST when "Striking ST applies"),
	page(DFRPG:A53)

Trademark Move, 1, 
	cat(Mundane, Mental, Mundane Mental, Perks),
	page(DFRPG:A53)

Unfazeable, 15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A53),
	taboo(AD:Fearlessness)
	
Voice, 10,
	cat(Mundane, Physical, Mundane Physical),
	gives(+2 To GR:Voice),
	page(DFRPG:A54),
	conditional(+2 to ST:Reaction when "your voice can be heard")

Wealth, 10/20/30,
	cat(Mundane, Social, Wealth, Mundane Social),
	upto(3),
	page(DFRPG:A54),
	levelnames([Average], Comfortable, Wealthy, Very Wealthy),
	taboo(DI:Wealth),
	gives(=@indexedvalue(%level, 10, 40, 190, @power(10, (me::level-1))-10) To ST:Wealth Modifier)
Weapon Bond, 1, 
	cat(Mundane, Mental, Mundane Mental, Perks),
	page(DFRPG:A54), 
	x(_
		#message("Note: You will need to add the '_Perk: Weapon Bond' modifier to the specific weapon which receives a bonus from Weapon Bond in order for the skill level to be increased on the Weapon Table." )_
	)
	
Weapon Master (All weapons), 45,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Weapon Master (Swords), 35,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Weapon Master (Fencing Weapons), 30,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Weapon Master (Knightly Weapons), 30,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Weapon Master (Two weapons normally used together), 25,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Weapon Master (One specific weapon), 20,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Weapon Master (One exotic weapon), 20,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Weapon Master (Bow), 20,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Weapon Master (Knives), 20,
	cat(Cinematic, Mundane, Physical, Mundane Mental),
	page(DFRPG:A54), 
	x( #Message(In order for the Damage Bonus to be applied to the character's weapons you will need to add the Weapon Modifier "_Advantage: Weapon Master Damage Bonus" to each weapon.) )
Wild Talent, 20/40,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A54)

	
********************************************************************************************************\[STOP]

[DISADVANTAGES]
*******************************************************************************************************\[START]
<Racial Attributes>
Racial ST Reduction, -10/-20, page(DFRPG:A8), gives(-1 to ST:ST)
Racial DX Reduction, -20/-40, page(DFRPG:A8), gives(-1 to ST:DX)
Racial IQ Reduction, -20/-40, page(DFRPG:A8), gives(-1 to ST:IQ)
Racial HT Reduction, -10/-20, page(DFRPG:A8), gives(-1 to ST:HT)

Racial Will Reduction, -5/-10, page(DFRPG:A10), gives(-1 to ST:Will)
Racial Perception Reduction, -5/-10, page(DFRPG:A10), gives(-1 to ST:Perception)
Racial Hit Points Reduction, -2/-4, page(DFRPG:A10), gives(-1 to ST:Hit Points)
Racial Fatigue Points Reduction, -3/-6, page(DFRPG:A10), gives(-1 to ST:Fatigue Points)
Racial Basic Move Reduction, -5/-10, page(DFRPG:A11), gives(-1 to ST:Basic Move)

<_General>
Absent-Mindedness, -15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A56),
	conditional(-5 to ST:IQ when "concentrating on another task"),
	skillused(ST:IQ-2),
	mode(forget trivial tasks and items)
Appearance, -4/-8,
	cat(Mundane, Physical, Mundane Physical),
	upto(2),
	page(DFRPG:A56),
	levelnames([Average], Unattractive, Ugly),
	taboo(AD:Appearance),
	gives( =@indexedvalue(%level, -1, -2) to ST:Unappealing, 
		=@indexedvalue(%level, -1, -2) to ST:Appealing, 
		=@indexedvalue(%level, -2, -4) to SK:Sex Appeal )

Bad Temper, -10, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*),
	mods(Self-Control),
	page(DFRPG:A57),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Berserk, -10, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*), 
	mods(Self-Control), 
	page(DFRPG:A57), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Blindness, -50, 
	cat(Mundane, Physical, Mundane Physical), 
	page(DFRPG:A57), 
	taboo(AD:Acute Vision, AD:Night Vision, AD:Peripheral Vision, DI:One Eye),
	gives(-6 to CL:Combat/Weapons - Melee Combat, 
		-6 to CL:Combat/Weapons - Ranged Combat, 
		-ST:Vision::basescore to ST:Vision)
Bloodlust, -10, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*), 
	mods(Self-Control), 
	page(DFRPG:A57), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control),	page(DFRPG:A55))
Bully, -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*),
	mods(Self-Control),
	page(DFRPG:A57), 
	gives(-2 to ST:Reaction),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control),	page(DFRPG:A55))
Callous, -5,
	cat(Mundane, Mental, Mundane Mental),
	gives(-3 To SK:Teaching, +1 to SK:Interrogation, +1 to SK:Intimidation),
	page(DFRPG:A57), 
	taboo(DI:Charitable, DK:Selfless),
	conditional(-1 to ST:Reaction when "past victim, or has Empathy (-3 to skill rolls)")
Charitable, -15,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-15*),
	mods(Self-Control),
	page(DFRPG:A58), 
	taboo(DI:Callous),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control),	page(DFRPG:A55))
// Chummy, -5/-10,cat(Mundane, Mental, Mundane Mental),upto(2),displaycost(-5),levelnames(,Gregarious),page(DFRPG:A58),taboo(DI:Loner, DI:Gregarious),conditional(=-@if(%level < 2 THEN 1 ELSE 0) to ST:IQ when "alone",=-@if(%level = 2 THEN 1 ELSE 0) to ST:IQ when "in a group of four or less",=-@if(%level = 2 THEN 4 ELSE 0) to ST:IQ when "alone")
Chummy, -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A58), 
	taboo(DI:Loner, DI:Gregarious),
	conditional(=-1 to ST:IQ when "alone")
Gregarious, -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A58), 
	taboo(DI:Chummy, DI:Loner),
	conditional(-1 to ST:IQ when "in a group of four or less", -4 to ST:IQ when "alone")
Clueless, -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A58), 
	gives(-4 To SK:Savoir-Faire, -2 to ST:Reaction)
Code of Honor (Outlaw's), -5, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A58) 
Code of Honor (Gentleman's), -10, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A58) 
Code of Honor (Soldier's), -10, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A58) 
Code of Honor (Bushido), -15, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A58) 
Code of Honor (Chivalry), -15, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A58) 
Combat Paralysis, -15,
	cat(Mundane, Physical, Mundane Physical),
	gives(-2 to ST:Fright Check),
	page(DFRPG:A58), 
	taboo(AD:Combat Reflexes)
Compulsive Carousing, -5, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A59), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Compulsive Gambling, -5, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A59), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Compulsive Generosity, -5, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A59), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Compulsive Lying, -15, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-15*), 
	mods(Self-Control), 
	page(DFRPG:A59), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Compulsive Spending, -5, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A59), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Compulsive Vowing, -5, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A59), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Cowardice, -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*),
	mods(Self-Control),
	page(DFRPG:A59), 
	taboo(AD:Fearlessness),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55)),
	gives(_
		=@if(@hasmod(You resist on a roll of  6 or less (quite rarely)) then -4 else 0 ) to ST:Fright Check,
		=@if(@hasmod(You resist on a roll of  9 or less (fairly often)) then -3 else 0 ) to ST:Fright Check,
		=@if(@hasmod(You resist on a roll of 12 or less (quite often)) then -2 else 0 ) to ST:Fright Check,
		=@if(@hasmod(You resist on a roll of 15 or less (almost all the time)) then -1 else 0 ) to ST:Fright Check_
	)
Curious, -5,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*),
	mods(Self-Control),
	page(DFRPG:A59), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))

Disciplines of Faith, -5/-10,
	cat(Mundane, Mental, Mundane Mental),
	upto(2),
	page(DFRPG:A59), 
	levelnames(,,),
	x(#InputToTag("Specify your set of rules here:", nameext, , "Discipline of Faith"))
Disciplines of Faith (Chi Rituals), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A59) 
Disciplines of Faith (Mysticism), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A59) 
Disciplines of Faith (Ritualism), -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A59) 

Easy to Read, -10, 
	page(DFRPG:A60)

Fanaticism, -15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A60)
Frightens Animals, -10,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A60),
	taboo(AD:Animal Empathy, AD:Animal Friend),
	gives( -4 to SK:Animal Handling, -4 to "SK:Disguise (Animals)" ),
	conditional(-4 to ST:Reaction when "animal is reacting", 
		-1 to ST:Reaction when "someone sees how animals react to you, or has Animal Empathy")
	
Gluttony, -5, 
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A60), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Greed, -15, 
	displaycost(-15*), 
	mods(Self-Control), 
	page(DFRPG:A60), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Gullibility, -10, 
	displaycost(-10*), 
	gives(-3 To SK:Merchant), 
	mods(Self-Control), 
	page(DFRPG:A61),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55)),
	taboo(SK:Detect Lies)

Ham-Fisted, -5/-10,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A61),
	taboo(AD:High Manual Dexterity),
	upto(2),
	gives(-3 to SK:Fast-Draw, -3 to GR:Ham-Fisted),
	conditional(-1 to SK:Traps when "making DX-based rolls")
Hard of Hearing, -10,
	cat(Mundane, Physical, Mundane Physical),
	gives(-4 To ST:Hearing),
	page(DFRPG:A61),
	taboo(AD:Acute Hearing)
Honesty, -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*),
	mods(Self-Control),
	page(DFRPG:A61),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))

Illiteracy, -3, 
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A61)
Impulsiveness, -10, 
	displaycost(-10*), 
	mods(Self-Control), 
	page(DFRPG:A61), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))

Intolerance, -5/-10,
	cat(Mundane, Mental, Mundane Mental),
	upto(2),
	page(DFRPG:A61), 
	levelnames(Targeted, Broad),
	x(#InputToTag("Specify the group or groups you are prejudiced against:", nameext, , "Intolerance"))
Intolerance ("Evil" religions), -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A61)
Intolerance (All other religions), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A61)
Intolerance (Urbanites), -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A61)
Intolerance (Specific Race), -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A61)
Intolerance (All other races), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A61)

Jealousy, -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A61)

Kleptomania, -15,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-15*),
	mods(Self-Control),
	page(DFRPG:A62),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Klutz, -5/-15,
	cat(Mundane, Physical, Mundane Physical),
	levelnames(, Total),
	needs(DX <= 13),
	page(DFRPG:A62),
	upto(2),
	taboo(DI:Total Klutz)
Total Klutz, -15,
	cat(Mundane, Physical, Mundane Physical),
	needs(DX <= 13),
	page(DFRPG:A62),
	taboo(DI:Klutz)

Lame (Crippled Leg), -10, 
	page(DFRPG:A62),
	cat(Mundane, Physical, Mundane Physical), 
	sets(ST:Basic Move = @int(ST:Basic Speed/2)), 
	taboo(ST:Basic Move > @int(ST:Basic Speed/2), DI:Lame (Missing Leg), DI:Lame (Legless)),_
	conditional(-3 to ST:DX when "using any skill which requires your legs"),_
	gives(-3 to "CL:Combat/Weapons - Melee Combat")
Lame (Missing Leg), -20, 
	page(DFRPG:A62),
	cat(Mundane, Physical, Mundane Physical), 
	sets(ST:Basic Move = 2), 
	taboo(ST:Basic Move > 2, DI:Lame (Crippled Leg), DI:Lame (Legless)),_
	conditional(-6 to ST:DX when "using any skill which requires your legs"), 
	gives(-6 to "CL:Combat/Weapons - Melee Combat")
Lame (Legless), -30, 
	page(DFRPG:A62),
	cat(Mundane, Physical, Mundane Physical), 
	sets(ST:Basic Move = 0), 
	taboo(ST:Basic Move > 0, DI:Lame (Crippled Leg), DI:Lame (Missing Leg)),_
	conditional(-6 to ST:DX when "using any skill which requires your legs"), 
	gives(-6 to "CL:Combat/Weapons - Melee Combat")
Laziness, -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A62)
Lecherousness, -15,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-15*),
	mods(Self-Control),
	page(DFRPG:A62),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Loner, -5,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*),
	mods(Self-Control),
	page(DFRPG:A63),
	taboo(DI:Chummy, DI:Gregarious),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Low Pain Threshold, -10,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A63),
	taboo(AD:High Pain Threshold)

Miserliness, -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*),
	mods(Self-Control),
	page(DFRPG:A63),
	taboo(DI:Compulsive Generosity, DI:Compulsive Spending),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
	
Nervous Stomach, -1,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A63),
	conditional(-3 to ST:HT when "making HT rolls to avoid illness brought on by rich or spicy food, strong drink, etc.")
No Sense of Humor, -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A63),
	conditional(-2 to ST:Reaction when "in all but the most solemn of situations")
	
Oblivious, -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A63),
	gives(-1 To GR:Oblivious)
Obsession, -5/-10, 
	cat(Mundane, Mental, Mundane Mental),
	upto(2), 
	displaycost(-5/-10*), 
	page(DFRPG:A63), 
	levelnames(Short-Term, Long-Term),
	mods(Self-Control), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55)),
	x(#InputToTag("Specify the obsession:", nameext, , "Specify Obsession"))
Obsession (Become a master of my weapon), -5, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A63), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Obsession (Become the best swordsman in the world!), -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*), 
	mods(Self-Control), 
	page(DFRPG:A63), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Obsession (Become the world's most powerful wizard), -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*), 
	mods(Self-Control), 
	page(DFRPG:A63), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Obsession (Become a lich), -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*), 
	mods(Self-Control), 
	page(DFRPG:A63), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Obsession (Perfect my art at any cost), -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*), 
	mods(Self-Control), 
	page(DFRPG:A63), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Obsession (Slay some specific type of monster), -5, 
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A63), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Odious Personal Habit (%specify%), -5/-10, 
	cat(Mundane, Social, General/Influence/Other Physical Features, Mundane Social),
	upto(2), 
	page(DFRPG:A63),
	conditional(-1 to ST:Reaction when "people notice your problem"),
	x(#InputReplace("Specify the Odious Personal Habit:", %specify%, , "Specify Odious Personal Habit"))
Odious Personal Habit (Unrefined manners), -5, 
	cat(Mundane, Social, General/Influence/Other Physical Features, Mundane Social),
	page(DFRPG:A63), 
	conditional(-1 to ST:Reaction when "people are offended by your manners")
Odious Personal Habit ("Dirty Hippy"), -5, 
	cat(Mundane, Social, General/Influence/Other Physical Features, Mundane Social),
	page(DFRPG:A63), 
	conditional(-1 to ST:Reaction when "people are offended by you")
Odious Personal Habit ("Unwashed bushwhacker"), -5, 
	cat(Mundane, Social, General/Influence/Other Physical Features, Mundane Social),
	page(DFRPG:A63), 
	conditional(-1 to ST:Reaction when "people are offended by you")
One Arm, -20, 
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A63), 
	gives(-ST:Two Arm Lifting ST::basescore to ST:Two Arm Lifting ST, 
		-ST:Two Arm Striking ST::basescore to ST:Two Arm Striking ST), 
	taboo(DI:One Hand, AD:Ambidexterity)
One Eye, -15, 
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A63), 
	taboo(DI:Blindness),_
	conditional(-1 to ST:DX when "in combat", -3 to CL:Combat/Weapons - Ranged Combat when "not aiming"), 
	gives(-1 to CL:Combat/Weapons - Melee Combat)
One Hand, -15, 
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A64), 
	taboo(DI:One Arm, AD:Ambidexterity)
Overconfidence, -5, 
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A64), 
	conditional(+2 to ST:Reaction when "young or naive individuals", -2 to ST:Reaction when "experienced NPCs"), 
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Overweight, -1,
	cat(Mundane, Physical, Build, Mundane Physical),
	page(DFRPG:A64), 
	taboo(DI:Skinny, DI:Fat),
	gives(-1 To SK:Disguise, -1 To SK:Shadowing, +1 To SK:Swimming),
	conditional(+1 to ST:ST when "you resist knockback")
Fat, -3,
	cat(Mundane, Physical, Build, Mundane Physical),
	page(DFRPG:A64), 
	taboo(DI:Skinny, DI:Overweight),
	needs(ST:HT <= 15),
	gives(-2 To SK:Disguise, -2 To SK:Shadowing,+3 To SK:Swimming),
	conditional(+2 to ST:ST when "you resist knockback")

Paranoia, -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A64), 
	conditional(-2 to ST:Reaction)
Phobia, -5/-10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5/-10/+*),
	upto(4),
	mods(Self-Control),
	page(DFRPG:A64), 
	levelnames(Narrow,Broad,Pervasive,Unavoidable),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55)),
	x(#InputToTag("Specify what you're afraid of here:", nameext, , "Phobia"))
Phobia (Crowds), -15,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-15*), 
	mods(Self-Control), 
	page(DFRPG:A64),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Phobia (Machinery), -5,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*), 
	mods(Self-Control), 
	page(DFRPG:A64),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Post-Combat Shakes, -5,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*),
	mods(Self-Control),
	page(DFRPG:A65),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Pyromania, -5,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*),
	mods(Self-Control),
	page(DFRPG:A65),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))

Selfless, -5,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*),
	mods(Self-Control),
	taboo(DI:Callous),
	page(DFRPG:A65),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))

Sense of Duty (Adventuring companions), -5, 
	page(DFRPG:A65)
Sense of Duty (Nature), -15, 
	page(DFRPG:A65)
Sense of Duty (Coreligionists), -10, 
	page(DFRPG:A65)
Sense of Duty (Good entities), -10, 
	page(DFRPG:A65)
Short Attention Span, -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*),
	mods(Self-Control),
	page(DFRPG:A66),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Skinny, -5,
	cat(Mundane, Physical, Build, Mundane Physical),
	gives(-2 To SK:Disguise, -2 to SK:Shadowing),
	conditional(-2 to ST:ST when "you resist knockback"),
	needs(ST:HT <= 14),
	page(DFRPG:A66),
	taboo(DI:Overweight, DI:Fat)
Social Stigma (Criminal Record), -5, 
	cat(Mundane, Social, Mundane Social),
	page(DFRPG:A66) 
Social Stigma (Disowned), -5, 
	cat(Mundane, Social, Mundane Social),
	page(DFRPG:A66),
	taboo(DI:Social Stigma (Half-Breed), DI:Social Stigma (Minority Group), DI:Social Stigma (Savage) )
Social Stigma (Excommunicated), -10, 
	cat(Mundane, Social, Mundane Social),
	page(DFRPG:A66) 
Social Stigma (Half-Breed), -5, 
	cat(Mundane, Social, Mundane Social),
	page(DFRPG:A66),
	taboo(DI:Social Stigma (Disowned), DI:Social Stigma (Minority Group), DI:Social Stigma (Savage) )
Social Stigma (Minority Group), -10, 
	cat(Mundane, Social, Mundane Social),
	page(DFRPG:A66),
	taboo(DI:Social Stigma (Disowned), DI:Social Stigma (Half-Breed), DI:Social Stigma (Savage) )
Social Stigma (Savage), -10, 
	cat(Mundane, Social, Mundane Social),
	page(DFRPG:A66),
	taboo(DI:Social Stigma (Disowned), DI:Social Stigma (Half-Breed), DI:Social Stigma (Minority Group))
Stubbornness, -5,
	cat(Mundane, Mental, Mundane Mental),
	mods(Self-Control),
	displaycost(-5*),
	page(DFRPG:A66),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))

Trickster, -15,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-15*),
	mods(Self-Control),
	page(DFRPG:A66),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))
Truthfulness, -5,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-5*),
	mods(Self-Control),
	taboo(DI:Compulsive Lying),
	gives(-5 to SK:Acting, -5 to SK:Fast-Talk),
	page(DFRPG:A67),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))

// Unfit, -5/-15,cat(Mundane, Physical, Mundane Physical),displaycost(-5),upto(2),page(DFRPG:A67),taboo(DI:Very Unfit, AD:Fit, AD:Very Fit),conditional(-1 to ST:HT when "making HT rolls"),gives(-1 to ST:Death Check, -1 to ST:Consciousness Check)
Unfit, -5,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A67),
	taboo(DI:Very Unfit, AD:Fit, AD:Very Fit),
	conditional(-1 to ST:HT when "making HT rolls"),
	gives(-1 to ST:Death Check, -1 to ST:Consciousness Check)
Very Unfit, -15,
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A67),
	taboo(DI:Unfit, AD:Fit, AD:Very Fit),
	conditional(-2 to ST:HT when "making HT rolls"),
	gives(-2 to ST:Death Check, -2 to ST:Consciousness Check)
Unnatural Features, -1/-2,
	cat(Mundane, Physical, General/Influence/Other Physical Features, Mundane Physical),
	upto(5),
	gives(-1 To SK:Disguise, -1 To SK:Shadowing),
	page(DFRPG:A67),
	x(#InputToTag("Please describe the feature:", nameext, , "Unnatural Features"))

Vow, -5/-10/-15,
	cat(Mundane, Mental, Mundane Mental),
	levelnames(Minor, Major, Great),
	page(DFRPG:A67),
	upto(3),
	x(#InputToTag("Please describe the nature of your Vow:", nameext, , "Vow"))
Vow (Chastity), -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Use only weapon of choice), -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Vegetarianism), -5,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Own no more than horse can carry), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Own no more than what can be carried), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (No edged weapons), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Never sleep indoors), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Silence), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Never refuse a challenge to combat), -10,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Use no weapons), -15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Always fight unarmed), -15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Never wear armor), -15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Challenge every perceived rival to combat), -15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)
Vow (Challenge every swordsman to combat), -15,
	cat(Mundane, Mental, Mundane Mental),
	page(DFRPG:A67)

Wealth, -10/-15/-25,
	cat(Mundane, Social, Wealth, Mundane Social),
	upto(3),
	page(DFRPG:A67),
	levelnames([Average], Struggling, Poor, Dead Broke),
	gives(=@indexedvalue(%level, -5, -8, -10) To ST:Wealth Modifier),
	taboo(AD:Wealth, DI:Wealth > me::level, DI:Wealth < me::level)
Weirdness Magnet, -15,
	cat(Supernatural, Mental, Supernatural Mental),
	page(DFRPG:A67),
	conditional(-2 to ST:Reaction when "sensed by anyone with spellcasting ability") 
Wounded, -5, 
	cat(Mundane, Physical, Mundane Physical),
	page(DFRPG:A67)

Xenophilia, -10,
	cat(Mundane, Mental, Mundane Mental),
	displaycost(-10*),
	mods(Self-Control),
	page(DFRPG:A68),
	initmods(You resist on a roll of 12 or less (quite often), *1, shortname(12), group(Self-Control), page(DFRPG:A55))

********************************************************************************************************\[STOP]
[QUIRKS]
*******************************************************************************************************\[START]
<_General>
_New Quirk, -1,
	cat(General),
	page(DFRPG:A68),
	noresync(yes),
	x(#InputToTagReplace("Please describe this quirk:", name, , "New Quirk"))
_Unused Quirk 1, -1,
	cat(General),
	page(DFRPG:A68),
	noresync(yes)
_Unused Quirk 2, -1,
	cat(General),
	page(DFRPG:A68),
	noresync(yes)
_Unused Quirk 3, -1,
	cat(General),
	page(DFRPG:A68),
	noresync(yes)
_Unused Quirk 4, -1,
	cat(General),
	page(DFRPG:A68),
	noresync(yes)
_Unused Quirk 5, -1,
	cat(General),
	page(DFRPG:A68),
	noresync(yes)

********************************************************************************************************\[STOP]
[SKILLS]
*******************************************************************************************************\[START]
<Holy Skills>
Esoteric Medicine (Holy),
	cat(_General, Esoteric, Medical),
	type(Per/H),
	default(ST:Perception-6),
	page(DFRPG:A22),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness)
Exorcism,
	cat(_General, Occult/Magical),
	type(Will/H),
	default(ST:Will-6, SK:Religious Ritual-3, SK:Theology-3),
	page(DFRPG:A22),
	ident(Clerical, Holiness),
	needs(AD:Power Investiture | AD:Holiness)

<Druidic Skills>
Esoteric Medicine (Druidic),
	cat(_General, Esoteric, Medical),
	type(Per/H),
	default(ST:Perception - 6),
	page(DFRPG:A25),
	ident(Druidic),
	needs("AD:Power Investiture (Druidic)")
Herb Lore,
	cat(_General, Occult/Magical, Plant, Elixirs, Elixirs -  Herbal),
	type(IQ/VH),
	page(DFRPG:A25),
	ident(Druidic),
	needs("AD:Power Investiture (Druidic)")

<Chi Skills>
Autohypnosis,
	type(Will/H),
	page(DFRPG:A31),
	needs(AD:Trained by a Master)
Blind Fighting,
	type(Per/VH),
	page(DFRPG:A32),
	needs(AD:Trained by a Master)
Body Control,
	type(HT/VH),
	page(DFRPG:A32),
	needs(AD:Trained by a Master)
Breaking Blow,
	type(IQ/H),
	page(DFRPG:A32),
	needs(AD:Trained by a Master)
Breath Control,
	type(HT/H),
	page(DFRPG:A32),
	needs(AD:Trained by a Master)
Esoteric Medicine (Chi),
	type(Per/H),
	default(ST:Perception - 6),
	page(DFRPG:A32),
	needs(AD:Trained by a Master)
Immovable Stance,
	type(DX/H),
	page(DFRPG:A32),
	needs(AD:Trained by a Master)
Kiai,
	type(HT/H),
	page(DFRPG:A32),
	needs(AD:Trained by a Master)
Light Walk,
	type(DX/H),
	page(DFRPG:A33),
	needs(AD:Trained by a Master)
Mental Strength,
	type(Will/E),
	page(DFRPG:A33),
	needs(AD:Trained by a Master)
Mind Block,
	type(Will/A),
	default(ST:Will - 5),
	page(DFRPG:A33),
	needs(AD:Trained by a Master)
Parry Missile Weapons,
	type(DX/H),
	parryat(@int(%level/2)+3),
	page(DFRPG:A33),
	needs(AD:Trained by a Master)
Power Blow,
	type(Will/H),
	page(DFRPG:A33),
	needs(AD:Trained by a Master)
Pressure Points,
	type(IQ/H),
	page(DFRPG:A33),
	needs(AD:Trained by a Master)
Push,
	type(DX/H),
	page(DFRPG:A33),
	needs(AD:Trained by a Master)
Throwing Art,
	type(DX/H),
	page(DFRPG:A34),
	needs(AD:Trained by a Master)



<_General>
Acrobatics,
	cat(_General, Athletic),
	type(DX/H),
	default(ST:DX - 6),
	page(DFRPG:A72)
Acting,
	cat(_General, Social, Spy),
	type(IQ/A),
	default(ST:IQ - 5, SK:Performance - 2, SK:Public Speaking - 5),
	page(DFRPG:A72)
Alchemy,
	cat(_General, Natural Sciences, Occult/Magical, Elixirs, Elixirs -  Alchemical),
	type(IQ/VH),
	page(DFRPG:A72)

Animal Handling,
	cat(_General, Animal),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A72),
	x(#InputToTag("You must specialize in a category of animals:", nameext, "Equines", "Animal Handling"))
Animal Handling (Felines),
	cat(_General, Animal),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A72)
Animal Handling (Canines),
	cat(_General, Animal),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A72)
Animal Handling (Equines),
	cat(_General, Animal),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A72)
Animal Handling (Snakes),
	cat(_General, Animal),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A72)
Armory (Body Armor),
	cat(_General, Military, Repair/Maintenance),
	type(IQ/A),
	page(DFRPG:A73),
	default(ST:IQ - 5, "SK:Armory (Melee Weapons)" - 4, "SK:Armory (Missile Weapons)" - 4)
Armory (Melee Weapons),
	cat(_General, Military, Repair/Maintenance),
	type(IQ/A),
	page(DFRPG:A73),
	default(ST:IQ - 5, "SK:Armory (Body Armor)" - 4, "SK:Armory (Missile Weapons)" - 4)
Armory (Missile Weapons),
	cat(_General, Military, Repair/Maintenance),
	type(IQ/A),
	page(DFRPG:A73),
	default(ST:IQ - 5, "SK:Armory (Melee Weapons)" - 4, "SK:Armory (Body Armor)" - 4)

Boating,
	cat(_General, Vehicle),
	type(DX/A),
	page(DFRPG:A73),
	default(ST:DX - 5, ST:IQ - 5)
Body Sense,
	cat(_General, Athletic),
	type(DX/H),
	page(DFRPG:A73),
	default(ST:DX - 6, SK:Acrobatics - 3)
Bolas,
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/A),
	page(DFRPG:A73)
Camouflage,
	cat(_General, Military, Outdoor/Exploration),
	type(IQ/E),
	default(ST:IQ - 4, SK:Survival - 2),
	page(DFRPG:A73)
Carousing,
	cat(_General, Criminal/Street, Social),
	type(HT/E),
	default(ST:HT - 4),
	page(DFRPG:A73)
Cartography,
	cat(_General, Outdoor/Exploration, Social Sciences/Humanities),
	type(IQ/A),
	default(ST:IQ - 5, SK:Navigation - 4),
	page(DFRPG:A74)
Climbing,
	cat(_General, Athletic, Criminal/Street, Outdoor/Exploration),
	type(DX/A),
	default(ST:DX - 5),
	page(DFRPG:A74)
Cloak,
	cat(_General, Combat/Weapons - Melee Combat),
	type(DX/A),
	default(ST:DX - 5, SK:Net - 4, SK:Shield - 4),
	page(DFRPG:A74),
	blockat(@int(%level/2)+3)

Connoisseur (Art),
	cat(_General, Arts/Entertainment, Knowledge, Social),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A74)
Connoisseur (Luxuries),
	cat(_General, Arts/Entertainment, Knowledge, Social),
	type(IQ/A),
	default(ST:IQ - 5, "SK:Savoir-Faire" - 3),
	page(DFRPG:A74)
Connoisseur (Weapons),
	cat(_General, Arts/Entertainment, Knowledge, Social),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A74)
Counterfeiting,
	cat(_General, Criminal/Street),
	type(IQ/H),
	default(ST:IQ - 6, SK:Forgery - 2),
	page(DFRPG:A74)
Current Affairs, 
	type(IQ/E), 
	default(ST:IQ - 4, SK:Research - 4), 
	page(DFRPG:A74)

Dancing,
	cat(_General, Arts/Entertainment),
	type(DX/A),
	default(ST:DX - 5),
	page(DFRPG:A75)
Detect Lies,
	cat(_General, Police, Social, Spy),
	type(Per/H),
	default(SK:Perception - 6),
	page(DFRPG:A75)
Diagnosis,
	cat(_General, Medical),
	type(IQ/H),
	default(ST:IQ - 6, SK:First Aid - 8, SK:Veterinary - 5),
	page(DFRPG:A75)
Diplomacy,
	cat(_General, Business, Police, Social),
	type(IQ/H),
	default(ST:IQ - 6),
	page(DFRPG:A75),
	gives(=@if(me::level >= 20 then 2 else 0) to ST:Reaction)
Disguise,
	cat(_General, Criminal/Street, Spy),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A75)
Disguise (Animals),
	cat(_General, Criminal/Street, Spy, Outdoor/Exploration, Animal),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A75)

Escape,
	cat(_General, Criminal/Street, Spy),
	type(DX/H),
	default(ST:DX - 6),
	page(DFRPG:A75)

Fast-Draw (Arrow),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	page(DFRPG:A76)
Fast-Draw (Knife),
	cat(_General, Combat/Weapons - Melee Combat, Combat/Weapons - Ranged Combat),
	type(DX/E),
	page(DFRPG:A76)
Fast-Draw (Potion),
	cat(_General, Combat/Weapons - Melee Combat, Combat/Weapons - Ranged Combat),
	type(DX/E),
	page(DFRPG:A76)
Fast-Draw (Scroll),
	cat(_General, Combat/Weapons - Melee Combat, Combat/Weapons - Ranged Combat),
	type(DX/E),
	page(DFRPG:A76)
Fast-Draw (Sword),
	cat(_General, Combat/Weapons - Melee Combat),
	type(DX/E),
	page(DFRPG:A76)
Fast-Draw (Two-Handed Sword),
	cat(_General, Combat/Weapons - Melee Combat),
	type(DX/E),
	page(DFRPG:A76)
Fast-Talk,
	cat(_General, Criminal/Street, Social, Spy),
	type(IQ/A),
	default(ST:IQ - 5, SK:Acting - 5),
	page(DFRPG:A76),
	gives(=@if(me::level >= 20 then 2 else 0) to ST:Reaction)
Filch,
	cat(_General, Criminal/Street, Spy),
	type(DX/A),
	default(ST:DX - 5, SK:Pickpocket - 4, SK:Sleight of Hand - 4),
	page(DFRPG:A76)
First Aid,
	cat(_General, Medical, Everyman),
	type(IQ/E),
	default(ST:IQ - 4, SK:Veterinary - 4),
	page(DFRPG:A76)
Fishing,
	type(Per/E),
	default(ST:Perception - 4),
	page(DFRPG:A76)
Forced Entry,
	cat(_General, Criminal/Street, Police, Spy),
	type(DX/E),
	page(DFRPG:A77)
Forgery,
	cat(_General, Criminal/Street, Spy),
	type(IQ/H),
	default(ST:IQ - 6, SK:Counterfeiting - 2),
	page(DFRPG:A77)

Gambling,
	cat(_General, Criminal/Street, Social),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A77)
Garrote,
	cat(_General, Combat/Weapons - Melee Combat),
	type(DX/E),
	default(ST:DX - 4),
	page(DFRPG:A77)
Gesture,
	cat(_General, Social),
	type(IQ/E),
	default(ST:IQ - 4),
	page(DFRPG:A77)

Hazardous Materials,
	cat(_General, Technical),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A77)
Heraldry,
	cat(_General, Knowledge, Social),
	type(IQ/A),
	default(ST:IQ - 5, "SK:Savoir-Faire" - 3),
	page(DFRPG:A77)

Hidden Lore (%specify%),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78),
	x(#InputReplace("Specify the Hidden Lore specialty here:", %specify%, , "Specialize Hidden Lore"))
Hidden Lore (Demons),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Divine Servitors),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Elder Things),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Elementals),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Faeries),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Spirits),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Undead),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Nature Spirits),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Lost Civilizations),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Magic Items),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hidden Lore (Magical Writings),
	cat(_General, Knowledge),
	type(IQ/A),
	page(DFRPG:A78)
Hiking,
	cat(_General, Athletic, Outdoor/Exploration),
	type(HT/A),
	default(ST:HT-5),
	page(DFRPG:A78)
Holdout,
	cat(_General, Criminal/Street, Spy),
	type(IQ/A),
	default(ST:IQ - 5, SK:Sleight of Hand - 3),
	page(DFRPG:A78)

Innate Attack (Beam),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4, SK:Innate Attack - 2),
	page(DFRPG:A79)
Innate Attack (Projectile),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4, SK:Innate Attack - 2),
	page(DFRPG:A79)
Innate Attack (Breath),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4, SK:Innate Attack - 2),
	page(DFRPG:A79)
Innate Attack (Gaze),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4, SK:Innate Attack - 2),
	page(DFRPG:A79)
Interrogation,
	cat(_General, Military, Police, Spy),
	type(IQ/A),
	default(ST:IQ - 5, SK:Intimidation - 3),
	page(DFRPG:A79)
Intimidation,
	cat(_General, Criminal/Street, Police, Social),
	type(Will/A),
	default(ST:Will - 5, SK:Acting - 3),
	page(DFRPG:A79)

Jumping,
	cat(_General, Athletic),
	type(DX/E),
	page(DFRPG:A79)

Knot-Tying,
	cat(_General, Everyman),
	type(DX/E),
	default(ST:DX - 4, SK:Climbing - 4, SK:Seamanship - 4),
	page(DFRPG:A79)

Lasso,
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/A),
	page(DFRPG:A80)
Leadership,
	cat(_General, Military, Social),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A80)
Lifting,
	cat(_General, Athletic),
	type(HT/A),
	page(DFRPG:A80)
Lip Reading,
	cat(_General, Spy),
	type(Per/A),
	default(ST:Perception - 10),
	page(DFRPG:A80)
Lockpicking,
	cat(_General, Criminal/Street, Police, Spy, Technical),
	type(DX/A),
	default(ST:DX - 5),
	page(DFRPG:A80)

Meditation,
	cat(_General, Medical),
	type(Will/H),
	default(ST:Will - 6, SK:Autohypnosis - 4),
	page(DFRPG:A80)
// Melee Weapon Skills are detailed below
Merchant,
	cat(_General, Business, Social),
	type(IQ/A),
	default(IQ - 5),
	page(DFRPG:A82),
	conditional(=@if(me::level >= 20 then 2 else @if(me::basepoints > 0 then 1 else 0)) to ST:Reaction when "buying or selling")
Mimicry (Animal Sounds), 
	type(IQ/H), 
	default(ST:IQ - 6, "SK:Mimicry (Bird Calls)"-6, "SK:Naturalist"-6),
	page(DFRPG:A83)
Mimicry (Bird Calls),
	type(IQ/H),
	default(ST:IQ - 6, "SK:Mimicry (Animal Sounds)"-6, "SK:Naturalist"-6),
	page(DFRPG:A83)
Mimicry (Speech),
	type(IQ/H),
	default(ST:IQ - 6, SK:Acting-6),
	page(DFRPG:A83)
// Missile Weapon Skills are detailed below
Musical Composition,
	cat(_General, Arts/Entertainment),
	type(IQ/H),
	default(SK:Musical Instrument - 2, SK:Poetry - 2),
	page(DFRPG:A83)
Musical Instrument,
	cat(_General, Arts/Entertainment),
	type(IQ/H),
	page(DFRPG:A83),
	x(#InputToTag("You must specialize in a particular instrument:", nameext, , "Musical Instrument"))
Musical Instrument (Drums),
	cat(_General, Arts/Entertainment),
	type(IQ/H),
	page(DFRPG:A83)
Musical Instrument (Flute),
	cat(_General, Arts/Entertainment),
	type(IQ/H),
	page(DFRPG:A83)
Musical Instrument (Harp),
	cat(_General, Arts/Entertainment),
	type(IQ/H),
	page(DFRPG:A83)
Musical Instrument (Horn),
	cat(_General, Arts/Entertainment),
	type(IQ/H),
	page(DFRPG:A83)
Musical Instrument (Lute),
	cat(_General, Arts/Entertainment),
	type(IQ/H),
	page(DFRPG:A83)

Naturalist, 
	type(IQ/H), 
	default(ST:IQ - 6), 
	page(DFRPG:A83)
Navigation,
	type(IQ/A),
	default(ST:IQ - 5, SK:Cartography-4, SK:Seamanship-5),
	page(DFRPG:A84)
Net,
	cat(_General, Combat/Weapons - Melee Combat, Combat/Weapons - Ranged Combat),
	type(DX/H),
	default(SK:Cloak - 5),
	page(DFRPG:A84)

Observation,
	cat(_General, Criminal/Street, Military, Police, Spy),
	type(Per/A),
	default(ST:Perception - 5, SK:Shadowing - 5),
	page(DFRPG:A84)
Occultism,
	cat(_General, Occult/Magical),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A84)

Panhandling,
	cat(_General, Criminal/Street, Social),
	type(IQ/E),
	default(ST:IQ - 4, "SK:Fast-Talk" - 2, SK:Public Speaking - 3),
	page(DFRPG:A84)
Performance,
	cat(_General, Arts/Entertainment),
	type(IQ/A),
	default(ST:IQ - 5, SK:Acting - 2, SK:Public Speaking - 2),
	page(DFRPG:A84)
Pharmacy,
	type(IQ/H),
	cat(_General, Design/Invention, Medical, Plant),
	default(ST:IQ - 6, SK:Herb Lore - 5, SK:Naturalist - 5),
	needs(SK:Naturalist),
	page(DFRPG:A85)
Physiology,
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85),
	x(#InputToTag("You must specialize by monster type:", nameext, "Faeries", "Physiology"))
Physiology (Animals),
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85)
Physiology (Faeries),
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85)
Physiology (Hybrids),
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85)
Physiology (Plants),
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85)
Physiology (Constructs),
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85)
Physiology (Demons),
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85)
Physiology (Elementals),
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85)
Physiology (Undead),
	cat(_General, Medical, Natural Sciences),
	type(IQ/H),
	default(ST:IQ - 6, SK:Surgery - 5),
	page(DFRPG:A85)
Pickpocket,
	cat(_General, Criminal/Street),
	type(DX/H),
	default(ST:DX - 6, SK:Filch - 5, SK:Sleight of Hand - 4),
	page(DFRPG:A85)
Poetry,
	cat(_General, Arts/Entertainment),
	type(IQ/A),
	default(ST:IQ - 5, SK:Writing - 5),
	page(DFRPG:A85)
Poisons,
	cat(_General, Criminal/Street, Medical, Spy),
	type(IQ/H),
	default(ST:IQ - 6, SK:Alchemy - 5, SK:Pharmacy - 3),
	page(DFRPG:A85)
Propaganda,
	cat(_General, Business, Military, Social, Spy),
	type(IQ/A),
	default(ST:IQ - 5, SK:Merchant - 5),
	page(DFRPG:A86)
Prospecting,
	cat(_General, Outdoor/Exploration),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A86)
Psychology,
	cat(_General, Medical, Social Sciences/Humanities),
	type(IQ/H),
	default(ST:IQ - 6),
	page(DFRPG:A86),
	x(#InputToTag("You must specialize by monster type:", nameext, "Faeries", "Psychology"))
Psychology (Constructs),
	cat(_General, Medical, Social Sciences/Humanities),
	type(IQ/H),
	default(ST:IQ - 6),
	page(DFRPG:A86)
Psychology (Demons),
	cat(_General, Medical, Social Sciences/Humanities),
	type(IQ/H),
	default(ST:IQ - 6),
	page(DFRPG:A86)
Psychology (Elementals),
	cat(_General, Medical, Social Sciences/Humanities),
	type(IQ/H),
	default(ST:IQ - 6),
	page(DFRPG:A86)
Psychology (Faeries),
	cat(_General, Medical, Social Sciences/Humanities),
	type(IQ/H),
	default(ST:IQ - 6),
	page(DFRPG:A86)
Psychology (Undead),
	cat(_General, Medical, Social Sciences/Humanities),
	type(IQ/H),
	default(ST:IQ - 6),
	page(DFRPG:A86)
Public Speaking,
	cat(_General, Business, Scholarly, Social),
	type(IQ/A),
	default(ST:IQ - 5, SK:Acting - 5, SK:Performance - 2),
	page(DFRPG:A86)

Religious Ritual,
	cat(_General, Occult/Magical),
	type(IQ/H),
	default(SK:Theology - 4),
	page(DFRPG:A86)
Religious Ritual (Druidic),
	cat(_General, Occult/Magical),
	type(IQ/H),
	default("SK:Theology (Druidic)"- 4),
	page(DFRPG:A86)

Research,
	cat(_General, Scholarly, Spy),
	type(IQ/A),
	default(ST:IQ - 5, SK:Writing - 3),
	taboo(DI:Illiteracy),
	page(DFRPG:A86)
Riding (%specify%),
	cat(_General, Animal),
	type(DX/A),
	default(ST:DX - 5, "SK:Animal Handling (%specify%)"- 3),
	page(DFRPG:A87),
	x(#InputReplace("You must specialize by riding beast:", %specify%, "Equines", "Riding"))
Riding (Horse),
	cat(_General, Animal),
	type(DX/A),
	default(ST:DX - 5, "SK:Animal Handling (Horse)"- 3),
	page(DFRPG:A87)
Running,
	cat(_General, Athletic),
	type(HT/A),
	default(ST:HT - 5),
	page(DFRPG:A87)

Savoir-Faire,
	cat(_General, Business, Knowledge, Social),
	type(IQ/E),
	default(ST:IQ-4),
	page(DFRPG:A87)
Scrounging,
	cat(_General, Criminal/Street),
	type(Per/E),
	default(ST:Perception - 4),
	page(DFRPG:A88)
Seamanship,
	cat(_General, Vehicle),
	type(IQ/E),
	default(ST:IQ - 4),
	page(DFRPG:A88)
Search,
	cat(_General, Police, Spy),
	type(Per/A),
	default(ST:Perception - 5),
	page(DFRPG:A88)
Sex Appeal,
	cat(_General, Social),
	type(HT/A),
	default(ST:HT - 3),
	page(DFRPG:A88)
Shadowing,
	cat(_General, Criminal/Street, Police, Spy),
	type(IQ/A),
	default(ST:IQ - 5, SK:Observation - 5, SK:Stealth - 4),
	page(DFRPG:A88)
Shield (Buckler),
	cat(_General, Combat/Weapons - Melee Combat),
	type(DX/E),
	default(ST:DX - 4, "SK:Shield (Shield)" - 2),
	page(DFRPG:A88),
	blockat(@int(%level/2)+3)
Shield (Shield),
	cat(_General, Combat/Weapons - Melee Combat),
	type(DX/E),
	default(ST:DX - 4, "SK:Shield (Buckler)" - 2),
	page(DFRPG:A88),
	blockat(@int(%level/2)+3)
Singing,
	cat(_General, Arts/Entertainment),
	type(HT/E),
	default(ST:HT - 4),
	page(DFRPG:A89)
Skiing,
	cat(_General, Athletic, Outdoor/Exploration),
	type(HT/H),
	default(ST:HT - 6),
	page(DFRPG:A89)
Sleight of Hand,
	cat(_General, Arts/Entertainment, Criminal/Street),
	type(DX/H),
	default(SK:Filch - 5),
	page(DFRPG:A89)
Smuggling,
	cat(_General, Criminal/Street, Spy),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A89)
Speed-Reading,
	cat(_General, Scholarly),
	type(IQ/A),
	page(DFRPG:A89)
Stealth,
	cat(_General, Criminal/Street, Police, Spy),
	type(DX/A),
	default(ST:DX - 5, ST:IQ - 5),
	page(DFRPG:A89)
Strategy,
	cat(_General, Military),
	type(IQ/H),
	default(ST:IQ - 6, SK:Tactics-6),
	page(DFRPG:A90)
Streetwise,
	cat(_General, Criminal/Street, Police, Social),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A90)
Surgery,
	cat(_General, Medical),
	type(IQ/VH),
	default(SK:First Aid - 12, SK:Physiology - 8, SK:Veterinary - 5),
	page(DFRPG:A90)

Survival,
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception-5, SK:Naturalist-3),
	page(DFRPG:A90),
	x(#InputToTag("You must specialize by a particular terrain type:", nameext, , "Survival"))
Survival (Arctic),
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception-5, SK:Naturalist - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3),
	page(DFRPG:A90)
Survival (Desert),
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception-5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3),
	page(DFRPG:A90)
Survival (Island/Beach),
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception-5, SK:Naturalist - 3, "SK:Survival (Tropical Lagoon)" - 4, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3),
	page(DFRPG:A90)
Survival (Jungle),
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception-5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3),
	page(DFRPG:A90)
Survival (Mountain),
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception-5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3),
	page(DFRPG:A90)
Survival (Plains),
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception-5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Swampland)" - 3, "SK:Survival (Woodlands)" - 3),
	page(DFRPG:A90)
Survival (Swampland),
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception-5, SK:Naturalist - 3, "SK:Survival (River/Stream)" - 4, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Woodlands)" - 3),
	page(DFRPG:A90)
Survival (Woodlands),
	cat(_General, Outdoor/Exploration),
	type(Per/A),default(ST:Perception-5, SK:Naturalist - 3, "SK:Survival (Arctic)" - 3, "SK:Survival (Desert)" - 3, "SK:Survival (Island/Beach)" - 3, "SK:Survival (Jungle)" - 3, "SK:Survival (Mountain)" - 3, "SK:Survival (Plains)" - 3, "SK:Survival (Swampland)" - 3),
	page(DFRPG:A90)
Swimming,
	cat(_General, Athletic, Outdoor/Exploration),
	type(HT/E),
	default(ST:HT - 4),
	page(DFRPG:A90)

Tactics,
	type(IQ/H),
	default(ST:IQ - 6, SK:Strategy-6),
	page(DFRPG:A91)
Teaching,
	cat(_General, Scholarly, Social),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A91)
Thaumatology,
	cat(_General, Occult/Magical),
	type(IQ/VH),
	default(ST:IQ - 7),
	page(DFRPG:A91)
Theology,
	cat(_General, Social Sciences/Humanities),
	type(IQ/H),
	default(ST:IQ - 6, SK:Religious Ritual - 4),
	page(DFRPG:A91)
Theology (Druidic),
	cat(_General, Social Sciences/Humanities, Occult/Magical),
	type(IQ/H),
	default(ST:IQ - 6, "SK:Religious Ritual (Druidic)"- 4),
	page(DFRPG:A91)
Throwing,
	cat(_General, Athletic, Combat/Weapons - Ranged Combat),
	type(DX/A),
	page(DFRPG:A91)
Thrown Weapon (Axe/Mace),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4),
	page(DFRPG:A91)
Thrown Weapon (Dart),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4, SK:Throwing - 2),
	page(DFRPG:A91)
Thrown Weapon (Harpoon),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4, "SK:Thrown Weapon (Spear)" - 2),
	page(DFRPG:A91)
Thrown Weapon (Knife),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4),
	page(DFRPG:A91)
Thrown Weapon (Shuriken),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4, SK:Throwing - 2),
	page(DFRPG:A91)
Thrown Weapon (Spear),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4, SK:Spear Thrower - 4, "SK:Thrown Weapon (Harpoon)" - 2),
	page(DFRPG:A91)
Thrown Weapon (Stick),
	cat(_General, Combat/Weapons - Ranged Combat),
	type(DX/E),
	default(ST:DX - 4),
	page(DFRPG:A91)
Tracking,
	cat(_General, Outdoor/Exploration),
	type(Per/A),
	default(ST:Perception - 5, SK:Naturalist - 5),
	page(DFRPG:A92)
Traps,
	cat(_General, Criminal/Street, Military),
	type(IQ/A),
	default(ST:IQ - 5, SK:Lockpicking - 3),
	page(DFRPG:A92)

// Unarmed Grappling Skills are detailed below	
// Unarmed Striking Skills are detailed below	
Urban Survival,
	cat(_General, Criminal/Street, Police),
	type(Per/A),
	default(ST:Perception - 5),
	page(DFRPG:A94)

Ventriloquism,
	cat(_General, Arts/Entertainment),
	type(IQ/H),
	page(DFRPG:A94)
Veterinary,
	cat(_General, Animal, Medical),
	type(IQ/H),
	default(SK:Animal Handling - 6, SK:Esoteric Medicine - 5, SK:Surgery - 5),
	page(DFRPG:A94)

Weather Sense,
	cat(_General, Everyman, Outdoor/Exploration),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A94)
Writing,
	cat(_General, Arts/Entertainment, Scholarly),
	type(IQ/A),
	default(ST:IQ - 5),
	page(DFRPG:A94)

//
// Melee Weapon Skills
//
// Melee Weapon Skills - Fencing Weapons
Main-Gauche,
	cat(_General, Combat/Weapons - Melee Combat, Fencing Weapons),
	type(DX/A),
	default(ST:DX - 5, "SK:Jitte/Sai" - 4, SK:Knife - 4, SK:Rapier - 3, SK:Saber - 3, SK:Smallsword - 3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Rapier,
	cat(_General, Combat/Weapons - Melee Combat, Fencing Weapons),
	type(DX/A),
	default(ST:DX - 5, SK:Broadsword - 4, "SK:Main-Gauche" - 3, SK:Saber - 3, SK:Smallsword - 3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Saber,
	cat(_General, Combat/Weapons - Melee Combat, Fencing Weapons),
	type(DX/A),
	default(ST:DX - 5, SK:Broadsword - 4, SK:Shortsword - 4, "SK:Main-Gauche" - 3, SK:Rapier - 3, SK:Smallsword - 3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Smallsword,
	cat(_General, Combat/Weapons - Melee Combat, Fencing Weapons),
	type(DX/A),
	default(ST:DX - 5, SK:Shortsword - 4, "SK:Main-Gauche" - 3, SK:Rapier - 3, SK:Saber - 3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)

// Melee Weapon Skills - Flails
Flail,
	cat(_General, Combat/Weapons - Melee Combat, Flails),
	type(DX/H),
	default(ST:DX - 6, "SK:Axe/Mace" - 4, "SK:Two-Handed Flail" -3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Two-Handed Flail,
	cat(_General, Combat/Weapons - Melee Combat, Flails),
	type(DX/H),
	default(ST:DX - 6, SK:Flail - 3, SK:Kusari - 4, "SK:Two-Handed Axe/Mace" - 4),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)

// Melee Weapon Skills - Impact Weapons
Axe/Mace,
	cat(_General, Combat/Weapons - Melee Combat, Impact Weapons),
	type(DX/A),
	default(ST:DX - 5, SK:Flail - 4, "SK:Two-Handed Axe/Mace" - 3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Two-Handed Axe/Mace,cat(_General, Combat/Weapons - Melee Combat, Impact Weapons),
	type(DX/A),
	default(ST:DX - 5, "SK:Axe/Mace" - 3, SK:Polearm - 4, "SK:Two-Handed Flail" - 4),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)

// Melee Weapon Skills - Pole Weapons
Polearm,
	cat(_General, Combat/Weapons - Melee Combat, Pole Weapons),
	type(DX/A),
	default(ST:DX - 5, SK:Spear - 4, SK:Staff - 4, "SK:Two-Handed Axe/Mace" - 4),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Spear,
	cat(_General, Combat/Weapons - Melee Combat, Pole Weapons),
	type(DX/A),
	default(ST:DX - 5, SK:Polearm - 4, SK:Staff - 2),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Staff,
	cat(_General, Combat/Weapons - Melee Combat, Pole Weapons),
	type(DX/A),
	default(ST:DX - 5, SK:Polearm - 4, SK:Spear - 2),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3+2)

// Melee Weapon Skills - Swords
Broadsword,
	cat(_General, Combat/Weapons - Melee Combat, Swords),
	type(DX/A),
	default(ST:DX - 5, SK:Rapier - 4, SK:Saber - 4, SK:Shortsword - 2, "SK:Two-Handed Sword" - 4),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Jitte/Sai,
	cat(_General, Combat/Weapons - Melee Combat, Swords),
	type(DX/A),
	default(ST:DX - 5, "SK:Main-Gauche" - 4, SK:Shortsword - 3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Knife,
	cat(_General, Combat/Weapons - Melee Combat, Swords),
	type(DX/E),
	default(ST:DX - 4, "SK:Main-Gauche" - 3, SK:Shortsword - 3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3-1)
Shortsword,
	cat(_General, Combat/Weapons - Melee Combat, Swords),
	type(DX/A),
	default(ST:DX - 5, SK:Broadsword - 2, "SK:Jitte/Sai" - 3, SK:Knife - 4, SK:Saber - 4, SK:Smallsword - 4, SK:Tonfa - 3),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)
Two-Handed Sword,
	cat(_General, Combat/Weapons - Melee Combat, Swords),
	type(DX/A),
	default(ST:DX - 5, SK:Broadsword - 4),
	page(DFRPG:A81),
	parryat(@int(%level/2)+3)

// Melee Weapon Skills - Whips
Kusari,
	cat(_General, Combat/Weapons - Melee Combat, Whips),
	type(DX/H),
	default(ST:DX - 6, "SK:Two-Handed Flail" - 4, SK:Whip - 3),
	page(DFRPG:A82),
	parryat(@int(%level/2)+3)
Whip,
	cat(_General, Combat/Weapons - Melee Combat, Whips),
	type(DX/A),
	default(ST:DX - 5, SK:Kusari - 3),
	page(DFRPG:A82),
	parryat(@int(%level/2)+3)

// Melee Weapon Skills - Other Weapons
Tonfa,
	cat(_General, Combat/Weapons - Melee Combat, Other Weapons),
	type(DX/A),
	default(ST:DX - 5, SK:Shortsword - 3),
	page(DFRPG:A82),
	parryat(@int(%level/2)+3)
//
// Missile Weapon Skills
//
Blowpipe,
	cat(_General, Combat/Weapons - Ranged Combat, Missile Weapons),
	type(DX/H),
	default(ST:DX - 6),
	page(DFRPG:A83)
Bow,
	cat(_General, Combat/Weapons - Ranged Combat, Missile Weapons),
	type(DX/A),
	default(ST:DX - 5),
	page(DFRPG:A83)
Crossbow,
	cat(_General, Combat/Weapons - Ranged Combat, Missile Weapons),
	type(DX/E),
	default(ST:DX - 4),
	page(DFRPG:A83)
Sling,
	cat(_General, Combat/Weapons - Ranged Combat, Missile Weapons),
	type(DX/H),
	default(ST:DX - 6),
	page(DFRPG:A83)
Spear Thrower,
	cat(_General, Combat/Weapons - Ranged Combat, Missile Weapons),
	type(DX/A),
	default(ST:DX - 5, "SK:Thrown Weapon (Spear)" - 4),
	page(DFRPG:A83)

//
// Unarmed Grappling Skills	
//
Judo,
	cat(_General, Combat/Weapons - Melee Combat, Unarmed Grappling),
	type(DX/H),
	page(DFRPG:A92),
	parryat(@int(%level/2)+3)
Sumo Wrestling,
	cat(_General, Combat/Weapons - Melee Combat, Unarmed Grappling),
	type(DX/A),
	page(DFRPG:A92),
	parryat(@int(%level/2)+3)
Wrestling,
	cat(_General, Combat/Weapons - Melee Combat, Unarmed Grappling),
	type(DX/A),
	page(DFRPG:A93),
	parryat(@int(%level/2)+3)

//
// Unarmed Striking Skills	
//
Boxing,
	cat(_General, Combat/Weapons - Melee Combat, Unarmed Striking),
	type(DX/A),
	page(DFRPG:A93),
	parryat(@int(%level/2)+3),
	mods(Punch/Kick),
	description(Notes: Calculated damage takes into account bonuses from Claws and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" to apply the +1 damage to Punch.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$),
	conditional(=-3 to SK:Boxing when "parrying non-thrusting attacks"),
	mode(Punch),
	damage(thr-1 + @if(me::level = ST:DX+1 then @basethdice(ST:Punch) else @if(me::level > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0)) + @if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0))),
	damtype($if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))),
	reach(C),
	parry(0),
	skillused(SK:Boxing),
	damagebasedon(ST:Punch),
	reachbasedon(ST:One Arm Reach)
Brawling,
	cat(_General, Combat/Weapons - Melee Combat, Unarmed Striking),
	type(DX/E),
	page(DFRPG:A93),
	parryat(@int(%level/2)+3),
	mods(Punch/Kick),
	itemnotes({}|{}|{If you miss with a kick, roll vs. DX to avoid falling.}|),
	description(Notes: Calculated damage takes into account bonuses from Teeth, Weak Bite, Claws, and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" or "Has Boots" to apply the +1 damage to Punch or Kick, as appropriate.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$, =$if(me::level >= ST:DX THEN nobase) to ST:Kick::reach$, =$if(me::level >= ST:DX THEN nobase) to ST:Bite::reach$),
	mode(Punch|Bite|Kick),
	damage(thr-1 + @if(me::level > ST:DX+1 then @basethdice(ST:Punch) else 0) + @if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0))|thr-1 + @if(me::level > ST:DX+1 then @basethdice(ST:Bite) else 0) + -@if("DI:Weak Bite::level" = 1 then 2 * @basethdice(ST:Bite) else 0)|thr+ @if(me::level > ST:DX+1 then @basethdice(ST:Kick) else 0) + @if("DI:Horizontal::level" = 1 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + @if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0)))),
	damtype($if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))|$if("AD:Teeth (Sharp Teeth)::level" = 1 THEN "cut" ELSE $if("AD:Teeth (Sharp Beak)::level" = 1 THEN "pi+" ELSE $if("AD:Teeth (Fangs)::level" = 1 THEN "imp" ELSE $if("AD:Vampiric Bite::level" = 1 THEN "cut" ELSE "cr"))))|$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))),
	reach(C|C|C,1),
	parry(0|No|No),
	skillused(SK:Brawling|SK:Brawling|SK:Brawling-2, SK:Kicking (Brawling)),
	damagebasedon(ST:Punch|ST:Bite|ST:Kick),
	reachbasedon(ST:One Arm Reach|ST:Neck Reach|ST:Leg Reach)
Karate,
	cat(_General, Combat/Weapons - Melee Combat, Unarmed Striking),
	type(DX/H),
	page(DFRPG:A94),
	itemnotes({}|{If you miss with a kick, roll vs. DX to avoid falling.}|),
	parryat(@int(%level/2)+3),
	mods(Punch/Kick),
	description(Notes: Calculated damage takes into account bonuses from Claws and skill level. You may add the modifier "Has Gauntlets/Brass Knuckles" or "Has Boots" to apply the +1 damage to Punch or Kick, as appropriate.),
	gives(=$if(me::level >= ST:DX THEN nobase) to ST:Punch::reach$, 
		=$if(me::level >= ST:DX THEN nobase) to ST:Kick::reach$,
		=-ST:Encumbrance Penalty::score to me::skillscore, 
		=+( @int(($modetag(charskillscore) + ST:Encumbrance Penalty::score)/2) - @int($modetag(charskillscore)/2) - ST:Encumbrance Penalty::score ) to me::parryscore$),
	mode(_
		 Punch_
		|Kick_
	),
	damage(_
			thr-1 + @if(me::level = ST:DX then @basethdice(ST:Punch) else @if(me::level > ST:DX then 2 * @basethdice(ST:Punch) else 0)) + @if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Feet Only) = 0 then @basethdice(ST:Punch) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 then @basethdice(ST:Punch) else 0))_
		|	thr+ @if(me::level = ST:DX then @basethdice(ST:Kick) else @if(me::level > ST:DX then 2 * @basethdice(ST:Kick) else 0)) + @if("DI:Horizontal::level" = 1 then @if("AD:Claws (Blunt Claws)::level" = 1 then 0 else @if("AD:Claws (Sharp Claws)::level" = 1 then 0 else @if("AD:Claws (Talons)::level" = 1 then 0 else @if("AD:Claws (Long Talons)::level" = 1 then 0 else -@basethdice(ST:Kick))))) else 0) + @if("AD:Claws (Blunt Claws)::level" = 1 & @itemhasmod(AD:Claws (Blunt Claws), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 then @basethdice(ST:Kick) else @if("AD:Claws (Hooves)::level" = 1 then @basethdice(ST:Kick) else 0)))_
	),
	damtype($if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Feet Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1  & @itemhasmod(AD:Claws (Talons), Feet Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1  & @itemhasmod(AD:Claws (Long Talons), Feet Only) = 0 THEN "cut/imp" ELSE "cr")))|$if("AD:Claws (Sharp Claws)::level" = 1 & @itemhasmod(AD:Claws (Sharp Claws), Hands Only) = 0 THEN "cut" ELSE $if("AD:Claws (Talons)::level" = 1 & @itemhasmod(AD:Claws (Talons), Hands Only) = 0 THEN "cut/imp" ELSE $if("AD:Claws (Long Talons)::level" = 1 & @itemhasmod(AD:Claws (Long Talons), Hands Only) = 0 THEN "cut/imp" ELSE "cr")))),
	reach(C|C,1),
	parry(0|No),
	skillused(SK:Karate|SK:Karate-2, SK:Kicking (Karate)),
	damagebasedon(ST:Punch|ST:Kick),
	reachbasedon(ST:One Arm Reach|ST:Leg Reach)









********************************************************************************************************\[STOP]
[MODIFIERS]
*******************************************************************************************************\[START]
<Self-Control>
You resist on a roll of  6 or less (quite rarely), *2, shortname(6), page(DFRPG:A55)
You resist on a roll of  9 or less (fairly often), *1.5, shortname(9), page(DFRPG:A55)
You resist on a roll of 12 or less (quite often), *1, shortname(12), page(DFRPG:A55)
You resist on a roll of 15 or less (almost all the time), *0.5, shortname(15), page(DFRPG:A55)

<Equipment>
Dwarven Gear,-10%,shortname(Dwarven Gear),tier(1),page(DFRPG:A43)
Elven Gear,-10%,shortname(Elven Gear),tier(1),page(DFRPG:A44)

<_Weapon>
_Advantage: Weapon Master Damage Bonus, +0, shortname(Weapon Master Damage Bonus),_
	gives(_
		=+@if(_
			$modetag(charskillscore) = ST:DX+1 _
			THEN @textindexedvalue($modetag(dmg), ("thr", owner::basethdice), ("sw", owner::baseswdice), ELSE $solver(owner::dmg)) _
			ELSE @if(_
				$modetag(charskillscore) > ST:DX+1 _
				THEN @textindexedvalue($modetag(dmg), ("thr", 2 * owner::basethdice), ("sw", 2 * owner::baseswdice), ELSE 2*$solver(owner::dmg)) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "Weapon Master Damage Bonus" _
		)
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), page(DFRPG:A54), shortname(Weapon Bond)



********************************************************************************************************\[STOP]
[GROUPS]
*******************************************************************************************************\[START]
<allquirks>
QU:_New Quirk
QU:_Unused Quirk 1
QU:_Unused Quirk 2
QU:_Unused Quirk 3
QU:_Unused Quirk 4
QU:_Unused Quirk 5

<Animal Friend>
SK:Animal Handling
SK:Disguise (Animals)
SK:Mimicry (Animal Sounds)
SK:Mimicry (Bird Calls)
SK:Riding
SK:Veterinary

<Born Entertainer>
SK:Acting
SK:Dancing
SK:Performance
SK:Public Speaking
SK:Singing

<Born War-Leader>
SK:Connoisseur (Weapons)
SK:Leadership
SK:Savoir-Faire
SK:Strategy
SK:Tactics

<Charisma>
SK:Leadership
SK:Panhandling
SK:Public Speaking

<Combat Reflexes>
ST:Dodge
ST:Parry
ST:Block
SK:Fast-Draw

<Green Thumb>
SK:Herb Lore
SK:Naturalist
SK:Pharmacy

<Ham-Fisted>
SK:Knot-Tying
SK:Lockpicking
SK:Pickpocket
SK:Sleight of Hand

<Healer>
SK:Diagnosis
SK:Esoteric Medicine
SK:First Aid
SK:Pharmacy
SK:Surgery
SK:Veterinary
SK:Physiology
SK:Psychology

<Oblivious>
SK:Diplomacy
SK:Fast-Talk
SK:Intimidation
SK:Savoir-Faire
SK:Sex Appeal
SK:Streetwise

<Outdoorsman>
SK:Camouflage
SK:Disguise (Animals)
SK:Fishing
SK:Mimicry (Animal Sounds)
SK:Mimicry (Bird Calls)
SK:Naturalist
SK:Navigation
SK:Survival
SK:Tracking
SK:Weather Sense

<Voice>
SK:Diplomacy
SK:Fast-Talk
SK:Mimicry
SK:Performance
SK:Public Speaking
SK:Sex Appeal
SK:Singing

<Pickaxe Penchant>
SK:Axe/Mace 
SK:Forced Entry 
SK:Prospecting 
SK:Thrown Weapon (Axe/Mace) 
SK:Two-Handed Axe/Mace

<Forest Guardian>
SK:Bow
SK:Camouflage
SK:Fast-Draw (Arrow)
SK:Stealth
SK:Survival (Woodlands)

<Widget Worker>
SK:Armory (Missile Weapons)
SK:Forced Entry
SK:Lockpicking
SK:Scrounging
SK:Traps

<Halfling Marksmanship>
SK:Bow
SK:Sling
SK:Throwing
SK:Thrown Weapon (Dart)
SK:Thrown Weapon (Knife)
SK:Thrown Weapon (Stick)


********************************************************************************************************\[STOP]
[LISTS]
*******************************************************************************************************\[START]
<OneToOneHundred Sorted>
"  1","  2","  3","  4","  5","  6","  7","  8","  9"," 10"," 11"," 12"," 13"," 14"," 15"," 16"," 17"," 18"," 19"," 20"," 21"," 22"," 23"," 24"," 25"," 26"," 27"," 28"," 29"," 30"," 31"," 32"," 33"," 34"," 35"," 36"," 37"," 38"," 39"," 40"," 41"," 42"," 43"," 44"," 45"," 46"," 47"," 48"," 49"," 50"," 51"," 52"," 53"," 54"," 55"," 56"," 57"," 58"," 59"," 60"," 61"," 62"," 63"," 64"," 65"," 66"," 67"," 68"," 69"," 70"," 71"," 72"," 73"," 74"," 75"," 76"," 77"," 78"," 79"," 80"," 81"," 82"," 83"," 84"," 85"," 86"," 87"," 88"," 89"," 90"," 91"," 92"," 93"," 94"," 95"," 96"," 97"," 98"," 99","100"

<QuirkSelection>
text("You may select up to five Quirks and spend the points on 'Trading Character Points for Money' or 'Signature Gear' or save them to improve existing traits later."),_
		pointswanted(atleast -5, upto 0),_
		itemswanted(atleast 0, upto 1000),_
		list(_
				#BuildSelectList(Advantages where levelnames listincludes "$500", template(#newitem(AD:_Increase %ListItem%, existing(AD:%ListItem%)))),_
				AD:Signature Gear,_
				AD:Trading Character Points for Money,_
				#grouplist(GR:AllQuirks)_
		),_
	), y(
// )

<bard skills>
SK:Hypnotism,SK:Musical Influence,SK:Enthrallment (Captivate),SK:Enthrallment (Persuade),SK:Enthrallment (Suggest),SK:Enthrallment (Sway Emotions)

<bard spells>
SP:Borrow Language, SP:Borrow Skill, SP:Compel Truth, SP:Control Person, SP:Dispel Possession, SP:Gift of Letters, SP:Gift of Tongues, SP:Hide Emotion, SP:Hide Thoughts, SP:Lend Language, SP:Lend Skill, SP:Message, SP:Mind-Reading, SP:Mind-Search, SP:Mind-Sending, SP:Persuasion, SP:Possession, SP:Sense Emotion, SP:Sense Evil, SP:Sense Foes, SP:Sense Life, SP:Soul Rider, SP:Telepathy, SP:Truthsayer
SP:Analyze Magic, SP:Astral Vision, SP:Aura, SP:Detect Magic, SP:Earth Vision, SP:Far-Feeling, SP:Far-Hearing, SP:Far-Tasting, SP:Find Direction, SP:Glass Wall, SP:History, SP:Identify Spell, SP:Know Location, SP:Mage Sight, SP:Measurement, SP:Pathfinder, SP:Plant Vision, SP:Projection, SP:Remember Path, SP:See Secrets, SP:Seek Magic, SP:Seeker, SP:Tell Position, SP:Test Load, SP:Trace, SP:Water Vision, SP:Wizard Eye
SP:Alertness, SP:Bravery, SP:Charm, SP:Command, SP:Daze, SP:Drunkenness, SP:Dull Hearing, SP:Dull Taste and Smell, SP:Dull Touch, SP:Dull Vision, SP:Dullness, SP:Fascinate, SP:Fear, SP:Foolishness, SP:Forgetfulness, SP:Keen Hearing, SP:Keen Taste and Smell, SP:Keen Touch, SP:Keen Vision, SP:Loyalty, SP:Mass Daze, SP:Mass Sleep, SP:Panic, SP:Sickness, SP:Sleep, SP:Strengthen Will, SP:Terror, SP:Vigil, SP:Weaken Will, SP:Wisdom
SP:Concussion, SP:Delayed Message, SP:Far-Hearing, SP:Garble, SP:Great Voice, SP:Hush, SP:Keen Hearing, SP:Mage-Stealth, SP:Message, SP:Noise, SP:Resist Sound, SP:Silence, SP:Silver Tongue, SP:Sound, SP:Sound Jet, SP:Thunderclap, SP:Voices, SP:Wall of Silence

<bard abilities>
AD:Song of Command, AD:Song of Echoes, AD:Song of Humiliation, AD:Song of Sending, AD:Song of Terror, AD:Song of the Wild

<Druid Abilities>
AD:Beast Flight
AD:Control Animal
AD:Nature's Shield
AD:Plant Empathy
AD:Speak with Animals
AD:Speak with Plants

<Extra Languages>
LA:Language: %specify% (Spoken)
LA:Language: %specify% (Written)
LA:Language: %specify%
LA:Language: Ancient (Spoken)
LA:Language: Ancient (Written)
LA:Language: Ancient
LA:Language: Angelic (Spoken)
LA:Language: Angelic (Written)
LA:Language: Angelic
LA:Language: Demontongue (Spoken)
LA:Language: Demontongue (Written)
LA:Language: Demontongue
LA:Language: Dwarvish (Spoken)
LA:Language: Dwarvish (Written)
LA:Language: Dwarvish
LA:Language: Elvish (Spoken)
LA:Language: Elvish (Written)
LA:Language: Elvish
LA:Language: Gnomish (Spoken)
LA:Language: Gnomish (Written)
LA:Language: Gnomish
LA:Language: Elder Tongue (Spoken)
LA:Language: Elder Tongue (Written)
LA:Language: Elder Tongue
LA:Language: Faerie (Spoken)
LA:Language: Faerie (Written)
LA:Language: Faerie
LA:Language: Orcish (Spoken)
LA:Language: Orcish (Written)
LA:Language: Orcish
LA:Language: Reptilian (Spoken)
LA:Language: Draconic (Written)

<Holy Abilities>
AD:Contingency Casting
AD:Detect Evil
AD:Divine Guidance
AD:Divine Omens
AD:Faith Healing
AD:Turning
AD:Detect Good
AD:Heroic Grace
AD:Heroic Might
AD:Heroic Vitality
AD:Resist Evil

<Knight Abilities>
AD:Armor Mastery
AD:Rallying Cry
AD:Sacrificial Block
AD:Sacrificial Parry
AD:Shield Mastery
AD:Shield-Wall Training

<Martial Artist Abilities>
AD:Dragon Skin
AD:Mantis Strike
AD:Regeneration
AD:Seven Secret Kicks
AD:Spider Climb
AD:Tiger Sprint
AD:Unarmed Master
AD:Uninterrupted Flurry

<Martial Artist Skills>
SK:Autohypnosis
SK:Blind Fighting
SK:Body Control
SK:Breaking Blow
SK:Breath Control
SK:Esoteric Medicine (Chi)
SK:Immovable Stance
SK:Kiai
SK:Light Walk
SK:Mental Strength
SK:Mind Block
SK:Parry Missile Weapons
SK:Power Blow
SK:Pressure Points
SK:Push
SK:Throwing Art

<Swashbuckler Abilities>
AD:Armor Familiarity (Main-Gauche)
AD:Armor Familiarity (Rapier)
AD:Armor Familiarity (Saber)
AD:Armor Familiarity (Smallsword)
AD:Daredevil
AD:Enhanced Time Sense
AD:Every One's a Critical
AD:Great Void
AD:Rapier Wit
AD:Springing Attack




********************************************************************************************************\[STOP]
[TEMPLATES]
*******************************************************************************************************\[START]
<Professions>
// 
// BARBARIAN
// 
Barbarian, displaycost(250), cost(0),_
	description(You're a beefy tribal raider from somewhere distant and a little backward - probably the Frozen North or Steamy South. You blend physical grit with a connection to Nature.),_
	page(DFRPG:A15),_
	noresync(yes),_
	sets(_
		{ST:ST}=17,_
		{ST:DX}=13,_
		{ST:IQ}=10,_
		{ST:HT}=13,_
		{ST:Hit Points}=22,_
		{ST:Will}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Perception}=12,_
		{ST:Basic Speed}=6.00,_
		{ST:Basic Move}=ST:Basic Speed_
	),_
	adds(_
		{AD:High Pain Threshold},_
		{AD:Outdoorsman}=2,_
		{DI:Social Stigma (Minority Group)},_
		%weapontypesaliaslist%,_
		{SK:Brawling}=1pts,_
		{SK:Camouflage}=1pts,_
		{SK:Disguise (Animals)}=2pts,_
		{SK:Fishing}=1pts,_
		{SK:Hiking}=1pts,_
		{SK:Intimidation}=2pts,_
		{SK:Naturalist}=1pts,_
		{SK:Navigation}=2pts,_
		{SK:Running}=1pts,_
		{SK:Stealth}=2pts,_
		{SK:Swimming}=1pts,_
		{SK:Tracking}=1pts,_
		{SK:Weather Sense}=2pts_
	),_
	x(_
			#ChoiceList(_
				name(weapontypes),_
				title(Combat specialty),_
				text(Choose your melee skills package.),_
				picksallowed(1),_
				method(bynumber),_
		list(_
				"Axe/Mace [12] and Shield [8]",_
				"Broadsword [12] and Shield [8]",_
				"Flail [12] and Shield [8]",_
				"Spear [12] and Shield [8]",_
				"Polearm [20]",_
				"Spear [20]",_
				"Two-Handed Axe/Mace [20]",_
				"Two-Handed Flail [20]",_
				"Two-Handed Sword [20]"_
			),_
		aliaslist(_
					"{SK:Axe/Mace}=12pts, {SK:Shield (Shield)}=8pts",_
					"{SK:Broadsword}=12pts, {SK:Shield (Shield)}=8pts",_
					"{SK:Flail}=12pts, {SK:Shield (Shield)}=8pts",_
					"{SK:Spear}=12pts, {SK:Shield (Shield)}=8pts",_
					"{SK:Polearm}=20pts",_
					"{SK:Spear}=20pts",_
					"{SK:Two-Handed Axe/Mace}=20pts",_
					"{SK:Two-Handed Flail}=20pts",_
					"{SK:Two-Handed Sword}=20pts"_
				)_
			)_
	),_
	select1(_
		text(Please select 40 points from the following advantages.),_
		tagwith(Barbarian(yes)),_
		pointswanted(40),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			#list(Barbarian Abilities),_
			AD:Extra ST #codes(upto 4, downto 1),_
			AD:Extra DX #codes(upto 2, downto 1),_
			AD:Extra HT #codes(upto 4, downto 1),_
			AD:Extra Hit Points #codes(upto 4, downto 1),_
			AD:Extra Perception #codes(upto 8, downto 1),_
			#newitem(_
				AD:Extra Basic Speed,
				cat(Attributes),
				cost(20/40),
				upto(2),
				gives(+1 to ST:Basic Speed),
				levelnames(+1.00, +2.00)_
			) #codes(upto 2, downto 1),_
			AD:Absolute Direction,_
			AD:Acute [sense],_
			AD:Acute Taste and Smell,_
			AD:Acute Touch,_
			AD:Acute Vision,_
			AD:Acute Hearing,_
			AD:Animal Empathy,_
			AD:Animal Friend #codes(upto 6, downto 1),_
			AD:Combat Reflexes,_
			AD:Discriminatory Smell,_
			AD:Extra Attack #codes(upto 1, downto 1),_
			AD:Fearlessness,_
			AD:Unfazeable,_
			AD:Fit,_
			AD:Very Fit,_
			AD:Hard to Kill,_
			AD:Hard to Subdue,_
			AD:Lifting ST #codes(upto 3, downto 1),_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Magic Resistance,_
			#newitem(AD:Increase Outdoorsman, cost(10/20), existing(AD:Outdoorsman)) #codes(upto 6, downto %level+1),_
			AD:Rapid Healing,_
			AD:Very Rapid Healing,_
			AD:Recovery,_
			AD:Resistant to Disease #codes(upto 6, downto 1),_
			AD:Resistant to Poison #codes(upto 6, downto 1),_
			AD:Signature Gear,_
			AD:Striking ST,_
			AD:Temperature Tolerance #codes(upto 3, downto 1),_
			AD:Tough Skin #codes(upto 3, downto 1),_
			AD:Trademark Move,_
			AD:Weapon Bond (%Weapon%)_
		)_
	),_
	select2(_
		text("Please select -10 points from the following disadvantages"),_
		tagwith(Barbarian(yes)),_
		pointswanted(-10),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Easy to Read,_
			DI:Gullibility,_
			DI:Illiteracy,_
			DI:Odious Personal Habit (Unrefined manners) #codes(upto 1, downto 1),_
			DI:Phobia (Machinery) #codes(upto 1, downto 1),_
			DI:Wealth #codes(upto 1, downto 1)_
		)_
	),_
	select3(_
		text("Please select -20 points from the following disadvantages"),_
		tagwith(Barbarian(yes)),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Disdvantages where Barbarian is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),_
			DI:Easy to Read,_
			DI:Gullibility,_
			DI:Illiteracy,_
			DI:Odious Personal Habit (Unrefined manners) #codes(upto 1, downto 1),_
			DI:Phobia (Machinery) #codes(upto 1, downto 1),_
			DI:Wealth #codes(upto 1, downto 1)_
			DI:Appearance #codes(upto 2, downto 1),_
			DI:Bad Temper,_
			DI:Berserk,_
			DI:Bloodlust,_
			DI:Code of Honor (Outlaw's),_
			DI:Code of Honor (Soldier's),_
			DI:Compulsive Carousing,_
			DI:Gluttony,_
			DI:Greed,_
			DI:Ham-Fisted #codes(upto 2, downto 1),_
			DI:Impulsiveness,_
			DI:Obsession (Slay some specific type of monster) #codes(upto 1, downto 1),_
			DI:Obsession (Become a master of my weapon) #codes(upto 1, downto 1),_
			DI:Overconfidence,_
			DI:Sense of Duty (Adventuring companions),_
			DI:Sense of Duty (Nature),_
			DI:Wounded_
		)_
	),_
	select4(_
		text("Please select a ranged weapon skill."),_
		tagwith(Barbarian(yes)),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Bolas #codes(upto 4pts, downto 4pts),_
			SK:Bow #codes(upto 4pts, downto 4pts),_
			SK:Sling #codes(upto 4pts, downto 4pts),_
			SK:Spear Thrower #codes(upto 4pts, downto 4pts),_
			SK:Throwing #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Harpoon) #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Stick) #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select5(_
		text("Please select a Mimicry skill"),_
		tagwith(Barbarian(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),_
			SK:Mimicry (Bird Calls) #codes(upto 1pts)_
		)_
	),_
	select6(_
		text("Please select a Wrestling skill"),_
		tagwith(Barbarian(yes)),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Sumo Wrestling #codes(upto 2pts, downto 2pts),_
			SK:Wrestling #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Please select a Survival specialty."),_
		tagwith(Barbarian(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Survival (Arctic) #codes(upto 1pts),_
			SK:Survival (Desert) #codes(upto 1pts),_
			SK:Survival (Island/Beach) #codes(upto 1pts),_
			SK:Survival (Jungle) #codes(upto 1pts),_
			SK:Survival (Mountain) #codes(upto 1pts),_
			SK:Survival (Plains) #codes(upto 1pts),_
			SK:Survival (Swampland) #codes(upto 1pts),_
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),_
	select8(_
		text("Finish off with four of these skills."),_
		tagwith(Barbarian(yes)),_
		pointswanted(4),_
		itemswanted(4),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Animal Handling #codes(upto 1pts),_
			SK:Carousing #codes(upto 1pts),_
			SK:Climbing #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Forced Entry #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Lifting #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Seamanship #codes(upto 1pts),_
			SK:Skiing #codes(upto 1pts),_
			SK:Strategy #codes(upto 1pts),_
			SK:Tactics #codes(upto 1pts)_
		)_
	),_
	select9(#List(QuirkSelection))

// 
// BARD
// 
Bard, displaycost(250), cost(0),_	
	description(You're a magical minstrel who dabbles in the thief's roguery, the swashbuckler's swordplay, and the wizard's spellcraft.),_
	page(DFRPG:A16),_
	noresync(yes),_
	sets(_
		{ST:ST}=11,_
		{ST:DX}=12,_
		{ST:IQ}=14,_
		{ST:HT}=11,_
		{ST:Hit Points}=ST:ST,_
		{ST:Will}=ST:IQ,_
		{ST:Perception}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=6.0,_
		{ST:Basic Move}={ST:Basic Speed}_
	),_
	needs(15 Spells),_
	adds(_
		{AD:Bardic Talent}=2,_
		{AD:Charisma}=1,_
		{AD:Voice},_
		{SK:Acting}=2pts,_
		{SK:Carousing}=2pts,_
		{SK:Current Affairs}=1pts,_
		{SK:Detect Lies}=1pts,_
		{SK:Diplomacy}=1pts,_
		{SK:Fast-Talk}=1pts,_
		{SK:Heraldry}=1pts,_
		{SK:Interrogation}=1pts,_
		{SK:Intimidation}=1pts,_
		{SK:Merchant}=1pts,_
		{SK:Musical Composition}=1pts,_
		{SK:Musical Instrument}=2pts,_
		{SK:Performance}=1pts,_
		{SK:Poetry}=1pts,_
		{SK:Propaganda}=1pts,_
		{SK:Public Speaking}=1pts,_
		{SK:Savoir-Faire}=1pts,_
		{SK:Singing}=1pts,_
		{SK:Stealth}=2pts,_
		{SK:Streetwise}=1pts,_
		%WeaponTypesAliasList%_
	),_
	x(_
		#ChoiceList(_
				name(weapontypes),_
				title(Combat Style),_
				text(Choose your melee skill package.),_
				picksallowed(1),_
				method(bynumber),_
			list(_
				"Smallsword [12]",_
				"Shortsword [12]",_
				"Saber [12]",_
				"Rapier [12]",_
				"Smallsword [8] and Shield (Buckler) [4]",_
				"Shortsword [8] and Shield (Buckler) [4]",_
				"Saber [8] and Shield (Buckler) [4]",_
				"Rapier [8] and Shield (Buckler) [4]",_
				"Smallsword [8] and Main-Gauche [4]",_
				"Shortsword [8] and Main-Gauche [4]",_
				"Saber [8] and Main-Gauche [4]",_
				"Rapier [8] and Main-Gauche [4]",_
				"Smallsword [8] and Cloak [4]",_
				"Shortsword [8] and Cloak [4]",_
				"Saber [8] and Cloak [4]",_
				"Rapier [8] and Cloak [4]"_
			),_
			aliaslist(_
				"{SK:Smallsword}=12pts",_
				"{SK:Shortsword}=12pts",_
				"{SK:Saber}=12pts",_
				"{SK:Rapier}=12pts",_
				"{SK:Smallsword}=8pts, {SK:Shield (Buckler)}=4pts",_
				"{SK:Shortsword}=8pts, {SK:Shield (Buckler)}=4pts",_
				"{SK:Saber}=8pts, {SK:Shield (Buckler)}=4pts",_
				"{SK:Rapier}=8pts, {SK:Shield (Buckler)}=4pts",_
				"{SK:Smallsword}=8pts, {SK:Main-Gauche}=4pts",_
				"{SK:Shortsword}=8pts, {SK:Main-Gauche}=4pts",_
				"{SK:Saber}=8pts, {SK:Main-Gauche}=4pts",_
				"{SK:Rapier}=8pts, {SK:Main-Gauche}=4pts",_
				"{SK:Smallsword}=8pts, {SK:Cloak}=4pts",_
				"{SK:Shortsword}=8pts, {SK:Cloak}=4pts",_
				"{SK:Saber}=8pts, {SK:Cloak}=4pts",_
				"{SK:Rapier}=8pts, {SK:Cloak}=4pts"_
			)_
		)_
	),_
	select1(_
		text("Please select 60 points from this mix of Bard-Song abilities other traits."),_
		tagwith(Bard(yes)),_
		pointswanted(60),_
		itemswanted(atleast 1),_
		list(_
			#list(Bard Abilities),_
			AD:Extra DX #codes(upto 3, downto 1),_
			AD:Extra IQ #codes(upto 3, downto 1),_
			AD:Extra Fatigue Points #codes(upto 4, downto 1),_
			#newitem(_
				AD:Extra Basic Speed,
				cat(Attributes),
				cost(20/40),
				upto(2),
				gives(+1 to ST:Basic Speed),
				levelnames(+1.00, +2.00)_
			) #codes(upto 2, downto 1),_
			AD:Acute Hearing,_
			AD:Appearance,_
			#newitem(AD:Increase Bardic Talent, cost(10/20), existing(AD:Bardic Talent)) #codes(upto 6, downto %level+1),_
			AD:Born Entertainer,_
			#newitem(AD:Increase Charisma, cost(5/10), existing(AD:Charisma)) #codes(upto 100, downto %level+1),_
			AD:Cultural Adaptability,_
			AD:Eidetic Memory,_
			AD:Photographic Memory,_
			AD:Empathy,_
			AD:Energy Reserve (Magical) #codes(upto 6, downto 1),_
			AD:Honest Face,_
			AD:Language Talent,_
			#list(Extra Languages),_
			AD:Luck #codes(upto 3, downto 1),_
			AD:Penetrating Voice,_
			AD:Signature Gear,_
			AD:Wealth #codes(upto 2),_
			AD:Wild Talent #codes(upto 1, downto 1)_
		)_
	),_
	select2(_
		text("Please select -15 points from these disadvantages."),_
		tagwith(Bard(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Chummy,_
			DI:Gregarious,_
			DI:Compulsive Carousing,_
			DI:Lecherousness,_
			DI:Sense of Duty (Adventuring companions),_
			DI:Xenophilia_
		)_
	),_
	select3(_
		text("Please select a further -35 points from these disadvantages"),_
		tagwith(Bard(yes)),_
		pointswanted(-35),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Disdvantages where Bard is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),_
			#list(GMDisadvantages),_
			DI:Code of Honor (Gentleman's),_
			DI:Compulsive Lying,_
			DI:Curious,_
			DI:Impulsiveness,_
			DI:Odious Personal Habit (Continuous singing or strumming),_
			DI:Overconfidence,_
			DI:Post-Combat Shakes,_
			DI:Trickster_
		)_
	),_
	select4(_
		text("Please select a ranged weapon skill."),_
		itemswanted(1),_
		tagwith(Bard(yes)),_
		pointswanted(2),_
		list(_
			SK:Bow #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Knife) #codes(upto 2pts, downto 2pts),_
			SK:Throwing #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select5(_
		text("Please select six of the following skills."),_
		itemswanted(6),_
		tagwith(Bard(yes)),_
		pointswanted(6),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Acrobatics #codes(upto 1pts),_
			SK:Climbing #codes(upto 1pts),_
			SK:Connoisseur (Art) #codes(upto 1pts),_
			SK:Connoisseur (Luxuries) #codes(upto 1pts),_
			SK:Connoisseur (Weapons) #codes(upto 1pts),_
			SK:Dancing #codes(upto 1pts),_
			SK:Disguise #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Hiking #codes(upto 1pts),_
			SK:Mimicry (Speech) #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Scrounging #codes(upto 1pts),_
			SK:Sex Appeal #codes(upto 1pts),_
			SK:Sleight of Hand #codes(upto 1pts),_
			SK:Teaching #codes(upto 1pts),_
			SK:Ventriloquism #codes(upto 1pts),_
			SK:Writing #codes(upto 1pts)_
		)_
	),_
	select6(_
		text("Choose a Fast-Draw specialty."),_
		itemswanted(1),_
		tagwith(Bard(yes)),_
		pointswanted(1),_
		multitype(yes),_
		list(_
			SK:Fast-Draw #codes(upto 1pts),_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Fast-Draw (Sword) #codes(upto 1pts),_
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts) _
		)_
	),_
	select7(_
		text("Please spend one point on each of 15 wizardly spells, but only from from the Communication & Empathy, Knowledge, Mind Control, and Sound colleges. (Feel free to finish that off later.)"),_
		tagwith(Bard(yes)),_
		pointswanted(atleast 0, upto 20),_
		itemswanted(atleast 0, upto 20),_
		list(_
			#list(Bard Spells)_
		)_
	),_
	select8(#List(QuirkSelection))

// 
// CLERIC
// 
Cleric, displaycost(250), cost(0),_
	description(You're a mortal agent of the Powers of Good. You might not be the physical foe of Evil the holy warrior is, but you're no cloistered idealist...),_
	page(DFRPG:A19),_
	noresync(yes),_
	sets(_
		{ST:ST}=12,_
		{ST:DX}=12,_
		{ST:IQ}=14,_
		{ST:HT}=12,_
		{ST:Hit Points}=ST:ST,_
		{ST:Will}=ST:IQ,_
		{ST:Perception}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=6.0,_
		{ST:Basic Move}={ST:Basic Speed}_
	),_
	adds(_
		{AD:Clerical Investment},_
		{AD:Power Investiture}=3,_
		{SK:Diagnosis}=1pts,_
		{SK:First Aid}=1pts,_
		{SK:Meditation}=1pts,_
		{SK:Occultism}=1pts,_
		{SK:Public Speaking}=1pts,_
		{SK:Religious Ritual}=1pts,_
		{SK:Surgery}=2pts,_
		{SK:Teaching}=1pts,_
		{SK:Theology}=1pts,_
		{SK:Esoteric Medicine (Holy)}=4pts,_
		{SK:Exorcism}=4pts,_
		%weapontypesaliaslist%_
	),_
	needs(20 Spells), ident(Clerical),_
	x(_
		#message(_
			"You will need to spend one point on each of 20 clerical spells (marked as from ~Clerical colleges) after completing this template." _
		),_
		#ChoiceList(_
				name(weapontypes),_
				title(Combat specialty),_
				text(Choose your melee skill package.),_
				picksallowed(1),_
				method(bynumber),_
				list(_
						"Axe/Mace [8] and Shield [4]",_
						"Broadsword [8] and Shield [4]",_
						"Flail [8] and Shield [4]",_
						"Staff [12]" _
				),_
				aliaslist(_
						"{SK:Axe/Mace}=8pts, {SK:Shield (Shield)}=4pts",_
						"{SK:Broadsword}=8pts, {SK:Shield (Shield)}=4pts",_
						"{SK:Flail}=8pts, {SK:Shield (Shield)}=4pts",_
						"{SK:Staff}=12pts"_
					)_
				)_
	),_
	select1(_
		text("Please select 45 points chosen from this mix of Holy abilities and other traits."),_
		tagwith(Cleric(yes)),_
		pointswanted(45),_
		itemswanted(atleast 1),_
		multitype(yes),_
		list(_
			#list(GMAdvantages),_
			AD:Extra ST #codes(upto 4, downto 1),_
			AD:Extra DX #codes(upto 2, downto 1),_
			AD:Extra IQ #codes(upto 2, downto 1),_
			AD:Extra HT #codes(upto 4, downto 1),_
			AD:Extra Will #codes(upto 9, downto 1),_
			AD:Extra Fatigue Points #codes(upto 4, downto 1),_
			AD:Energy Reserve (Holy) #codes(upto 15, downto 1),_
			AD:Fearlessness,_
			AD:Unfazeable,_
			AD:Healer #codes(upto 4, downto 1),_
			#list(Extra Languages),_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Mind Shield,_
			#newitem(AD:Increase Power Investiture, 10/20, existing(AD:Power Investiture)) #codes(upto 6, downto %level+1),_
			AD:Resistant to Disease #codes(upto 6, downto 1),_
			AD:Signature Gear,_
			AD:Spirit Empathy,_
			#list(Holy Abilities)_
		)_
	),_
	select2(_
		text("Please select one of these disadvantages."),_
		tagwith(Cleric(yes)),_
		pointswanted(-10),_
		itemswanted(1),_
		list(_
			#list(GMDisadvantages),_
			DI:Honesty,_
			DI:Sense of Duty (Coreligionists),_
			DI:Vow (No edged weapons)_
		)_
	),_
	select3(_
		text("Please select -15 points from the following disadvantages."),_
		tagwith(Cleric(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Honesty,_
			DI:Sense of Duty (Coreligionists),_
			DI:Vow (No edged weapons),_
			DI:Disciplines of Faith (Mysticism),_
			DI:Disciplines of Faith (Ritualism),_
			DI:Fanaticism #codes(upto 1, downto 1),_
			DI:Intolerance ("Evil" religions),_
			DI:Intolerance (All other religions),_
			DI:Vow (Vegetarianism),_
			DI:Vow (Chastity),_
			DI:Wealth #codes(upto 2, downto 1)_
		)_
	),_
	select4(_
		text("Please select a further -25 points from the following disadvantages."),_
		tagwith(Cleric(yes)),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Disdvantages where Cleric is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),_
			#list(GMDisadvantages),_
			DI:Honesty,_
			DI:Sense of Duty (Coreligionists),_
			DI:Vow (No edged weapons),_
			DI:Disciplines of Faith (Mysticism),_
			DI:Disciplines of Faith (Ritualism),_
			DI:Fanaticism #codes(upto 1, downto 1),_
			DI:Intolerance ("Evil" religions),_
			DI:Intolerance (All other religions),_
			DI:Vow (Vegetarianism),_
			DI:Vow (Chastity),_
			DI:Wealth #codes(upto 2, downto 1),_
			DI:Charitable,_
			DI:Compulsive Generosity,_
			DI:Miserliness,_
			DI:Gluttony,_
			DI:Overconfidence,_
			DI:Overweight,_
			DI:Fat,_
			DI:Selfless,_
			DI:Sense of Duty (Adventuring companions),_
			DI:Stubbornness,_
			DI:Truthfulness,_
			DI:Weirdness Magnet_
		)_
	),_
	select5(_
		text("Please select a ranged attack skill"),_
		tagwith(Cleric(yes)),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Innate Attack (Beam) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Breath) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Gaze) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Projectile) #codes(upto 4pts, downto 4pts),_
			SK:Throwing #codes(upto 4pts, downto 4pts),_
			SK:Sling #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select6(_
		text("Pick a Hidden Lore specialty"),_
		tagwith(Cleric(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Hidden Lore (Demons) #codes(upto 1pts),_
			SK:Hidden Lore (Faeries) #codes(upto 1pts),_
			SK:Hidden Lore (Spirits) #codes(upto 1pts)_
		)_
	),_
	select7(_
		text("Please select five of these skills"),_
		tagwith(Cleric(yes)),_
		pointswanted(5),_
		itemswanted(5),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Climbing #codes(upto 1pts),_
			SK:Stealth #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Panhandling #codes(upto 1pts),_
			SK:Savoir-Faire (High Society) #codes(upto 1pts),_
			SK:Research #codes(upto 1pts),_
			SK:Writing #codes(upto 1pts),_
			SK:Hiking #codes(upto 1pts),_
			SK:Scrounging #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Search #codes(upto 1pts)_
		)_
	),_
	select8(#List(QuirkSelection))

// 
// DRUID
// 
Druid, displaycost(250), cost(0),_
	description(Your friends call you a "nature priest" but that's a simplification.),_
	page(DFRPG:A22),_
	noresync(yes),_
	sets(_
		{ST:ST}=11,_
		{ST:DX}=12,_
		{ST:IQ}=14,_
		{ST:HT}=13,_
		{ST:Hit Points}=ST:ST,_
		{ST:Will}=ST:IQ,_
		{ST:Perception}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=6.00,_
		{ST:Basic Move}={ST:Basic Speed}_
	),_
	adds(_
		{AD:Green Thumb}=1,_
		{AD:Power Investiture (Druidic)}=3,_
		{SK:Camouflage}=1pts,_
		{SK:Climbing}=2pts,_
		{SK:Disguise (Animals)}=1pts,_
		{SK:Hiking}=1pts,_
		{SK:Naturalist}=2pts,_
		{SK:Pharmacy}=1pts,_
		{SK:Religious Ritual (Druidic)}=1pts,_
		{SK:Stealth}=2pts,_
		{SK:Theology (Druidic)}=1pts,_
		{SK:Veterinary}=1pts,_
		{SK:Weather Sense}=1pts,_
		{SK:Esoteric Medicine (Druidic)}=4pts,_
		{SK:Herb Lore}=4pts,_
		%weapontypesaliaslist%_
	),_
	needs(20 Spells), ident(Druidic),_
	x(_
		#message(_
			"You will need to spend one point on each of 20 druidic spells (marked as from ~Druidic colleges) after completing this template." _
		),_
		#ChoiceList(_
			name(weapontypes),_
			title(Combat specialty),_
			text(Choose your melee skill package.),_
			picksallowed(1),_
			method(bynumber),_
			list(_
					"Spear [12]",_
					"Staff [12]",_
					"Axe/Mace [8] and Shield [4]",_
					"Broadsword [8] and Shield [4]",_
					"Shortsword [8] and Shield [4]",_
					"Spear [8] and Shield [4]"_
				),_
			aliaslist(_
					"{SK:Spear}=12pts",_
					"{SK:Staff}=12pts",_
					"{SK:Axe/Mace}=8pts, {SK:Shield (Shield)}=4pts",_
					"{SK:Broadsword}=8pts, {SK:Shield (Shield)}=4pts",_
					"{SK:Shortsword}=8pts, {SK:Shield (Shield)}=4pts",_
					"{SK:Spear}=8pts, {SK:Shield (Shield)}=4pts"_
				)_
		)_
	),_
	select1(_
		text("Please select 40 points chosen from this mix of Druidic abilities and other traits."),_
		tagwith(Druid(yes)),_
		pointswanted(40),_
		itemswanted(atleast 1),_
		multitype(yes),_
		list(_
			#list(GMAdvantages),_
			#list(Druid Abilities),_
			AD:Extra IQ #codes(upto 2, downto 1),_
			AD:Extra HT #codes(upto 4, downto 1),_
			AD:Extra Perception #codes(upto 6, downto 1),_
			AD:Extra Fatigue Points #codes(upto 7, downto 1),_
			AD:Animal Empathy,_
			AD:Animal Friend #codes(upto 6, downto 1),_
			AD:Energy Reserve (Druidic) #codes(upto 13, downto 1),_
			#newitem(AD:Increase Green Thumb, 5/10, existing(AD:Green Thumb)) #codes(upto 6, downto %level+1),_
			AD:Healer,_
			AD:Intuition,_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Mind Shield,_
			AD:Outdoorsman,_
			#newitem(AD:Increase Power Investiture (Druidic), 10/20, existing(AD:Power Investiture (Druidic))) #codes(upto 6, downto %level+1),_
			AD:Resistant to Disease #codes(upto 6, downto 1),_
			AD:Signature Gear,_
			AD:Spirit Empathy_
			)_
	),_
	select2(_
		text("Please select -20 points from the following disadvantages."),_
		tagwith(Druid(yes)),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Disciplines of Faith (Ritualism),_
			DI:Disciplines of Faith (Mysticism),_
			DI:Sense of Duty (Nature),_
			DI:Wealth #codes(upto 2, downto 1),_
			DI:Vow (Never sleep indoors),_
			DI:Vow (Vegetarianism)_
		)_
	),_
	select3(_
		text("Please select another -25 points from the following disadvantages."),_
		tagwith(Druid(yes)),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Disdvantages where Druid is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),_
			#list(GMDisadvantages),_
			DI:Disciplines of Faith (Ritualism),_
			DI:Disciplines of Faith (Mysticism),_
			DI:Sense of Duty (Nature),_
			DI:Wealth #codes(upto 2, downto 1),_
			DI:Vow (Never sleep indoors),_
			DI:Vow (Vegetarianism),_
			DI:Intolerance (Urbanites),_
			DI:Loner,_
			DI:No Sense of Humor,_
			DI:Odious Personal Habit ("Dirty Hippy"),_
			DI:Overconfidence,_
			DI:Phobia (Crowds),_
			DI:Phobia (Fire),_
			DI:Phobia (Machinery),_
			DI:Stubbornness,_
			DI:Weirdness Magnet_
		)_
	),_
	select4(_
		text("Please select a ranged weapon skill"),_
		tagwith(Druid(yes)),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Blowpipe #codes(upto 4pts, downto 4pts),_
			SK:Bolas #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Beam) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Breath) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Gaze) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Projectile) #codes(upto 4pts, downto 4pts),_
			SK:Lasso #codes(upto 4pts, downto 4pts),_
			SK:Net #codes(upto 4pts, downto 4pts),_
			SK:Sling #codes(upto 4pts, downto 4pts),_
			SK:Throwing #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Stick) #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select5(_
		text("Please select an Animal Handling specialty."),_
		tagwith(Druid(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Animal Handling (Canines) #codes(upto 1pts),_
			SK:Animal Handling #codes(upto 1pts),_
			SK:Animal Handling (Felines) #codes(upto 1pts),_
			SK:Animal Handling (Equines) #codes(upto 1pts),_
			SK:Animal Handling (Snakes) #codes(upto 1pts)_
		)_
	),_
	select6(_
		text("Please select a Hidden Lore specialty."),_
		tagwith(Druid(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Hidden Lore (Elementals) #codes(upto 1pts),_
			SK:Hidden Lore (Faeries) #codes(upto 1pts),_
			SK:Hidden Lore (Nature Spirits) #codes(upto 1pts)_
		)_
	),_
	select7(_
		text("Please pick between Mimicry specialties"),_
		tagwith(Druid(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Mimicry (Animal Sounds) #codes(upto 1pts),_
			SK:Mimicry (Bird Calls) #codes(upto 1pts)_
		)_
	),_
	select8(_
		text("Please select a Survival specialty."),_
		tagwith(Druid(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Survival (Arctic) #codes(upto 1pts),_
			SK:Survival (Desert) #codes(upto 1pts),_
			SK:Survival (Island/Beach) #codes(upto 1pts),_
			SK:Survival (Jungle) #codes(upto 1pts),_
			SK:Survival (Mountain) #codes(upto 1pts),_
			SK:Survival (Plains) #codes(upto 1pts),_
			SK:Survival (Swampland) #codes(upto 1pts),_
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),_
	select9(_
		text("Please select three of these skills."),_
		tagwith(Druid(yes)),_
		pointswanted(3),_
		itemswanted(3),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Animal Handling (Canines) #codes(upto 1pts),_
			SK:Animal Handling #codes(upto 1pts),_
			SK:Animal Handling (Felines) #codes(upto 1pts),_
			SK:Animal Handling (Equines) #codes(upto 1pts),_
			SK:Animal Handling (Snakes) #codes(upto 1pts),_
			SK:Diagnosis #codes(upto 1pts),_
			SK:Diplomacy #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Hidden Lore (%specify%) #codes(upto 1pts),_
			SK:Hidden Lore (Demons) #codes(upto 1pts),_
			SK:Hidden Lore (Divine Servitors) #codes(upto 1pts),_
			SK:Hidden Lore (Elder Things) #codes(upto 1pts),_
			SK:Hidden Lore (Elementals) #codes(upto 1pts),_
			SK:Hidden Lore (Faeries) #codes(upto 1pts),_
			SK:Hidden Lore (Spirits) #codes(upto 1pts),_
			SK:Hidden Lore (Undead) #codes(upto 1pts),_
			SK:Hidden Lore (Nature Spirits) #codes(upto 1pts),_
			SK:Hidden Lore (Lost Civilizations) #codes(upto 1pts),_
			SK:Hidden Lore (Magic Items) #codes(upto 1pts),_
			SK:Hidden Lore (Magical Writings) #codes(upto 1pts),_
			SK:Knife #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Poisons #codes(upto 1pts),_
			SK:Teaching #codes(upto 1pts)_
		)_
	),_
	select10(#List(QuirkSelection))

// 
// HOLY WARRIOR
// 
Holy Warrior, displaycost(250), cost(0),_
	description(You fight for what's right - and the gods have your back.),_
	page(DFRPG:A25),_
	noresync(yes),_
	sets(_
		{ST:ST}=13,_
		{ST:DX}=13,_
		{ST:IQ}=12,_
		{ST:HT}=13,_
		{ST:Will}=14,_
		{ST:Hit Points}=ST:ST,_
		{ST:Perception}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=6.00,_
		{ST:Basic Move}={ST:Basic Speed}_
	),_
	adds(_
		{AD:Born War-Leader}=1,_
		{AD:Higher Purpose (%primarypurpose%)}=1,_
		{AD:Holiness}=2,_
		{AD:Rest in Pieces},_
		{SK:Brawling}=2pts,_
		{SK:Intimidation}=1pts,_
		{SK:Leadership}=1pts,_
		{SK:Meditation}=1pts,_
		{SK:Physiology}=4pts,_
		{SK:Psychology}=4pts,_
		{SK:Religious Ritual}=1pts,_
		{SK:Strategy}=2pts,_
		{SK:Tactics}=2pts,_
		{SK:Theology}=1pts,_
		{SK:Wrestling}=4pts,_
		{SK:Esoteric Medicine (Holy)}=1pts,_
		{SK:Exorcism}=4pts,_
		%weapontypesaliaslist%_
	),_
	x(_
		#ChoiceList(_
				name(weapontypes),_
				title(Combat specialty),_
				text(Choose your melee skill package.),_
				picksallowed(1),_
				method(bynumber),_
			list(_
				"Polearm [20]",_
				"Spear [20]",_
				"Two-Handed Sword [20]",_
				"Axe/Mace [12] and Shield [8]",_
				"Broadsword [12] and Shield [8]",_
				"Flail [12] and Shield [8]",_
				"Spear [12] and Shield [8]"_
			),_
			aliaslist(_
				"{SK:Polearm}=20pts",_
				"{SK:Spear}=20pts",_
				"{SK:Two-Handed Sword}=20pts",_
				"{SK:Axe/Mace}=12pts, {SK:Shield (Shield)}=8pts",_
				"{SK:Broadsword}=12pts, {SK:Shield (Shield)}=8pts",_
				"{SK:Flail}=12pts, {SK:Shield (Shield)}=8pts",_
				"{SK:Spear}=12pts, {SK:Shield (Shield)}=8pts"_
			)_
		)_
		#ChoiceList(_
				name(primarypurpose),_
				title(Higher Purpose),_
				text(Choose your primary Higher Purpose. (If you want both, you will be able to add the other later.)),_
				picksallowed(1),_
				method(bynumber),_
			list(_
				"Slay Demons",_
				"Slay Undead"_
			)_
		)_
	),_
	select1(_
		text("Please select 50 points chosen from this mix of Holy abilities and other traits."),_
		tagwith(HolyWarrior(yes)),_
		pointswanted(50),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			#list(Holy Abilities),_
			AD:Extra ST #codes(upto 5, downto 1),_
			AD:Extra DX #codes(upto 2, downto 1),_
			AD:Extra HT #codes(upto 5, downto 1),_
			AD:Extra Hit Points #codes(upto 5, downto 1),_
			AD:Extra Will #codes(upto 10, downto 1),_
			#newitem(AD:Increase Born War-Leader, 5/10, existing(AD:Born War-Leader)) #codes(upto 4, downto %level+1),_
			AD:Combat Reflexes,_
			AD:Enhanced Block (Shield) #codes(upto 2, downto 1),_
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 2, downto 1),_
			AD:Extra Attack #codes(upto 2, downto 1),_
			AD:Fearlessness,_
			AD:Unfazeable,_
			AD:Hard to Kill,_
			AD:Hard to Subdue,_
			AD:High Pain Threshold,_
			#newitem(AD:Improve Higher Purpose (%primarypurpose%), 5/10, existing(AD:Higher Purpose (%primarypurpose%))) #codes(upto 3, downto %level+1),_
			AD:Higher Purpose (%primarypurposenotlist%) #codes(upto 3, downto 1)_
			#newitem(AD:Improve Holiness, 5/10, existing(AD:Holiness)) #codes(upto 6, downto %level+1),_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Magic Resistance,_
			AD:Rapid Healing,_
			AD:Recovery,_
			AD:Resistant to Disease #codes(upto 6, downto 1),_
			AD:Resistant to Poison #codes(upto 3, downto 1),_
			AD:Signature Gear,_
			AD:Striking ST #codes(upto 2, downto 1),_
			AD:Trademark Move,_
			AD:Weapon Bond_
		)_
	),_
	select2(_
		text("Select one of these disadvantages."),_
		tagwith(HolyWarrior(yes)),_
		pointswanted(-10),_
		itemswanted(1),_
		list(_
			DI:Honesty,_
			DI:Sense of Duty (Good entities),_
			DI:Vow (Own no more than horse can carry)_
		)_
	),_
	select3(_
		text("Please select -15 points from the following disadvantages."),_
		tagwith(HolyWarrior(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Honesty,_
			DI:Sense of Duty (Good entities),_
			DI:Vow (Own no more than horse can carry),_
			DI:Charitable,_
			DI:Compulsive Generosity,_
			DI:Compulsive Vowing,_
			DI:Disciplines of Faith (Ritualism),_
			DI:Disciplines of Faith (Mysticism),_
			DI:Fanaticism,_
			DI:Intolerance ("Evil" religions),_
			DI:Intolerance (All other religions),_
			DI:Selfless,_
			DI:Truthfulness,_
			DI:Vow (Chastity)_
		)_
	),_
	select4(_
		text("Please select another -15 points from these disadvantages."),_
		tagwith(HolyWarrior(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Disdvantages where HolyWarrior is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),_
			#list(GMDisadvantages),_
			DI:Honesty,_
			DI:Sense of Duty (Good entities),_
			DI:Vow (Own no more than horse can carry),_
			DI:Charitable,_
			DI:Compulsive Generosity,_
			DI:Compulsive Vowing,_
			DI:Disciplines of Faith (Ritualism),_
			DI:Disciplines of Faith (Mysticism),_
			DI:Fanaticism,_
			DI:Intolerance ("Evil" religions),_
			DI:Intolerance (All other religions),_
			DI:Selfless,_
			DI:Truthfulness,_
			DI:Vow (Chastity),_
			DI:Bloodlust,_
			DI:Code of Honor (Chivalry),_
			DI:Easy to Read,_
			DI:No Sense of Humor,_
			DI:Overconfidence,_
			DI:Sense of Duty (Adventuring companions),_
			DI:Stubbornness_
		)_
	),_
	select5(_
		text("Select a form of Hidden Lore."),_
		tagwith(HolyWarrior(yes)),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Hidden Lore (Demons) #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Undead) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select6(_
		text("Select a ranged combat skill."),_
		tagwith(HolyWarrior(yes)),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Crossbow #codes(upto 4pts, downto 4pts),_
			SK:Throwing #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select7(_
		text("Please select five of these skills."),_
		tagwith(HolyWarrior(yes)),_
		pointswanted(5),_
		itemswanted(5),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Climbing #codes(upto 1pts),_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Fast-Draw (Potion) #codes(upto 1pts),_
			SK:Fast-Draw (Scroll) #codes(upto 1pts),_
			SK:Fast-Draw (Sword) #codes(upto 1pts),_
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Hiking #codes(upto 1pts),_
			SK:Interrogation #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Physiology #codes(upto 1pts),_
			SK:Psychology #codes(upto 1pts),_
			#newitem( SK:Riding (Equines),cat(_General, Animal),type(DX/A),default(ST:DX - 5, "SK:Animal Handling (Equines)"- 3),page(DFRPG:A87) ) #codes(upto 1pts)_
			SK:Stealth #codes(upto 1pts),_
		)_
	),_
	select8(#List(QuirkSelection))

	
// 
// KNIGHT
// 
// Weapon Skills Package - this is a complex interaction of the #ChoiceList at the bottom
// of the template, and the two weapon & ranged skills dialogs (Select4() and Select5()).
// More details about the #ChoiceList are after the end of this template, below the #ChoiceList.
// 
Knight, displaycost(250), cost(0),_
	description(Though you aren't necessarily an avowed chevalier, you're more warrior than some castle-dwelling fop.),_
	page(DFRPG:A27),_
	noresync(yes),_
	sets(_
		{ST:ST}=14,_
		{ST:DX}=14,_
		{ST:IQ}=10,_
		{ST:HT}=13,_
		{ST:Hit Points}=ST:ST,_
		{ST:Will}=ST:IQ,_
		{ST:Perception}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=6.00,_
		{ST:Basic Move}={ST:Basic Speed}_
	),_
	adds(_
		{AD:Born War-Leader}=2,_
		{AD:Combat Reflexes},_
		{AD:High Pain Threshold},_
		{SK:Connoisseur (Weapons)}=2pts,_
		{SK:Knife}=1pts,_
		{SK:Leadership}=2pts %weaponskillspackagealiaslist%_
		{SK:Strategy}=2pts,_
		{SK:Tactics}=2pts_
	),_
	select1(_
		text("Select 60 points from the following advantages."),_
		tagwith(Knight(yes)),_
		pointswanted(60),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			#list(Knight Abilities),_
			AD:Extra ST #codes(upto 6, downto 1),_
			AD:Extra DX #codes(upto 3, downto 1),_
			AD:Extra HT #codes(upto 6, downto 1),_
			AD:Extra Hit Points #codes(upto 7, downto 1),_
			#newitem(_
				AD:Extra Basic Speed,
				cat(Attributes),
				cost(20/40),
				upto(2),
				gives(+1 to ST:Basic Speed),
				levelnames(+1.00, +2.00)_
			) #codes(upto 2, downto 1),_
			#newitem(AD:Improve Born War-Leader, 5/10, existing(AD:Born War-Leader)) #codes(upto 6, downto %level+1),_
			AD:Enhanced Block #codes(upto 3, downto 1),_
			AD:Enhanced Parry (%Melee Weapon%) #codes(upto 3, downto 1),_
			AD:Extra Attack #codes(upto 2, downto 1),_
			AD:Fearlessness,_
			AD:Fit,_
			AD:Very Fit,_
			AD:Hard to Kill,_
			AD:Hard to Subdue,_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Penetrating Voice,_
			AD:Rapid Healing,_
			AD:Recovery,_
			AD:Signature Gear,_
			AD:Striking ST #codes(upto 2, downto 1),_
			AD:Trademark Move,_
			AD:Weapon Bond (%Weapon%),_
			AD:Weapon Master (All weapons),_
			AD:Weapon Master (Swords),_
			AD:Weapon Master (Fencing Weapons),_
			AD:Weapon Master (Knightly Weapons),_
			AD:Weapon Master (Two weapons normally used together),_
			AD:Weapon Master (One specific weapon),_
			AD:Weapon Master (Bow),_
			AD:Weapon Master (Knives)_
		)_
	),_
	select2(_
		text("Please select -20 points from these disadvantages."),_
		tagwith(Knight(yes)),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bad Temper,_
			DI:Bloodlust,_
			DI:Code of Honor (Outlaw's),_
			DI:Code of Honor (Soldier's),_
			DI:Code of Honor (Chivalry),_
			DI:Obsession (Slay some specific type of monster),_
			DI:One Eye,_
			DI:Sense of Duty (Nation),_
			DI:Vow (Never refuse a challenge to combat),_
			DI:Wounded_
		)_
	),_
	select3(_
		text("Select an additional -15 points from these disadvantages."),_
		tagwith(Knight(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Disdvantages where Knight is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),_
			#list(GMDisadvantages),_
			DI:Bad Temper,_
			DI:Bloodlust,_
			DI:Code of Honor (Outlaw's),_
			DI:Code of Honor (Soldier's),_
			DI:Code of Honor (Chivalry),_
			DI:Obsession (Slay some specific type of monster),_
			DI:One Eye,_
			DI:Sense of Duty (Nation),_
			DI:Vow (Never refuse a challenge to combat),_
			DI:Wounded,_
			DI:Bully,_
			DI:Compulsive Carousing,_
			DI:Greed,_
			DI:Honesty,_
			DI:Lecherousness,_
			DI:Overconfidence,_
			DI:Sense of Duty (Adventuring companions)_
		)_
	),_
	select4(_
		text("Please select %weaponskillspackagealt5list% of these weapon skills."),_
		tagwith(Knight(yes)),_
		pointswanted(%weaponskillspackagealt4list%),_
		itemswanted(%weaponskillspackagealt5list%),_
		list(%weaponskillspackagealt3list%)_
	),_
	select5(_
		text("Please select a ranged combat skill."),_
		tagwith(Knight(yes)),_
		pointswanted(%weaponskillspackagealt2list%),_
		itemswanted(1),_
		list(%weaponskillspackagealt1list%)_
	),_
	select6(_
		text("Please select an unarmed striking skill."),_
		tagwith(Knight(yes)),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Brawling #codes(upto 2pts, downto 2pts),_
			SK:Boxing #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Please select an unarmed grappling skill."),_
		tagwith(Knight(yes)),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Sumo Wrestling #codes(upto 2pts, downto 2pts),_
			SK:Wrestling #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select8(_
		text("Select an Armory skill."),_
		tagwith(Knight(yes)),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Armory (Body Armor) #codes(upto 4pts, downto 4pts),_
			SK:Armory (Melee Weapons) #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select9(_
		text("Choose a Fast-Draw specialty."),_
		itemswanted(1),_
		tagwith(Knight(yes)),_
		pointswanted(1),_
		multitype(yes),_
		list(_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Fast-Draw (Potion) #codes(upto 1pts),_
			SK:Fast-Draw (Scroll) #codes(upto 1pts),_
			SK:Fast-Draw (Sword) #codes(upto 1pts),_
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts)_
		)_
	),_
	select10(_
		text("Please select five of these skills."),_
		tagwith(Knight(yes)),_
		pointswanted(5),_
		itemswanted(5),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Carousing #codes(upto 1pts),_
			SK:Climbing #codes(upto 1pts),_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Fast-Draw (Potion) #codes(upto 1pts),_
			SK:Fast-Draw (Scroll) #codes(upto 1pts),_
			SK:Fast-Draw (Sword) #codes(upto 1pts),_
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Forced Entry #codes(upto 1pts),_
			SK:Gambling #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Heraldry #codes(upto 1pts),_
			SK:Hiking #codes(upto 1pts),_
			SK:Intimidation #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Riding (Horse) #codes(upto 1pts),_
			SK:Savoir-Faire #codes(upto 1pts),_
			SK:Scrounging #codes(upto 1pts),_
			SK:Stealth #codes(upto 1pts),_
			SK:Streetwise #codes(upto 1pts)_
		)_
	),_
	select11(#List(QuirkSelection)),_
	x(_
		#ChoiceList(_
				name(weaponskillspackage),_
				title(Weapon Skills Package Types),_
				text(_
					Choose one of the following weapon skills package options. (You'll get to choose the actual skills later.)_
				),_
				picksallowed(1),_
				method(bynumber),_
			list(_
"Shield [4], 1 ranged [4], 1 melee [24].",_
"Shield [4], 1 ranged [4], 2 melee [12].",_
"Shield [4], 1 ranged [4], 3 melee [8].",_
"No Shield, 1 ranged [8], 1 melee [24].",_
"No Shield, 1 ranged [8], 2 melee [12].",_
"No Shield, 1 ranged [8], 3 melee [8].",_
"No Shield, 1 ranged [4], 1 two-handed melee [28].",_
"No Shield, 1 ranged [4], 1 two-handed melee [16] + 1 melee [12].",_
"No Shield, 1 ranged [4], 1 two-handed melee [12] + 2 melee [8]."_
			),_
			aliaslist(_
				",{SK:Shield (Shield)}=4pts,",_
				",{SK:Shield (Shield)}=4pts,",_
				",{SK:Shield (Shield)}=4pts,",_
				",",_
				",",_
				",",_
				",",_
				",",_
				","_
			),_
			alt1list(_
				"SK:Bow #codes(upto 4pts, downto 4pts),SK:Crossbow #codes(upto 4pts, downto 4pts),SK:Sling #codes(upto 4pts, downto 4pts),SK:Throwing #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts)",_
				"SK:Bow #codes(upto 4pts, downto 4pts),SK:Crossbow #codes(upto 4pts, downto 4pts),SK:Sling #codes(upto 4pts, downto 4pts),SK:Throwing #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts)",_
				"SK:Bow #codes(upto 4pts, downto 4pts),SK:Crossbow #codes(upto 4pts, downto 4pts),SK:Sling #codes(upto 4pts, downto 4pts),SK:Throwing #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts)",_
				"SK:Bow #codes(upto 8pts, downto 8pts),SK:Crossbow #codes(upto 8pts, downto 8pts),SK:Sling #codes(upto 8pts, downto 8pts),SK:Throwing #codes(upto 8pts, downto 8pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 8pts, downto 8pts),SK:Thrown Weapon (Spear) #codes(upto 8pts, downto 8pts)",_
				"SK:Bow #codes(upto 8pts, downto 8pts),SK:Crossbow #codes(upto 8pts, downto 8pts),SK:Sling #codes(upto 8pts, downto 8pts),SK:Throwing #codes(upto 8pts, downto 8pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 8pts, downto 8pts),SK:Thrown Weapon (Spear) #codes(upto 8pts, downto 8pts)",_
				"SK:Bow #codes(upto 8pts, downto 8pts),SK:Crossbow #codes(upto 8pts, downto 8pts),SK:Sling #codes(upto 8pts, downto 8pts),SK:Throwing #codes(upto 8pts, downto 8pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 8pts, downto 8pts),SK:Thrown Weapon (Spear) #codes(upto 8pts, downto 8pts)",_
				"SK:Bow #codes(upto 4pts, downto 4pts),SK:Crossbow #codes(upto 4pts, downto 4pts),SK:Sling #codes(upto 4pts, downto 4pts),SK:Throwing #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts)",_
				"SK:Bow #codes(upto 4pts, downto 4pts),SK:Crossbow #codes(upto 4pts, downto 4pts),SK:Sling #codes(upto 4pts, downto 4pts),SK:Throwing #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts)",_
				"SK:Bow #codes(upto 4pts, downto 4pts),SK:Crossbow #codes(upto 4pts, downto 4pts),SK:Sling #codes(upto 4pts, downto 4pts),SK:Throwing #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts)"_
			),_
			alt2list(_
				"4",_
				"4",_
				"4",_
				"8",_
				"8",_
				"8",_
				"4",_
				"4",_
				"4"_
			),_
			alt3list(_
				"SK:Axe/Mace #codes(upto 24pts, downto 24pts),SK:Broadsword #codes(upto 24pts, downto 24pts),SK:Flail #codes(upto 24pts, downto 24pts),SK:Polearm #codes(upto 24pts, downto 24pts),SK:Shortsword #codes(upto 24pts, downto 24pts),SK:Spear #codes(upto 24pts, downto 24pts),SK:Two-Handed Sword #codes(upto 24pts, downto 24pts)",_
				"SK:Axe/Mace #codes(upto 12pts, downto 12pts),SK:Broadsword #codes(upto 12pts, downto 12pts),SK:Flail #codes(upto 12pts, downto 12pts),SK:Polearm #codes(upto 12pts, downto 12pts),SK:Shortsword #codes(upto 12pts, downto 12pts),SK:Spear #codes(upto 12pts, downto 12pts),SK:Two-Handed Sword #codes(upto 12pts, downto 12pts)",_
				"SK:Axe/Mace #codes(upto 8pts, downto 8pts),SK:Broadsword #codes(upto 8pts, downto 8pts),SK:Flail #codes(upto 8pts, downto 8pts),SK:Polearm #codes(upto 8pts, downto 8pts),SK:Shortsword #codes(upto 8pts, downto 8pts),SK:Spear #codes(upto 8pts, downto 8pts),SK:Two-Handed Sword #codes(upto 8pts, downto 8pts)",_
				"SK:Axe/Mace #codes(upto 24pts, downto 24pts),SK:Broadsword #codes(upto 24pts, downto 24pts),SK:Flail #codes(upto 24pts, downto 24pts),SK:Polearm #codes(upto 24pts, downto 24pts),SK:Shortsword #codes(upto 24pts, downto 24pts),SK:Spear #codes(upto 24pts, downto 24pts),SK:Two-Handed Sword #codes(upto 24pts, downto 24pts)",_
				"SK:Axe/Mace #codes(upto 12pts, downto 12pts),SK:Broadsword #codes(upto 12pts, downto 12pts),SK:Flail #codes(upto 12pts, downto 12pts),SK:Polearm #codes(upto 12pts, downto 12pts),SK:Shortsword #codes(upto 12pts, downto 12pts),SK:Spear #codes(upto 12pts, downto 12pts),SK:Two-Handed Sword #codes(upto 12pts, downto 12pts)",_
				"SK:Axe/Mace #codes(upto 8pts, downto 8pts),SK:Broadsword #codes(upto 8pts, downto 8pts),SK:Flail #codes(upto 8pts, downto 8pts),SK:Polearm #codes(upto 8pts, downto 8pts),SK:Shortsword #codes(upto 8pts, downto 8pts),SK:Spear #codes(upto 8pts, downto 8pts),SK:Two-Handed Sword #codes(upto 8pts, downto 8pts)",_
				"SK:Polearm #codes(upto 28pts, downto 28pts),SK:Spear #codes(upto 28pts, downto 28pts),SK:Two-Handed Sword #codes(upto 28pts, downto 28pts)",_
				"SK:Axe/Mace #codes(upto 12pts, downto 12pts),SK:Broadsword #codes(upto 12pts, downto 12pts),SK:Flail #codes(upto 12pts, downto 12pts),SK:Polearm #codes(upto 16pts, downto 12pts),SK:Shortsword #codes(upto 12pts, downto 12pts),SK:Spear #codes(upto 16pts, downto 16pts),SK:Two-Handed Sword #codes(upto 16pts, downto 16pts)",_
				"SK:Axe/Mace #codes(upto 8pts, downto 8pts),SK:Broadsword #codes(upto 8pts, downto 8pts),SK:Flail #codes(upto 8pts, downto 8pts),SK:Polearm #codes(upto 12pts, downto 8pts),SK:Shortsword #codes(upto 8pts, downto 8pts),SK:Spear #codes(upto 12pts, downto 12pts),SK:Two-Handed Sword #codes(upto 12pts, downto 12pts)"_
			),_
			alt4list(_
				"24",_
				"24",_
				"24",_
				"24",_
				"24",_
				"24",_
				"28",_
				"28",_
				"28"_
			),_
			alt5list(_
				"1",_
				"2",_
				"3",_
				"1",_
				"2",_
				"3",_
				"1",_
				"2",_
				"3"_
			)_
		)_
	)
// aliaslist 
// 		These are the options for the adds() of the Shield skill.
//		NOTE: %weaponskillspackagealiaslist% WILL BE replaced with something containing commas,
//			  which is why it's put into the adds() between Leadership and Strategy  without them. 
//			  THIS IS INTENTIONAL.
// alt1list 
//		Ranged SelectX(): 
//		These are the options based on the user's choice.
//		1-3		chose shield, so 4 points per ranged available
//		4-6		no shield, extra points into ranged, so 8 points per ranged available
//		7-9		no shield, no extra points in ranged, so 4 points per ranged available
// alt2list 
//		Ranged SelectX(): 
//		The PointsWanted for the SelectX()
//		1-3		4
//		4-6		8
//		7-9		4
// alt3list 
//		Melee SelectX(): 
//		These are the options based on the user's choice. 
//		1		chose shield, no extra points = 1 melee [24]
//		2		chose shield, no extra points = 2 melee [12]
//		3		chose shield, no extra points = 3 melee [8]
//		4		chose ranged, no extra points = 1 melee [24]
//		5		chose ranged, no extra points = 2 melee [12]
//		6		chose ranged, no extra points = 3 melee [8]
//		7		chose two-handed, extra 4 for one 2H = 1 2H melee [28]
//		8		chose two-handed, extra 4 for one 2H = 1 2H melee [16] + 1 melee [12]
//		9		chose two-handed, extra 4 for one 2H = 1 2H melee [12] + 2 melee [8]
// alt4list 
//		Melee SelectX(): 
//		The PointsWanted for the SelectX()
//		1-3		24
//		4-6		24
//		7-9		28
// alt5list 
//		Melee SelectX(): 
//		The number of selections wanted
//		1		1
//		2		2
//		3		3
//		4		1
//		5		2
//		6		3
//		7		1
//		8		2
//		9		3
// 
// 
// *****************************************
// Shield options
// *****************************************
// Chose Shield
// {SK:Shield (Shield)}=4pts
// No Shield
// {Chose to forgo Shield}
// *****************************************
// 
// *****************************************
// Ranged options
// *****************************************
// No extra points
// SK:Bow #codes(upto 4pts, downto 4pts),SK:Crossbow #codes(upto 4pts, downto 4pts),SK:Sling #codes(upto 4pts, downto 4pts),SK:Throwing #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 4pts, downto 4pts),SK:Thrown Weapon (Spear) #codes(upto 4pts, downto 4pts)
// Extra points
// SK:Bow #codes(upto 8pts, downto 8pts),SK:Crossbow #codes(upto 8pts, downto 8pts),SK:Sling #codes(upto 8pts, downto 8pts),SK:Throwing #codes(upto 8pts, downto 8pts),SK:Thrown Weapon (Axe/Mace) #codes(upto 8pts, downto 8pts),SK:Thrown Weapon (Spear) #codes(upto 8pts, downto 8pts)
// *****************************************
// 
// *****************************************
// 1 skill Melee Options
// *****************************************
// No extra points
// SK:Axe/Mace #codes(upto 24pts, downto 24pts),SK:Broadsword #codes(upto 24pts, downto 24pts),SK:Flail #codes(upto 24pts, downto 24pts),SK:Polearm #codes(upto 24pts, downto 24pts),SK:Shortsword #codes(upto 24pts, downto 24pts),SK:Spear #codes(upto 24pts, downto 24pts),SK:Two-Handed Sword #codes(upto 24pts, downto 24pts)
// Extra points in 1 two-handed
// SK:Polearm #codes(upto 28pts, downto 28pts),SK:Spear #codes(upto 28pts, downto 28pts),SK:Two-Handed Sword #codes(upto 28pts, downto 28pts)
// *****************************************
// 
// *****************************************
// 2 skill Melee Options
// *****************************************
// No extra points
// SK:Axe/Mace #codes(upto 12pts, downto 12pts),SK:Broadsword #codes(upto 12pts, downto 12pts),SK:Flail #codes(upto 12pts, downto 12pts),SK:Polearm #codes(upto 12pts, downto 12pts),SK:Shortsword #codes(upto 12pts, downto 12pts),SK:Spear #codes(upto 12pts, downto 12pts),SK:Two-Handed Sword #codes(upto 12pts, downto 12pts)
// Extra points in 1 two-handed
// SK:Axe/Mace #codes(upto 12pts, downto 12pts),SK:Broadsword #codes(upto 12pts, downto 12pts),SK:Flail #codes(upto 12pts, downto 12pts),SK:Polearm #codes(upto 16pts, downto 12pts),SK:Shortsword #codes(upto 12pts, downto 12pts),SK:Spear #codes(upto 16pts, downto 12pts),SK:Two-Handed Sword #codes(upto 16pts, downto 12pts)
// *****************************************
// 
// *****************************************
// 3 skill Melee Options
// *****************************************
// No extra points
// SK:Axe/Mace #codes(upto 8pts, downto 8pts),SK:Broadsword #codes(upto 8pts, downto 8pts),SK:Flail #codes(upto 8pts, downto 8pts),SK:Polearm #codes(upto 8pts, downto 8pts),SK:Shortsword #codes(upto 8pts, downto 8pts),SK:Spear #codes(upto 8pts, downto 8pts),SK:Two-Handed Sword #codes(upto 8pts, downto 8pts)
// Extra points in 1 two-handed
// SK:Axe/Mace #codes(upto 8pts, downto 8pts),SK:Broadsword #codes(upto 8pts, downto 8pts),SK:Flail #codes(upto 8pts, downto 8pts),SK:Polearm #codes(upto 12pts, downto 8pts),SK:Shortsword #codes(upto 8pts, downto 8pts),SK:Spear #codes(upto 12pts, downto 8pts),SK:Two-Handed Sword #codes(upto 12pts, downto 8pts)
// *****************************************

	
// 
// MARTIAL ARTIST
// 
// In the Select4(), we ask for 8 points, even though the template calls for a "12-point" melee package.
// We do this because 4 points of the possible packages are already added by the template, as both
// Judo and Karate are already in the adds() for 2pts each.
// 
Martial Artist, displaycost(250), cost(0),_
	description(You're a true master of barehanded combat and exotic weapons.),_
	page(DFRPG:A29),_
	noresync(yes),_
	sets(_
		{ST:ST}=11,_
		{ST:DX}=16,_
		{ST:IQ}=10,_
		{ST:HT}=12,_
		{ST:Hit Points}=ST:ST,_
		{ST:Perception}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Will}=11,_
		{ST:Basic Speed}=7.0,_
		{ST:Basic Move}=8_
	),_
	adds(_
		{AD:Chi Talent}=2,_
		{AD:Trained by a Master},_
		{DI:Disciplines of Faith (Chi Rituals)},_
		{SK:Judo}=2pts,_
		{SK:Karate}=2pts,_
		{SK:Acrobatics}=2pts,_
		{SK:Jumping}=1pts,_
		{SK:Meditation}=2pts,_
		{SK:Stealth}=1pts,_
		{SK:Tactics}=4pts_
	),_
	select1(_
		text("Select 40 points chosen from a mix of Chi abilities and other advantages."),_
		tagwith(MartialArtist(yes)),_
		pointswanted(40),_
		itemswanted(atleast 1),_
		list(_
			#list(Martial Artist Abilities),_
			#list(GMAdvantages),_
			AD:Extra ST #codes(upto 4, downto 1),_
			AD:Extra DX #codes(upto 2, downto 1),_
			AD:Extra IQ #codes(upto 2, downto 1),_
			AD:Extra HT #codes(upto 4, downto 1),_
			AD:Extra Will #codes(upto 8, downto 1),_
			AD:Extra Perception #codes(upto 8, downto 1),_
			AD:Extra Fatigue Points #codes(upto 4, downto 1),_
			#newitem(_
				AD:Extra Basic Speed,
				cat(Attributes),
				cost(20/40),
				upto(2),
				gives(+1 to ST:Basic Speed),
				levelnames(+1.00, +2.00)_
			) #codes(upto 2, downto 1),_
			AD:Extra Basic Move #codes(upto 2, downto 1),_
			AD:Ambidexterity,_
			#newitem(AD:Improve Chi Talent, 15/30, existing(AD:Chi Talent)) #codes(upto 4, downto %level+1),_
			AD:Combat Reflexes,_
			AD:Enhanced Dodge #codes(upto 2, downto 1),_
			AD:Enhanced Parry (Unarmed) #codes(upto 2, downto 1),_
			AD:Extra Attack #codes(upto 1, downto 1),_
			AD:Fit,_
			AD:Very Fit,_
			AD:Flexibility,_
			AD:Double-Jointed,_
			AD:High Pain Threshold,_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Magic Resistance,_
			AD:Mind Shield #codes(upto 4, downto 1),_
			AD:Signature Gear,_
			AD:Trademark Move,_
			AD:Unfazeable,_
			AD:Weapon Bond,_
			AD:Weapon Master (One Exotic Weapon),_
			AD:Wild Talent #codes(upto 2, downto 1)_
		)_
	),_
	select2(text("Please select -25 points from among these disadvantages."),_
		tagwith(MartialArtist(yes)),_
		pointswanted(-25),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Code of Honor (Bushido),_
			DI:Compulsive Vowing,_
			DI:Honesty,_
			DI:Obsession (Perfect my art at any cost),_
			DI:Social Stigma (Minority Group),_
			DI:Vow (Always fight unarmed),_
			DI:Vow (Silence),_
			DI:Vow (Vegetarianism),_
			DI:Wealth #codes(upto 3, downto 1)_
		)_
	),_
	select3(_
		text("Select an additional -15 points from the following disadvantages."),_
		tagwith(MartialArtist(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Disdvantages where MartialArtist is "Yes", template(#newitem(DI:_Increase/Modify %ListItem%, cost(0), displaycost(varies), existing(DI:%ListItem%)))),_
			#list(GMDisadvantages),_
			DI:Code of Honor (Bushido),_
			DI:Compulsive Vowing,_
			DI:Honesty,_
			DI:Obsession (Perfect my art at any cost),_
			DI:Social Stigma (Minority Group),_
			DI:Vow (Always fight unarmed),_
			DI:Vow (Silence),_
			DI:Vow (Vegetarianism),_
			DI:Wealth #codes(upto 3, downto 1),_
			DI:Callous,_
			DI:Loner,_
			DI:No Sense of Humor,_
			DI:Overconfidence,_
			DI:Sense of Duty (Adventuring companions),_
			DI:Stubbornness_
		)_
	),_
	select4(_
		text("Select up to 4 melee combat skills. (If you choose to increase Judo or Karate, you'll also have to increase the other to at least 4pts.)"),_
		tagwith(MartialArtist(yes)),_
		pointswanted(8),_
		itemswanted(atleast 0, upto 4),_
		list(_
			#newitem(SK:Increase Judo, 2/6, existing(SK:Judo)) #codes(upto %points+6pts, downto %points+2pts),_
			#newitem(SK:Increase Karate, 2/6, existing(SK:Karate)) #codes(upto %points+6pts, downto %points+2pts),_
			SK:Axe/Mace #codes(upto 4pts, downto 4pts),_
			SK:Flail #codes(upto 4pts, downto 4pts),_
			SK:Jitte/Sai #codes(upto 4pts, downto 4pts),_
			SK:Knife #codes(upto 4pts, downto 4pts),_
			SK:Kusari #codes(upto 4pts, downto 4pts),_
			SK:Polearm #codes(upto 4pts, downto 4pts),_
			SK:Shortsword #codes(upto 4pts, downto 4pts),_
			SK:Smallsword #codes(upto 4pts, downto 4pts),_
			SK:Staff #codes(upto 4pts, downto 4pts),_
			SK:Tonfa #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select5(_
		text("Select a ranged combat skill."),_
		tagwith(MartialArtist(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Blowpipe #codes(upto 1pts),_
			SK:Sling #codes(upto 1pts),_
			SK:Throwing #codes(upto 1pts),_
			SK:Thrown Weapon (Dart) #codes(upto 1pts),_
			SK:Thrown Weapon (Knife) #codes(upto 1pts),_
			SK:Thrown Weapon (Shuriken) #codes(upto 1pts)_
		)_
	),_
	select6(_
		text("Please select three of these skills."),_
		tagwith(MartialArtist(yes)),_
		pointswanted(3),_
		itemswanted(3),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Climbing #codes(upto 1pts),_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Fast-Draw (Potion) #codes(upto 1pts),_
			SK:Fast-Draw (Scroll) #codes(upto 1pts),_
			SK:Fast-Draw (Sword) #codes(upto 1pts),_
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Hiking #codes(upto 1pts),_
			SK:Intimidation #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Running #codes(upto 1pts),_
			SK:Teaching #codes(upto 1pts)_
		)_
	),_
	select7(_
		text("Please select seven of these special skills, all of which benefit from Chi Talent."),_
		tagwith(MartialArtist(yes)),_
		pointswanted(14),_
		itemswanted(7),_
		list(_
			#buildlist(list(#list(Martial Artist Skills)), template(%ListItem% #codes(upto 2pts, downto 2pts)))_
		)_
	),_
	select8(#List(QuirkSelection))

// 
// SCOUT
// 
Scout, displaycost(250), cost(0),_
	description(You've been called "archer," "stalker," and "tracker." Though you've filled all three roles, such labels don't do justice to your full expertise.),_
	page(DFRPG:A34),_
	noresync(yes),_
	sets(_
		{ST:ST}=11,_
		{ST:DX}=14,_
		{ST:IQ}=11,_
		{ST:HT}=12,_
		{ST:Hit Points}=ST:ST,_
		{ST:Will}=ST:IQ,_
		{ST:Perception}=14,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=7.00,_
		{ST:Basic Move}={ST:Basic Speed}_
	),_
	adds(_
		{AD:Heroic Archer},_
		{AD:Outdoorsman}=2,_
		%weapontypesaliaslist%,_
		{SK:Bow}=16pts,_
		{SK:Camouflage}=2pts,_
		{SK:Cartography}=4pts,_
		{SK:Climbing}=1pts,_
		{SK:Fast-Draw (Arrow)}=1pts,_
		{SK:Gesture}=2pts,_
		{SK:Hiking}=2pts,_
		{SK:Mimicry (Bird Calls)}=2pts,_
		{SK:Navigation}=1pts,_
		{SK:Observation}=2pts,_
		{SK:Shadowing}=4pts,_
		{SK:Stealth}=1pts,_
		{SK:Tracking}=2pts,_
		{SK:Traps}=4pts_
	),_
	x(_
		#ChoiceList(_
				name(weapontypes),_
				title(Combat specialty),_
				text(Choose your melee skills package.),_
				picksallowed(1),_
				method(bynumber),_
			list(_
				"Broadsword-17 [12]",_
				"Shortsword-17 [12]",_
				"Spear-17 [12]",_
				"Staff-17 [12]",_
				"Broadsword-16 [8] and Shield-16 [4]",_
				"Shortsword-16 [8] and Shield-16 [4]",_
				"Spear-16 [8] and Shield-16 [4]"_
			),_
			aliaslist(_
					"{SK:Broadsword}=12pts",_
					"{SK:Shortsword}=12pts",_
					"{SK:Spear}=12pts",_
					"{SK:Staff}=12pts",_
					"{SK:Broadsword}=8pts, {SK:Shield (Shield)}=4pts",_
					"{SK:Shortsword}=8pts, {SK:Shield (Shield)}=4pts",_
					"{SK:Spear}=8pts, {SK:Shield (Shield)}=4pts"_
			),_
			alt1list(_
					"#newitem(SK:Increase Broadsword, DX/A, existing(SK:Broadsword)) #codes(upto %points+8pts, downto %points+4pts)",_
					"#newitem(SK:Increase Shortsword, DX/A, existing(SK:Shortsword)) #codes(upto %points+8pts, downto %points+4pts)",_
					"#newitem(SK:Increase Spear, DX/A, existing(SK:Spear)) #codes(upto %points+8pts, downto %points+4pts)",_
					"#newitem(SK:Increase Staff, DX/A, existing(SK:Staff)) #codes(upto %points+8pts, downto %points+4pts)",_
					"#newitem(SK:Increase Broadsword, DX/A, existing(SK:Broadsword)) #codes(upto %points+8pts, downto %points+4pts), #newitem(SK:Increase SK:Shield (Shield), DX/E, existing(SK:Shield (Shield))) #codes(upto %points+8pts, downto %points+4pts)",_
					"#newitem(SK:Increase Shortsword, DX/A, existing(SK:Shortsword)) #codes(upto %points+8pts, downto %points+4pts), #newitem(SK:Increase SK:Shield (Shield), DX/E, existing(SK:Shield (Shield))) #codes(upto %points+8pts, downto %points+4pts)",_
					"#newitem(SK:Increase Spear, DX/A, existing(SK:Spear)) #codes(upto %points+8pts, downto %points+4pts), #newitem(SK:Increase SK:Shield (Shield), DX/E, existing(SK:Shield (Shield))) #codes(upto %points+8pts, downto %points+4pts)"_
			)_
		)_
	),_
	select1(_
		text("Please select 40 points from among the following advantages."),_
		tagwith(Scout(yes)),_
		pointswanted(40),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			#list(Scout Abilities),_
			AD:Extra ST #codes(upto 4, downto 1),_
			AD:Extra DX #codes(upto 2, downto 1),_
			AD:Extra HT #codes(upto 4, downto 1),_
			AD:Extra Perception #codes(upto 8, downto 1),_
			#newitem(_
				AD:Extra Basic Speed,
				cat(Attributes),
				cost(20/40),
				upto(2),
				gives(+1 to ST:Basic Speed),
				levelnames(+1.00, +2.00)_
			) #codes(upto 2, downto 1),_
			AD:Extra Basic Move #codes(upto 6, downto 1),_
			AD:Absolute Direction,_
			AD:Acute Vision,_
			AD:Combat Reflexes,_
			AD:Danger Sense,_
			AD:Extra Attack #codes(upto 1, downto 1),_
			AD:Fit,_
			AD:Very Fit,_
			AD:High Pain Threshold,_
			AD:Luck #codes(upto 2, downto 1),_
			AD:Multi-Aim,_
			AD:Night Vision #codes(upto 9, downto 1),_
			#newitem(AD:Increase Outdoorsman, cost(10/20), existing(AD:Outdoorsman)) #codes(upto 6, downto %level+1),_
			AD:Peripheral Vision,_
			AD:Rapid Healing,_
			AD:Signature Gear,_
			AD:Silence #codes(upto 2, downto 1),_
			AD:Strongbow,_
			AD:Telescopic Vision #codes(upto 2, downto 1),_
			AD:Weapon Bond,_
			AD:Weapon Master (Bow)_
		)_
	),_
	select2(_
		text("Please select -15 points from among the following disadvantages."),_
		tagwith(Scout(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bloodlust,_
			DI:Callous,_
			DI:Greed,_
			DI:Honesty,_
			DI:Overconfidence,_
			DI:Sense of Duty (Adventuring companions),_
			DI:Stubbornness_
		)_
	),_
	select3(_
		text("Please select another -35 points from the following disadvantages."),_
		tagwith(Scout(yes)),_
		pointswanted(-35),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Bloodlust,_
			DI:Callous,_
			DI:Greed,_
			DI:Honesty,_
			DI:Overconfidence,_
			DI:Sense of Duty (Adventuring companions),_
			DI:Stubbornness,_
			DI:Code of Honor (Outlaw's),_
			DI:Code of Honor (Soldier's),_
			DI:Intolerance (Urbanites),_
			DI:Loner,_
			DI:No Sense of Humor,_
			DI:Odious Personal Habit ("Unwashed bushwhacker"),_
			DI:Paranoia,_
			DI:Phobia (Crowds),_
			DI:Social Stigma (Disowned),_
			DI:Vow (Never sleep indoors),_
			DI:Vow (Own no more than what can be carried)_
		)_
	),_
	select4(_
		text("Please select a Survival Specialty."),_
		tagwith(Scout(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Survival (Arctic) #codes(upto 1pts),_
			SK:Survival (Desert) #codes(upto 1pts),_
			SK:Survival (Island/Beach) #codes(upto 1pts),_
			SK:Survival (Jungle) #codes(upto 1pts),_
			SK:Survival (Mountain) #codes(upto 1pts),_
			SK:Survival (Plains) #codes(upto 1pts),_
			SK:Survival (Swampland) #codes(upto 1pts),_
			SK:Survival (Woodlands) #codes(upto 1pts)_
		)_
	),_
	select5(_
		text("Please spend 8 points by improving any previously selected skill, or adding any of the new ones also listed here."),_
		tagwith(Scout(yes)),_
		pointswanted(8),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Skills where Scout is "yes",_
				template(_
							#newitem(SK:Increase %ListItem%, existing(SK:%ListItem%)) #codes(downto 2pts)_
						)_
					),_
			%weapontypesalt1list%,_
			#newitem(SK:Increase Bow, DX/A, existing(SK:Bow)) #codes(downto 20pts),_
			#newitem(SK:Increase Camouflage, IQ/E, existing(SK:Camouflage)) #codes(downto 4pts),_
			#newitem(SK:Increase Cartography, IQ/A, existing(SK:Cartography)) #codes(downto 8pts),_
			#newitem(SK:Increase Climbing, DX/A, existing(SK:Climbing)) #codes(downto 2pts),_
			#newitem(SK:Increase Fast-Draw (Arrow), DX/E, existing(SK:Fast-Draw (Arrow))) #codes(downto 2pts),_
			#newitem(SK:Increase Gesture, IQ/E, existing(SK:Gesture)) #codes(downto 4pts),_
			#newitem(SK:Increase Hiking, HT/A, existing(SK:Hiking)) #codes(downto 4pts),_
			#newitem(SK:Increase Mimicry (Bird Calls), IQ/H, existing(SK:Mimicry (Bird Calls))) #codes(downto 4pts),_
			#newitem(SK:Increase Navigation, IQ/A, existing(SK:Navigation)) #codes(downto 2pts),_
			#newitem(SK:Increase Observation, Per/A, existing(SK:Observation)) #codes(downto 4pts),_
			#newitem(SK:Increase Shadowing, IQ/A, existing(SK:Shadowing)) #codes(downto 8pts),_
			#newitem(SK:Increase Stealth, DX/A, existing(SK:Stealth)) #codes(downto 2pts),_
			#newitem(SK:Increase Tracking,Per/A, existing(SK:Tracking)) #codes(downto 4pts),_
			#newitem(SK:Increase Traps, IQ/A, existing(SK:Traps)) #codes(downto 8pts),_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Armory (Missile Weapons) #codes(upto 1pts),_
			SK:Boating #codes(upto 1pts),_
			SK:Brawling #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Fast-Draw (Potion) #codes(upto 1pts),_
			SK:Fast-Draw (Scroll) #codes(upto 1pts),_
			SK:Fast-Draw (Sword) #codes(upto 1pts),_
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Garrote #codes(upto 1pts),_
			SK:Jumping #codes(upto 1pts),_
			SK:Knife #codes(upto 1pts),_
			SK:Knot-Tying #codes(upto 1pts),_
			SK:Prospecting #codes(upto 1pts),_
			SK:Riding (Horse) #codes(upto 1pts),_
			SK:Running #codes(upto 1pts),_
			SK:Seamanship #codes(upto 1pts),_
			SK:Search #codes(upto 1pts),_
			SK:Skiing #codes(upto 1pts),_
			SK:Swimming #codes(upto 1pts),_
			SK:Throwing #codes(upto 1pts),_
			SK:Weather Sense #codes(upto 1pts),_
			SK:Wrestling #codes(upto 1pts)_
		)_
	),_
	select6(#List(QuirkSelection))

// 
// Swashbuckler
// 
Swashbuckler, displaycost(250), cost(0),_
	description(You're living proof that the sword is mightier, speedier, and more stylish than . . . well, everything.),_
	page(DFRPG:A36),_
	noresync(yes),_
	sets(_
		{ST:ST}=11,_
		{ST:DX}=15,_
		{ST:IQ}=10,_
		{ST:HT}=13,_
		{ST:Hit Points}=ST:ST,_
		{ST:Will}=ST:IQ,_
		{ST:Perception}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=7.0,_
		{ST:Basic Move}={ST:Basic Speed}_
	),_
	adds(_
		{AD:Combat Reflexes},_
		{AD:Enhanced Parry (%Swashbuckler Weapon%)},_
		{AD:Luck},_
		{AD:Weapon Bond},_
		{AD:Weapon Master (One specific weapon)},_
		%weapontypesaliaslist%,_
		%fastdrawaliaslist%,_
		{SK:Acrobatics}=4pts,_
		{SK:Carousing}=1pts,_
		{SK:Jumping}=1pts,_
		{SK:Stealth}=1pts,_
		{SK:Wrestling}=2pts_
	),_
	x(_
		#ChoiceList(_
			name(weapontypes),_
			title(Combat Style),_
			text(Choose your melee skill package.),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Broadsword [20]",_
				"Rapier [20]",_
				"Saber [20]",_
				"Shortsword [20]",_
				"Smallsword [20]",_
				"Broadsword [16] and Main-Gauche [4]",_
				"Rapier [16] and Main-Gauche [4]",_
				"Saber [16] and Main-Gauche [4]",_
				"Shortsword [16] and Main-Gauche [4]",_
				"Smallsword [16] and Main-Gauche [4]",_
				"Broadsword [16] and Cloak [4]",_
				"Rapier [16] and Cloak [4]",_
				"Saber [16] and Cloak [4]",_
				"Shortsword [16] and Cloak [4]",_
				"Smallsword [16] and Cloak [4]",_
				"Broadsword [16] and Shield (Buckler) [4]",_
				"Rapier [16] and Shield (Buckler) [4]",_
				"Saber [16] and Shield (Buckler) [4]",_
				"Shortsword [16] and Shield (Buckler) [4]",_
				"Smallsword [16] and Shield (Buckler) [4]"_
			),_
			aliaslist(_
				"{SK:Broadsword}=20pts",_
				"{SK:Rapier}=20pts",_
				"{SK:Saber}=20pts",_
				"{SK:Shortsword}=20pts",_
				"{SK:Smallsword}=20pts",_
				"{SK:Broadsword}=16pts, {SK:Main-Gauche}=4pts",_
				"{SK:Rapier}=16pts, {SK:Main-Gauche}=4pts",_
				"{SK:Saber}=16pts, {SK:Main-Gauche}=4pts",_
				"{SK:Shortsword}=16pts, {SK:Main-Gauche}=4pts",_
				"{SK:Smallsword}=16pts, {SK:Main-Gauche}=4pts",_
				"{SK:Broadsword}=16pts, {SK:Cloak}=4pts",_
				"{SK:Rapier}=16pts, {SK:Cloak}=4pts",_
				"{SK:Saber}=16pts, {SK:Cloak}=4pts",_
				"{SK:Shortsword}=16pts, {SK:Cloak}=4pts",_
				"{SK:Smallsword}=16pts, {SK:Cloak}=4pts",_
				"{SK:Broadsword}=16pts, {SK:Shield (Buckler)}=4pts",_
				"{SK:Rapier}=16pts, {SK:Shield (Buckler)}=4pts",_
				"{SK:Saber}=16pts, {SK:Shield (Buckler)}=4pts",_
				"{SK:Shortsword}=16pts, {SK:Shield (Buckler)}=4pts",_
				"{SK:Smallsword}=16pts, {SK:Shield (Buckler)}=4pts"_
			)_
		),_
		#ChoiceList(_
			name(fastdraw),_
			title(Fast-Draw),_
			text(Choose your fast-draw package.),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Fast-Draw (Sword)-17 [2]",_
				"Fast-Draw (Sword)-16 [1] and Fast-Draw (Knife)-16 [1]"_
			),_
			aliaslist(_
				"{SK:Fast-Draw (Sword)}=2pts",_
				"{SK:Fast-Draw (Sword)}=1pts, {SK:Fast-Draw (Knife)}=1pts"_
			)_
		)_	
	),_
	select1(_
		text("Please select 60 points from the following advantages."),_
		tagwith(Swashbuckler(yes)),_
		pointswanted(60),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Advantages where name includes "Enhanced Parry", template(#newitem(AD:Increase %ListItem%, displaycost(varies), existing(AD:%ListItem%)) #codes(upto 3, downto 2))),_
			#list(GMAdvantages),_
			#list(Swashbuckler Abilities),_
			AD:Extra ST #codes(upto 6, downto 1),_
			AD:Extra DX #codes(upto 3, downto 1),_
			#newitem(_
				AD:Extra Basic Speed,
				cat(Attributes),
				cost(20/40),
				upto(3),
				gives(+1 to ST:Basic Speed),
				levelnames(+1.00, +2.00, +3.00)_
			) #codes(upto 3, downto 1),_
			AD:Extra Basic Move #codes(upto 3, downto 1),_
			AD:Ambidexterity,_
			AD:Appearance #codes(upto 3, downto 1),_
			AD:Charisma #codes(upto 4, downto 1),_
			AD:Daredevil,_
			AD:Enhanced Block (Cloak) #codes(upto 3, downto 1),_
			AD:Enhanced Block (Shield) #codes(upto 3, downto 1),_
			AD:Enhanced Dodge #codes(upto 1, downto 1),_
			AD:Extra Attack #codes(upto 2, downto 1),_
			#newitem(AD:Increase Luck, 15/45, existing(AD:Luck)) #codes(upto 3, downto 2),_
			AD:Perfect Balance,_
			AD:Serendipity,_
			AD:Signature Gear,_
			AD:Striking ST #codes(upto 2, downto 1),_
			AD:Trademark Move,_
			AD:Weapon Master (Two weapons normally used together),_
			AD:Weapon Master (Fencing Weapons),_
			AD:Weapon Master (Swords)_
		)_
	),_
	select2(_
		text("Please choose -15 points from these disadvantages."),_
		tagwith(Swashbuckler(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Code of Honor (Outlaw's),_
			DI:Code of Honor (Gentleman's),_
			DI:Obsession (Become the best swordsman in the world!),_
			DI:Vow (Use only weapon of choice),_
			DI:Vow (Never refuse a challenge to combat),_
			DI:Vow (Challenge every swordsman to combat),_
			DI:Vow (Never wear armor)_
		)_
	),_
	select3(_
		text("Please choose another -35 points from these disadvantages."),_
		tagwith(Swashbuckler(yes)),_
		pointswanted(-35),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Code of Honor (Outlaw's),_
			DI:Code of Honor (Gentleman's),_
			DI:Obsession (Become the best swordsman in the world!),_
			DI:Vow (Use only weapon of choice),_
			DI:Vow (Never refuse a challenge to combat),_
			DI:Vow (Challenge every swordsman to combat),_
			DI:Vow (Never wear armor),_
			DI:Chummy,_
			DI:Gregarious,_
			DI:Compulsive Carousing,_
			DI:Compulsive Spending,_
			DI:Greed,_
			DI:Impulsiveness,_
			DI:Jealousy,_
			DI:Lecherousness,_
			DI:One Eye,_
			DI:Overconfidence,_
			DI:Sense of Duty (Adventuring Companions),_
			DI:Short Attention Span,_
			DI:Trickster,_
			DI:Wounded_
		)_
	),_
	select4(_
		text("Please choose one unarmed striking skill."),_
		tagwith(Swashbuckler(yes)),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Brawling #codes(upto 2pts, downto 2pts),_
			SK:Boxing #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select5(_
		text("Select a thrown weapon skill."),_
		tagwith(Swashbuckler(yes)),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Throwing #codes(upto 2pts, downto 2pts),_
			SK:Thrown Weapon (Knife) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select6(_
		text("Please select a social skill."),_
		tagwith(Swashbuckler(yes)),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Savoir-Faire #codes(upto 2pts, downto 2pts),_
			SK:Streetwise #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select7(_
		text("Please select seven of these skills."),_
		tagwith(Swashbuckler(yes)),_
		pointswanted(7),_
		itemswanted(7),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Climbing #codes(upto 1pts),_
			SK:Connoisseur (Art) #codes(upto 1pts),_
			SK:Connoisseur (Luxuries) #codes(upto 1pts),_
			SK:Connoisseur (Weapons) #codes(upto 1pts),_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Fast-Draw (Potion) #codes(upto 1pts),_
			SK:Fast-Draw (Scroll) #codes(upto 1pts),_
			SK:Fast-Draw (Sword) #codes(upto 1pts),_
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),_
			SK:Fast-Talk #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Gambling #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Hiking #codes(upto 1pts),_
			SK:Intimidation #codes(upto 1pts),_
			SK:Lasso #codes(upto 1pts),_
			SK:Scrounging #codes(upto 1pts),_
			SK:Seamanship #codes(upto 1pts),_
			SK:Search #codes(upto 1pts),_
			SK:Sex Appeal #codes(upto 1pts),_
			SK:Whip #codes(upto 1pts)_
		)_
	),_
	select8(#List(QuirkSelection))

// 
// Thief
// 
Thief, displaycost(250), cost(0),_
	description(You're a "procurement expert," whatever unflattering terms others may use. You take things that need taking.),_
	page(DFRPG:A38),_
	noresync(yes),_
	sets(_
		{ST:ST}=11,_
		{ST:DX}=15,_
		{ST:IQ}=13,_
		{ST:HT}=11,_
		{ST:Perception}=14,_
		{ST:Hit Points}=ST:ST,_
		{ST:Will}=ST:IQ,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=6.00,_
		{ST:Basic Move}=7_
	),_
	adds(_
		{AD:Flexibility},_
		{AD:High Manual Dexterity}=1,_
		{AD:Perfect Balance},_
		%weapontypesaliaslist%,_
		{SK:Acrobatics}=1pts,_
		{SK:Brawling}=1pts,_
		{SK:Carousing}=1pts,_
		{SK:Climbing}=1pts,_
		{SK:Escape}=1pts,_
		{SK:Filch}=2pts,_
		{SK:Forced Entry}=1pts,_
		{SK:Gambling}=1pts,_
		{SK:Gesture}=1pts,_
		{SK:Holdout}=2pts,_
		{SK:Lockpicking}=4pts,_
		{SK:Pickpocket}=2pts,_
		{SK:Search}=2pts,_
		{SK:Shadowing}=2pts,_
		{SK:Sleight of Hand}=1pts,_
		{SK:Smuggling}=2pts,_
		{SK:Stealth}=12pts,_
		{SK:Streetwise}=2pts,_
		{SK:Traps}=4pts,_
		{SK:Urban Survival}=2pts_
	),_
	x(_
		#ChoiceList(_
			name(weapontypes),_
			title(Combat Style),_
			text(Choose your melee skill package.),_
			picksallowed(1),_
			method(bynumber),_
			list(_
				"Blade and Shield: Knife-15 [1] and Cloak-14 [1]",_
				"Blade and Shield: Knife-15 [1] and Shield (Buckler)-15 [1]",_
				"Blade and Shield: Main-Gauche-14 [1] and Cloak-14 [1]",_
				"Blade and Shield: Main-Gauche-14 [1] and Shield (Buckler)-15 [1]",_
				"Blade and Shield: Rapier-14 [1] and Cloak-14 [1]",_
				"Blade and Shield: Rapier-14 [1] and Shield (Buckler)-15 [1]",_
				"Blade and Shield: Saber-14 [1] and Cloak-14 [1]",_
				"Blade and Shield: Saber-14 [1] and Shield (Buckler)-15 [1]",_
				"Blade and Shield: Shortsword-14 [1] and Cloak-14 [1]",_
				"Blade and Shield: Shortsword-14 [1] and Shield (Buckler)-15 [1]",_
				"Blade and Shield: Smallsword-14 [1] and Cloak-14 [1]",_
				"Blade and Shield: Smallsword-14 [1] and Shield (Buckler)-15 [1]",_
				"Single Blade: Knife-16 [2]",_
				"Single Blade: Main-Gauche-15 [2]",_
				"Single Blade: Rapier-15 [2]",_
				"Single Blade: Saber-15 [2]",_
				"Single Blade: Shortsword-15 [2]",_
				"Single Blade: Smallsword-15 [2]",_
				"Sword and Dagger: Rapier-14 [1] and Main-Gauche-14 [1]",_
				"Sword and Dagger: Saber-14 [1] and Main-Gauche-14 [1]",_
				"Sword and Dagger: Shortsword-14 [1] and Main-Gauche-14 [1]",_
				"Sword and Dagger: Smallsword-14 [1] and Main-Gauche-14 [1]"_
			),_
			aliaslist(_
				"{SK:Knife}=1pts, {SK:Cloak}=1pts",_
				"{SK:Knife}=1pts, {SK:Shield (Buckler)}=1pts",_
				"{SK:Main-Gauche}=1pts, {SK:Cloak}=1pts",_
				"{SK:Main-Gauche}=1pts, {SK:Shield (Buckler)}=1pts",_
				"{SK:Rapier}=1pts, {SK:Cloak}=1pts",_
				"{SK:Rapier}=1pts, {SK:Shield (Buckler)}=1pts",_
				"{SK:Saber}=1pts, {SK:Cloak}=1pts",_
				"{SK:Saber}=1pts, {SK:Shield (Buckler)}=1pts",_
				"{SK:Shortsword}=1pts, {SK:Cloak}=1pts",_
				"{SK:Shortsword}=1pts, {SK:Shield (Buckler)}=1pts",_
				"{SK:Smallsword}=1pts, {SK:Cloak}=1pts",_
				"{SK:Smallsword}=1pts, {SK:Shield (Buckler)}=1pts",_
				"{SK:Knife}=2pts",_
				"{SK:Main-Gauche}=2pts",_
				"{SK:Rapier}=2pts",_
				"{SK:Saber}=2pts",_
				"{SK:Shortsword}=2pts",_
				"{SK:Smallsword}=2pts",_
				"{SK:Rapier}=1pts, {SK:Main-Gauche}=1pts",_
				"{SK:Saber}=1pts, {SK:Main-Gauche}=1pts",_
				"{SK:Shortsword}=1pts, {SK:Main-Gauche}=1pts",_
				"{SK:Smallsword}=1pts, {SK:Main-Gauche}=1pts"_
			),_
			alt1list(_
					"#newitem(SK:Increase Knife, DX/E, existing(SK:Knife)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Cloak, DX/A, existing(SK:Cloak)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Knife, DX/E, existing(SK:Knife)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Shield (Buckler), DX/E, existing(SK:Shield (Buckler))) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Main-Gauche, DX/A, existing(SK:Main-Gauche)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Cloak, DX/A, existing(SK:Cloak)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Main-Gauche, DX/A, existing(SK:Main-Gauche)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Shield (Buckler), DX/E, existing(SK:Shield (Buckler))) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Rapier, DX/A, existing(SK:Rapier)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Cloak, DX/A, existing(SK:Cloak)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Rapier, DX/A, existing(SK:Rapier)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Shield (Buckler), DX/E, existing(SK:Shield (Buckler))) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Saber, DX/A, existing(SK:Saber)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Cloak, DX/A, existing(SK:Cloak)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Saber, DX/A, existing(SK:Saber)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Shield (Buckler), DX/E, existing(SK:Shield (Buckler))) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Shortsword, DX/A, existing(SK:Shortsword)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Cloak, DX/A, existing(SK:Cloak)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Shortsword, DX/A, existing(SK:Shortsword)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Shield (Buckler), DX/E, existing(SK:Shield (Buckler))) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Smallsword, DX/A, existing(SK:Smallsword)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Cloak, DX/A, existing(SK:Cloak)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Smallsword, DX/A, existing(SK:Smallsword)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Shield (Buckler), DX/E, existing(SK:Shield (Buckler))) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Knife, DX/E, existing(SK:Knife)) #codes(downto %points+2pts)",_
					"#newitem(SK:Increase Main-Gauche, DX/A, existing(SK:Main-Gauche)) #codes(downto %points+2pts)",_
					"#newitem(SK:Increase Rapier, DX/A, existing(SK:Rapier)) #codes(downto %points+2pts)",_
					"#newitem(SK:Increase Saber, DX/A, existing(SK:Saber)) #codes(downto %points+2pts)",_
					"#newitem(SK:Increase Shortsword, DX/A, existing(SK:Shortsword)) #codes(downto %points+2pts)",_
					"#newitem(SK:Increase Smallsword, DX/A, existing(SK:Smallsword)) #codes(downto %points+2pts)",_
					"#newitem(SK:Increase Rapier, DX/A, existing(SK:Rapier)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Main-Gauche, DX/A, existing(SK:Main-Gauche)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Saber, DX/A, existing(SK:Saber)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Main-Gauche, DX/A, existing(SK:Main-Gauche)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Shortsword, DX/A, existing(SK:Shortsword)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Main-Gauche, DX/A, existing(SK:Main-Gauche)) #codes(downto %points+1pts)",_
					"#newitem(SK:Increase Smallsword, DX/A, existing(SK:Smallsword)) #codes(downto %points+1pts), #newitem(SK:Increase SK:Main-Gauche, DX/A, existing(SK:Main-Gauche)) #codes(downto %points+1pts)"_
			)_
		)_
	),_
	select1(_
		text("Please select 30 points from the following traits."),_
		tagwith(Thief(yes)),_
		pointswanted(30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Extra DX #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra Perception #codes(upto 6, downto 1),_
			#newitem(_
				AD:Extra Basic Speed +1.00,
				cat(Attributes),
				cost(20),
				gives(+1 to ST:Basic Speed)_
			),_
			AD:Extra Basic Move #codes(upto 2, downto 1),_
			AD:Ambidexterity,_
			AD:Catfall,_
			AD:Combat Reflexes,_
			AD:Danger Sense,_
			#newitem(AD:Double-Jointed, +10, existing(AD:Flexibility)) #codes(upto 2, downto 2),_
			AD:Enhanced Dodge #codes(upto 2, downto 1),_
			AD:Expert Backstabbing #codes(upto 10, downto 1),_
			AD:Gizmos #codes(upto 3, downto 1),_
			#newitem(AD:Increase High Manual Dexterity, 5/10, existing(AD:High Manual Dexterity)) #codes(upto 6, downto 2),_
			AD:Honest Face,_
			AD:Luck #codes(upto 2, downto1 ),_
			AD:Night Vision #codes(upto 9, downto 1),_
			AD:Peripheral Vision,_
			AD:Sensitive Touch,_
			AD:Serendipity,_
			AD:Signature Gear,_
			AD:Silence #codes(upto 2, downto1 ),_
			AD:Wealth #codes(upto 2, downto 1),_
			AD:Weapon Master (Knives)_
		)_
	),_
	select2(_
		text("Please select one of the following disadvantages."),_
		tagwith(Thief(yes)),_
		pointswanted(-15),_
		itemswanted(1),_
		list(_
			DI:Greed,_
			DI:Kleptomania,_
			DI:Trickster_
		)_
	),_
	select3(_
		text("Please select one of the following disadvantages."),_
		tagwith(Thief(yes)),_
		pointswanted(-5),_
		itemswanted(1),_
		list(_
			DI:Callous,_
			DI:Code of Honor (Outlaw's),_
			DI:Curious_
		)_
	),_
	select4(_
		text("Please select -20 points from the following disadvantages."),_
		tagwith(Thief(yes)),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Greed,_
			DI:Kleptomania,_
			DI:Trickster,_
			DI:Callous,_
			DI:Code of Honor (Outlaw's),_
			DI:Curious,_
			DI:Bad Temper,_
			DI:Bloodlust,_
			DI:Compulsive Carousing,_
			DI:Compulsive Gambling,_
			DI:Compulsive Lying,_
			DI:Compulsive Spending,_
			DI:Cowardice,_
			DI:Laziness,_
			DI:Lecherousness,_
			DI:Loner,_
			DI:One Eye,_
			DI:Overconfidence,_
			DI:Post-Combat Shakes,_
			DI:Sense of Duty (Adventuring companions),_
			DI:Skinny,_
			DI:Social Stigma (Criminal Record)_
		)_
	),_
	select5(_
		text("Please select one of the following ranged combat skills."),_
		tagwith(Thief(yes)),_
		pointswanted(1),_
		itemswanted(1),_
		list(_
			SK:Bow #codes(upto 1pts),_
			SK:Crossbow #codes(upto 1pts),_
			SK:Sling #codes(upto 1pts),_
			SK:Throwing #codes(upto 1pts),_
			SK:Thrown Weapon (Knife) #codes(upto 1pts)_
		)_
	),_
	select6(_
		text("Please spend 7 points by improving any previously selected skill, or adding any of the new ones also listed here."),_
		tagwith(Scout(yes)),_
		pointswanted(7),_
		itemswanted(atleast 1),_
		list(_
			#BuildSelectList(Skills where Thief is "yes",_
				template(_
						#newitem(SK:Increase %ListItem%, existing(SK:%ListItem%))_
				)_
			),_
			%weapontypesalt1list%,_
			#newitem(SK:Increase Acrobatics, existing(SK:Acrobatics)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Brawling, existing(SK:Brawling)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Carousing, existing(SK:Carousing)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Climbing, existing(SK:Climbing)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Escape, existing(SK:Escape)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Filch, existing(SK:Filch)) #codes(downto %points+2pts),_
			#newitem(SK:Increase Forced Entry, existing(SK:Forced Entry)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Gambling, existing(SK:Gambling)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Gesture, existing(SK:Gesture)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Holdout, existing(SK:Holdout)) #codes(downto %points+2pts),_
			#newitem(SK:Increase Lockpicking, existing(SK:Lockpicking)) #codes(downto %points+4pts),_
			#newitem(SK:Increase Pickpocket, existing(SK:Pickpocket)) #codes(downto %points+2pts),_
			#newitem(SK:Increase Search, existing(SK:Search)) #codes(downto %points+2pts),_
			#newitem(SK:Increase Shadowing, existing(SK:Shadowing)) #codes(downto %points+2pts),_
			#newitem(SK:Increase Sleight of Hand, existing(SK:Sleight of Hand)) #codes(downto %points+1pts),_
			#newitem(SK:Increase Smuggling, existing(SK:Smuggling)) #codes(downto %points+2pts),_
			#newitem(SK:Increase Stealth, existing(SK:Stealth)) #codes(downto %points+4pts),_
			#newitem(SK:Increase Streetwise, existing(SK:Streetwise)) #codes(downto %points+2pts),_
			#newitem(SK:Increase Traps, existing(SK:Traps)) #codes(downto %points+4pts),_
			#newitem(SK:Increase Urban Survival, existing(SK:Urban Survival)) #codes(downto %points+2pts),_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Cartography #codes(upto 1pts),_
			SK:Connoisseur (Art) #codes(upto 1pts),_
			SK:Connoisseur (Luxuries) #codes(upto 1pts),_
			SK:Connoisseur (Weapons) #codes(upto 1pts),_
			SK:Counterfeiting #codes(upto 1pts),_
			SK:Disguise #codes(upto 1pts),_
			SK:Fast-Draw (Arrow) #codes(upto 1pts),_
			SK:Fast-Draw (Knife) #codes(upto 1pts),_
			SK:Fast-Draw (Potion) #codes(upto 1pts),_
			SK:Fast-Draw (Scroll) #codes(upto 1pts),_
			SK:Fast-Draw (Sword) #codes(upto 1pts),_
			SK:Fast-Draw (Two-Handed Sword) #codes(upto 1pts),_
			SK:Fast-Talk #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Forgery #codes(upto 1pts),_
			SK:Garrote #codes(upto 1pts),_
			SK:Hiking #codes(upto 1pts),_
			SK:Knot-Tying #codes(upto 1pts),_
			SK:Lip Reading #codes(upto 1pts),_
			SK:Merchant #codes(upto 1pts),_
			SK:Observation #codes(upto 1pts),_
			SK:Panhandling #codes(upto 1pts),_
			SK:Poisons #codes(upto 1pts),_
			SK:Scrounging #codes(upto 1pts),_
			SK:Seamanship #codes(upto 1pts)_
		)_
	),_
	select9(#List(QuirkSelection))

// 
// Wizard
// 
Wizard, displaycost(250), cost(0),_
	description(Your knowlege of magic is deeper than that of the cleric or druid. The party needs your mighty wizardry.),_
	page(DFRPG:A40),_
	noresync(yes),_
	sets(_
		{ST:ST}=10,_
		{ST:DX}=12,_
		{ST:IQ}=15,_
		{ST:HT}=11,_
		{ST:Hit Points}=ST:ST,_
		{ST:Will}=ST:IQ,_
		{ST:Perception}=12,_
		{ST:Fatigue Points}=ST:HT,_
		{ST:Basic Speed}=6.00,_
		{ST:Basic Move}={ST:Basic Speed}_
	),_
	adds(_
			AD:Magery 0,_
			AD:Magery=3,_
			AD:Energy Reserve (Magical)=3,_
			%weaponaliaslist%,_
			SK:Alchemy=8pts,_
			SK:Hazardous Materials=1pts,_
			SK:Meditation=2pts,_
			SK:Occultism=2pts,_
			SK:Research=1pts,_
			SK:Speed-Reading=1pts,_
			SK:Teaching=1pts,_
			SK:Thaumatology=1pts,_
			SK:Writing=1pts_
	),_
	needs(30 Spells),_
	x(_
		#message(_
			"You will need to spend one point on each of 30 wizardly spells after completing this template." _
		),_
		#ChoiceList(_
			name(weapon),_
			title(Weapon Choice),_
			text(Choose one of these melee skills packages.),_
			picksallowed(1),_
			method(bynumber),_
			default(1),_
			list(_
				"Staff [8]",_
				"Smallsword [4] & Shield (Buckler) [4]"_
			),_
			aliaslist(_
				"{SK:Staff}=8pts",_
				"{SK:Smallsword}=4pts, {SK:Shield (Buckler)}=4pts"_
			)_
		),_
	),_
	select1(_
		text("Please select 30 points from the following traits."),_
		tagwith(Wizard(yes)),_
		pointswanted(30),_
		itemswanted(atleast 1),_
		list(_
			#list(GMAdvantages),_
			AD:Extra DX #codes(upto 1, downto 1),_
			AD:Extra IQ #codes(upto 1, downto 1),_
			AD:Extra Will #codes(upto 5, downto 1),_
			AD:Extra Fatigue Points #codes(upto 4, downto 1),_
			AD:Eidetic Memory,_
			AD:Photographic Memory,_
			#newitem(AD:Increase Energy Reserve (Magical), 3/6, existing(AD:Energy Reserve (Magical))) #codes(upto 13, downto %level+1),_
			AD:Gizmos #codes(upto 3, downto 1),_
			AD:Improved Magic Resistance,_
			AD:Intuition,_
			AD:Language Talent,_
			#list(Extra Languages),_
			AD:Luck #codes(upto 2, downto 1),_
			#newitem(AD:Increase Magery, 10/20, existing(AD:Magery)) #codes(upto 6, downto %level+1),_
			AD:Mind Shield,_
			AD:Signature Gear,_
			AD:Spirit Empathy,_
			AD:Wild Magic #codes(upto 1, downto 1)_
		)_
	),_
	select2(_
		text("Please select -15 points from the following disadvantages."),_
		tagwith(Wizard(yes)),_
		pointswanted(-15),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Curious,_
			DI:Frightens Animals,_
			DI:Obsession (Become the world's most powerful wizard),_
			DI:Obsession (Become a lich),_
			DI:Pyromania,_
			DI:Skinny,_
			DI:Social Stigma (Excommunicated),_
			DI:Unfit,_
			DI:Very Unfit,_
			DI:Unnatural Features #codes(upto 5, downto 1),_
			DI:Weirdness Magnet_
		)_
	),_
	select3(_
		text("Please select -20 points from the following disadvantages."),_
		tagwith(Wizard(yes)),_
		pointswanted(-20),_
		itemswanted(atleast 1),_
		list(_
			#list(GMDisadvantages),_
			DI:Curious,_
			DI:Frightens Animals,_
			DI:Obsession (Become the world's most powerful wizard),_
			DI:Obsession (Become a lich),_
			DI:Pyromania,_
			DI:Skinny,_
			DI:Social Stigma (Excommunicated),_
			DI:Unfit,_
			DI:Very Unfit,_
			DI:Unnatural Features #codes(upto 5, downto 1),_
			DI:Weirdness Magnet,_
			DI:Absent-Mindedness,_
			DI:Bad Temper,_
			DI:Clueless,_
			DI:Combat Paralysis,_
			DI:Cowardice,_
			DI:Hard of Hearing,_
			DI:Klutz,_
			DI:Total Klutz,_
			DI:Loner,_
			DI:Low Pain Threshold,_
			DI:Nervous Stomach,_
			DI:Oblivious,_
			DI:Overconfidence,_
			DI:Post-Combat Shakes,_
			DI:Sense of Duty (Adventuring Companions),_
			DI:Stubbornness_
		)_
	),_
	select4(_
		text("Select one of these ranged combat skills."),_
		tagwith(Wizard(yes)),_
		pointswanted(4),_
		itemswanted(1),_
		list(_
			SK:Innate Attack (Beam) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Breath) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Gaze) #codes(upto 4pts, downto 4pts),_
			SK:Innate Attack (Projectile) #codes(upto 4pts, downto 4pts),_
			SK:Sling #codes(upto 4pts, downto 4pts),_
			SK:Throwing #codes(upto 4pts, downto 4pts),_
			SK:Thrown Weapon (Dart) #codes(upto 4pts, downto 4pts)_
		)_
	),_
	select5(_
		text("Please select a Hidden Lore skill."),_
		tagwith(Wizard(yes)),_
		pointswanted(2),_
		itemswanted(1),_
		list(_
			SK:Hidden Lore (Demons) #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Magic Items) #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Magical Writings) #codes(upto 2pts, downto 2pts),_
			SK:Hidden Lore (Spirits) #codes(upto 2pts, downto 2pts)_
		)_
	),_
	select6(_
		text("Please select nine of these skills."),_
		tagwith(Wizard(yes)),_
		pointswanted(9),_
		itemswanted(9),_
		list(_
			#buildlist(list(#list(GMBackgroundSkills)), template(%ListItem% #codes(upto 1pts))),_
			SK:Body Sense #codes(upto 1pts),_
			SK:Cartography #codes(upto 1pts),_
			SK:Climbing #codes(upto 1pts),_
			SK:Diplomacy #codes(upto 1pts),_
			SK:Fast-Draw (Potion) #codes(upto 1pts),_
			SK:Fast-Draw (Scroll) #codes(upto 1pts),_
			SK:First Aid #codes(upto 1pts),_
			SK:Gesture #codes(upto 1pts),_
			SK:Hidden Lore (Demons) #codes(upto 1pts),_
			SK:Hidden Lore (Magic Items) #codes(upto 1pts),_
			SK:Hidden Lore (Magical Writings) #codes(upto 1pts),_
			SK:Hidden Lore (Spirits) #codes(upto 1pts)_
			SK:Hiking #codes(upto 1pts),_
			SK:Physiology #codes(upto 1pts),_
			SK:Savoir-Faire #codes(upto 1pts),_
			SK:Scrounging #codes(upto 1pts),_
			SK:Stealth #codes(upto 1pts),_
			SK:Strategy #codes(upto 1pts)_
		)_
	),_
	select7(#List(QuirkSelection))

//
// RACES
//
<Player Character Races>

Cat-Folk, displaycost(40), cost(0),_
	race(Cat-Folk),_
	cat(Racial Templates),_
	description(Cat-folk are the most common of the so-called beast-men.),_
	page(DFRPG:A43),_
	noresync(yes),_
	adds(_
		AD:Catfall,_
		AD:Combat Reflexes,_
		AD:Night Vision=5,_
		AD:Sharp Claws,_
		AD:Sharp Teeth,_
		AD:Striking ST=2,_
		AD:Temperature Tolerance (Cold)=1,_
		DI:Impulsiveness,_
		DI:Laziness_
	),_
	creates(_
		"DI:Cat-Folk ST-1, -10, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), race(Cat-Folk)",_
		"AD:Cat-Folk DX+1, 20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:DX), race(Cat-Folk)",_
		"AD:Cat-Folk Per+1, 5, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:Perception), race(Cat-Folk)",_
		"DI:Phobia (Entering Water), -5, cat(Mundane, Mental, Mundane Mental), mods(Self-Control), page(DFRPG:A64)" _
			with "You resist on a roll of 15 or less (almost all the time), *0.5, shortname(15), group(Self-Control), page(DFRPG:A55)"_
	),_
	features("Tail (not prehensile, and easily tucked into armor)")

Dwarf, displaycost(20), cost(0),_
	race(Dwarf),_
	cat(Racial Templates),_
	description(Dwarves are essentially hardy-but-stumpy humans who see well in the dark and like caves and gold.),_
	page(DFRPG:A43),_
	noresync(yes),_
	adds(_
		AD:Dwarven Gear,_
		AD:Lifting ST=2,_
		AD:Night Vision=5,_
		AD:Pickaxe Penchant,_
		AD:Resistant to Poison=6,_
		AD:Tough Skin,_
		DI:Greed,_
		DI:Stubbornness_
	),_
	creates(_
		"AD:Dwarf HT+1, 10, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:HT), race(Dwarf)",_
		"AD:Dwarf FP+3, 9, cat(Exotic Physical, Exotic, Physical), gives(+3 to ST:Fatigue Points), race(Dwarf)",_
		"DI:Dwarf Basic Move-1, -5, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:Basic Move), race(Dwarf)"_
	),_
	features("Armor isn't interchangeable with human armor")

Elf, displaycost(20), cost(0),_
	race(Elf),_
	cat(Racial Templates),_
	description(Elves have pointy ears, stand some two inches taller than humans of similar weight, and boast remarkable eye and hair colors.),_
	page(DFRPG:A44),_
	noresync(yes),_
	adds(_
		AD:Appearance,_
		AD:Elven Gear,_
		AD:Forest Guardian=2,_
		AD:Magery 0,_
		DI:Sense of Duty (Nature)_
	),_
	creates(_
		"DI:Elf ST-1, -10, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:ST), race(Elf)",_
		"AD:Elf DX+1, 20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:DX), race(Elf)",_
		"AD:Elf Basic Move+1, 5, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:Basic Move), race(Elf)"_
	),_
	features("Green hair")

Half-Elf, displaycost(20), cost(0),_
	race(Half-Elf),_
	cat(Racial Templates),_
	description(Half-elves are the most common variety of "elves" ordinary folk encounter (which speaks volumes about the virtue of elves . . .).),_
	page(DFRPG:A44),_
	noresync(yes),_
	adds(_
		AD:Magery 0,_
		DI:Social Stigma (Half-Breed)_
	),_
	creates(_
		"AD:Half-Elf DX+1, 20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:DX), race(Half-Elf)"_
	),_
	features("Any hair color but a reasonable human one")

Gnome, displaycost(20), cost(0),_
	race(Gnome),_
	cat(Racial Templates),_
	description(Gnomes are diminutive craftsmen who are equally at home in rolling hill country and underground.),_
	page(DFRPG:A44),_
	noresync(yes),_
	adds(_
		AD:Honest Face,_
		AD:Night Vision=5,_
		AD:Resistant to Poison=5,_
		AD:Widget WOrker=2,_
		DI:Curious_
	),_
	creates(_
		"AD:Gnome FP+3, 9, cat(Exotic Physical, Exotic, Physical), gives(+3 to ST:Fatigue Points), race(Gnome)",_
		"DI:Gnome Basic Move-1, -5, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:Basic Move), race(Gnome)"_
	),_
	sets(ST:Size Modifier = -1),_
	features("Armor interchangeable only with that of SM -1 races")

Half-Ogre, displaycost(20), cost(0),_
	race(Half-Ogre),_
	cat(Racial Templates),_
	description(Ogres are huge, hideous humanoids. Sometimes (don't ask) one interbreeds with an orc or human.),_
	page(DFRPG:A44),_
	noresync(yes),_
	adds(_
		AD:Fearlessness,_
		AD:Night Vision=3,_
		AD:Tough Skin,_
		DI:Appearance=2,_
		DI:Social Stigma (Savage)_
	),_
	creates(_
		"AD:Half-Ogre ST+4, 40, cat(Exotic Physical, Exotic, Physical), gives(+4 to ST:ST), race(Half-Ogre)",_
		"DI:Half-Ogre IQ-1, -20, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:IQ), race(Half-Ogre)",_
		"AD:Half-Ogre HT+1, 10, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:HT), race(Half-Ogre)"_
	)

Half-Orc, displaycost(20), cost(0),_
	race(Half-Orc),_
	cat(Racial Templates),_
	description(Goblin-kin are a huge category of ugly, borderline-civilized brutes who discriminate among themselves on the basis of size and purity of blood: Orcs are the medium-sized, not-too-stupid ones that bully the others.),_
	page(DFRPG:A45),_
	noresync(yes),_
	adds(_
		AD:Acute Hearing,_
		AD:Night Vision=5,_
		AD:Rapid Healing,_
		AD:Resistant to Disease=5,_
		AD:Resistant to Poison=5,_
		DI:Appearance,_
		DI:Social Stigma (Savage)_
	),_
	creates(_
		"AD:Half-Orc HT+1, 10, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:HT), race(Half-Orc)",_
		"AD:Half-Orc HP+1, 2, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:Hit Points), race(Half-Orc)"_
	)

Halfling, displaycost(0), cost(0),_
	race(Halfling),_
	cat(Racial Templates),_
	description(Halflings are half human height, whence the name. They enjoy food, stealing, drink, sneaking, tobacco, and shooting things.),_
	page(DFRPG:A45),_
	noresync(yes),_
	adds(_
		AD:Halfling Marksmanship=2,_
		AD:Honest Face,_
		AD:Silence=2,_
		DI:Gluttony,_
		DI:Kleptomania_
	),_
	creates(_
		"DI:Halfling ST-3, -30, cat(Exotic Physical, Exotic, Physical), gives(-3 to ST:ST), race(Halfling)",_
		"AD:Halfling DX+1, 20, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:DX), race(Halfling)",_
		"AD:Halfling HT+1, 10, cat(Exotic Physical, Exotic, Physical), gives(+1 to ST:HT), race(Halfling)",_
		"AD:Halfling HP+2, 4, cat(Exotic Physical, Exotic, Physical), gives(+2 to ST:Hit Points), race(Halfling)",_
		"DI:Halfling Basic Move-1, -5, cat(Exotic Physical, Exotic, Physical), gives(-1 to ST:Basic Move), race(Halfling)"_
	),
	sets(ST:Size Modifier = -2),_
	features("Hairy feet", "Armor interchangeable only with that of SM -2 races")


	
********************************************************************************************************\[STOP]



[GROUPS]
*******************************************************************************************************\[START]

<dull senses>
SP:Dull Hearing
SP:Dull Taste and Smell
SP:Dull Touch
SP:Dull Vision

<keen senses>
SP:Keen Hearing
SP:Keen Taste and Smell
SP:Keen Touch
SP:Keen Vision

<seek spells>
SP:Seek Earth
SP:Seek Fire
SP:Seek Food
SP:Seek Gate
SP:Seek Magic
SP:Seek Plant
SP:Seek Water

********************************************************************************************************\[STOP]

[SPELLS]
*******************************************************************************************************\[START]

// 
//		Using ident() and countasneed() we can prevent spells for other realms of magic from being counted
// 	as prereqs for whatever realm the current spell belongs to.
//		Likewise, I have marked Power Investiture and Power Investiture (Druidic) with countasneed(Clerical)
//	and countasneed(Druidic), respectively, to ensure that the neither version will ever be counted as a 
//	valid need for the other.
//		I have standardized the spells for the realms of Wizardly, Clerical, and Druidic, so there are no
//	more idents() of any other types, and the standard spell is ident(Wizardly).
//	
//		Now, my philosophy on the various colleges and name extensions assigned to things.
//			1) 	I want all the base colleges, such as Air and Body Control, to list all spells for
//				all realms, just like it's done in the book.
//			2)	Given this, I have added ~Wizardly versions of the colleges, along with the ~Clerical and 
//				~Druidic, so that the user can find realm specific versions of their spells.
//			3)	All spells without name extensions continue to be the normal Wizardly versions.
//			4)	All Clerical and Druidic spells will have that name extension.
// 		Most of this is like it was, but some is expanded and/or codified a bit more.
// 


<Air:Ai>
<Body Control:B>
<Communication & Empathy:C>
<Earth:Ea>
<Fire:Fi>
<Food:Fo>
<Gate:G>
<Healing:H>
<Illusion:I>
<Knowledge:K>
<Light & Darkness:L>
<Making & Breaking:Ma>
<Meta-Spells:Me>
<Mind Control:Mi>
<Movement:Mo>
<Necromantic:N>
<Plant:Pl>
<Protection & Warning:Pr>
<Sound:S>
<Water:Wa>
<Weather:We>

<~Wizardly>
<~Wizardly - Air:Ai>
<~Wizardly - Body Control:B>
<~Wizardly - Communication & Empathy:C>
<~Wizardly - Earth:Ea>
<~Wizardly - Fire:Fi>
<~Wizardly - Food:Fo>
<~Wizardly - Gate:G>
<~Wizardly - Healing:H>
<~Wizardly - Illusion:I>
<~Wizardly - Knowledge:K>
<~Wizardly - Light & Darkness:L>
<~Wizardly - Making & Breaking:Ma>
<~Wizardly - Meta-Spells:Me>
<~Wizardly - Mind Control:Mi>
<~Wizardly - Movement:Mo>
<~Wizardly - Necromantic:N>
<~Wizardly - Plant:Pl>
<~Wizardly - Protection & Warning:Pr>
<~Wizardly - Sound:S>
<~Wizardly - Water:Wa>
<~Wizardly - Weather:We>


<~Clerical>
<~Clerical - Air:Ai>
<~Clerical - Body Control:B>
<~Clerical - Communication & Empathy:C>
<~Clerical - Earth:Ea>
<~Clerical - Fire:Fi>
<~Clerical - Food:Fo>
<~Clerical - Gate:G>
<~Clerical - Healing:H>
<~Clerical - Illusion:I>
<~Clerical - Knowledge:K>
<~Clerical - Light & Darkness:L>
<~Clerical - Making & Breaking:Ma>
<~Clerical - Meta-Spells:Me>
<~Clerical - Mind Control:Mi>
<~Clerical - Movement:Mo>
<~Clerical - Necromantic:N>
<~Clerical - Plant:Pl>
<~Clerical - Protection & Warning:Pr>
<~Clerical - Sound:S>
<~Clerical - Water:Wa>
<~Clerical - Weather:We>

<~Clerical PI 1>
<~Clerical PI 2>
<~Clerical PI 3>
<~Clerical PI 4>
<~Clerical PI 5>
<~Clerical PI 6>


<~Druidic>
<~Druidic - Air:Ai>
<~Druidic - Animal:An>
<~Druidic - Body Control:B>
<~Druidic - Communication & Empathy:C>
<~Druidic - Earth:Ea>
<~Druidic - Fire:Fi>
<~Druidic - Food:Fo>
<~Druidic - Gate:G>
<~Druidic - Healing:H>
<~Druidic - Illusion:I>
<~Druidic - Knowledge:K>
<~Druidic - Light & Darkness:L>
<~Druidic - Making & Breaking:Ma>
<~Druidic - Meta-Spells:Me>
<~Druidic - Mind Control:Mi>
<~Druidic - Movement:Mo>
<~Druidic - Necromantic:N>
<~Druidic - Plant:Pl>
<~Druidic - Protection & Warning:Pr>
<~Druidic - Sound:S>
<~Druidic - Water:Wa>
<~Druidic - Weather:We>

<~Druidic PI 1>
<~Druidic PI 2>
<~Druidic PI 3>
<~Druidic PI 4>
<~Druidic PI 5>
<~Druidic PI 6>


// ***** *****
// Air Spells
// ***** *****

<Air:Ai>

Air Jet,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S15),
	shortcat(Ai),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 sec.),
	castingcost(1 to 3/S),
	prereqcount(3),
	magery(0),
	needs(Shape Air),
	damage(~2d),
	damtype(knock),
	skillused(ST:DX-4, SK:Innate Attack (Beam), SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Breath)-2),
	parry(No),
	reach(~2),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 3 Prerequisites: Shape Air)
// Breathe Water is in Water Spells
Concussion,
	cat(Air, Sound, ~Wizardly, ~Wizardly - Air, , ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S15),
	shortcat(Ai, S),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(2 to 2xMagery#),
	prereqcount(5),
	magery(0),
	needs(Shape Air, Thunderclap),
	damage(~1d),
	damtype(cr),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(20),
	rangemax(40),
	acc(1),
	notes(~2-6en),
	itemnotes({~2-6 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 5 Prerequisites: Shape Air, Thunderclap)
Create Air,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S16),
	shortcat(Ai),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(5 sec.#),
	castingcost(1),
	prereqcount(1),
	magery(0),
	needs(Purify Air),
	description(Prereq Count: 1 Prerequisites: Purify Air)
Destroy Air,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S16),
	shortcat(Ai),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(2),
	magery(0),
	needs(Create Air),description(Prereq Count: 2 Prerequisites: Create Air)
Earth to Air,
	cat(Air, Earth, ~Wizardly, ~Wizardly - Air, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S16),
	shortcat(Ai, Ea),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(Perm.),
	castingcost(5/cu. yd.#),
	prereqcount(4),
	magery(0),
	needs(Create Air, Shape Earth),
	description(Prereq Count: 4 Prerequisites: Create Air, Shape Earth)
No-Smell,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S16),
	shortcat(Ai),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 hr.),
	castingcost(2/2),
	prereqcount(1),
	magery(0),
	needs(Purify Air),
	description(Prereq Count: 1 Prerequisites: Purify Air)
Purify Air,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S16),
	shortcat(Ai),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Sandstorm,
	cat(Air, Earth, ~Wizardly, ~Wizardly - Air, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S16),
	shortcat(Ai, Ea),
	mods(Spells),
	class(Area),
	time(Instant#),
	duration(1 minute#),
	castingcost(3/H),
	prereqcount(8),
	magery(1),
	needs(Windstorm, Create Earth),
	description(Prereq Count: 8 Prerequisites: Magery 1, Windstorm, Create Earth)
Shape Air,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S17),
	shortcat(Ai),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 to 10#),
	prereqcount(2),
	magery(0),
	needs(Create Air),description(Prereq Count: 2 Prerequisites: Create Air)
Stench,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S17),
	shortcat(Ai),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(5 min.),
	castingcost(1),
	prereqcount(1),
	magery(0),
	needs(Purify Air),description(Prereq Count: 1 Prerequisites: Purify Air)
Walk on Air,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S17),
	shortcat(Ai),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(3),
	magery(0),
	needs(Shape Air),
	description(Prereq Count: 3 Prerequisites: Shape Air)
Windstorm,
	cat(Air, ~Wizardly, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S17),
	shortcat(Ai),
	mods(Spells),
	class(Area),
	time(Instant#),
	duration(1 min.#),
	castingcost(2/H),
	prereqcount(3),
	magery(0),
	needs(Shape Air),description(Prereq Count: 3 Prerequisites: Shape Air)

// Clerical Versions

#Clone "SP:Purify Air"  as "SP:Purify Air (Clerical)"
#ReplaceTags in "SP:Purify Air (Clerical)" with _
	"cat(Air, ~Clerical, ~Clerical PI 1, ~Clerical - Air), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"

// Druidic Versions

#Clone "SP:No-Smell"  as "SP:No-Smell (Druidic)"
#ReplaceTags in "SP:No-Smell (Druidic)" with _
	"cat(Air, ~Druidic, ~Druidic PI 1, ~Druidic - Air), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: ower Investiture (Druidic) 1)"
#Clone "SP:Purify Air"  as "SP:Purify Air (Druidic)"
#ReplaceTags in "SP:Purify Air (Druidic)" with _
	"cat(Air, ~Druidic, ~Druidic PI 1, ~Druidic - Air), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Sandstorm"  as "SP:Sandstorm (Druidic)"
#ReplaceTags in "SP:Sandstorm (Druidic)" with _
	"cat(Air, Earth, ~Druidic, ~Druidic PI 4, ~Druidic - Air, ~Druidic - Earth), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Shape Air"  as "SP:Shape Air (Druidic)"
#ReplaceTags in "SP:Shape Air (Druidic)" with _
	"cat(Air, ~Druidic, ~Druidic PI 2, ~Druidic - Air), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Windstorm"  as "SP:Windstorm (Druidic)"
#ReplaceTags in "SP:Windstorm (Druidic)" with _
	"cat(Air, ~Druidic, ~Druidic PI 2, ~Druidic - Air), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
	

// ***** *****
// Animal Spells
// ***** *****

<Animal:An>

// All are Druid versions

Vermin Control (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S17),
	shortcat(An),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Fish Control (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S17),
	shortcat(An),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Reptile Control (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S17),
	shortcat(An),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Bird Control (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S17),
	shortcat(An),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Mammal Control (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S17),
	shortcat(An),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Beast Link (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S18),
	shortcat(An),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(Special),
	castingcost(3),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Beast Possession (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 4, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S18),
	shortcat(An),
	mods(Spells),
	class(Regular/R-Will),
	time(5 sec.),
	duration(1 min.),
	castingcost(6/2),
	magery(PI 4),
	needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4)
Beast-Rouser (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 1, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S18),
	shortcat(An),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 hour#),
	castingcost(1 to 3),
	magery(PI 1),
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1)
Beast Seeker (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S18),
	shortcat(An),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(3#),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Beast-Soother (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 1, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S18),
	shortcat(An),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.#),
	castingcost(1 to 3),
	magery(PI 1),
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1)
Beast Speech (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S18),
	shortcat(An),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Beast Summoning (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 3, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S18),
	shortcat(An),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2#),
	magery(PI 3),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3)
Create Animal (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 4, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Regular),
	time(sec.=cost),
	duration(1 min.),
	castingcost(Varies),
	magery(PI 4),
	needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4)
Hybrid Control (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 3, ~Druidic - Animal),
	type(IQ/VH),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(6/3),
	magery(PI 3),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3)
Master (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 1, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Reg./Block./R-IQ),
	time(1 sec.),
	duration(Indef.),
	castingcost(2),
	magery(PI 1),
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1)
Protect Animal (Druidic),
	cat(Animal, Protection & Warning, ~Druidic, ~Druidic PI 3, ~Druidic - Animal, ~Druidic - Protection & Warning)
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An, Pr),
	mods(Spells),
	class(Area),
	time(1 min.),
	duration(1 min.),
	castingcost(1/S),
	magery(PI 3),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3)
Repel Vermin (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Area/R-HT),
	time(10 sec.),
	duration(1 hour),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Repel Fish (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Area/R-HT),
	time(10 sec.),
	duration(1 hour),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Repel Reptiles (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Area/R-HT),
	time(10 sec.),
	duration(1 hour),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Repel Birds (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Area/R-HT),
	time(10 sec.),
	duration(1 hour),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Repel Mammals (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Area/R-HT),
	time(10 sec.),
	duration(1 hour),
	castingcost(Varies),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Repel Hybrids (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 3, ~Druidic - Animal),
	type(IQ/VH),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Area/R-HT),
	time(10 sec.),
	duration(1 hour),
	castingcost(6/3),
	magery(PI 3),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3)
Rider (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S19),
	shortcat(An),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(5 min.),
	castingcost(2/1),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)
Rider Within (Druidic),
	cat(Animal, ~Druidic, ~Druidic PI 2, ~Druidic - Animal),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S20),
	shortcat(An),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(4/1),
	magery(PI 2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2)


// ***** *****
// Body Control Spells
// ***** *****

<Body Control:B>

Agonize,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S20),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(1 min.),
	castingcost(8/6),
	prereqcount(5),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Body Control = 2) , Sensitize),
	description(Prereq Count: 5 Prerequisites: Magery 2, Sensitize)
Ambidexterity,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S20),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(4),
	magery(0),
	needs(Grace),
	description(Prereq Count: 4 Prerequisites: Grace)
Balance,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S20),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(5/3),
	prereqcount(4),
	magery(0),
	needs(Grace),
	description(Prereq Count: 4 Prerequisites: Grace)
Climbing,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S20),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 to 3/S),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Clumsiness,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S20),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 to 5/H),
	prereqcount(2),
	magery(0),
	needs(Spasm),
	description(Prereq Count: 2 Prerequisites: Spasm)
Deathtouch,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S20),
	shortcat(B),
	mods(Spells),
	class(Melee),
	time(1 sec.),
	duration(Instant),
	castingcost(1 to 3),
	prereqcount(7),
	magery(2),
	needs(Wither Limb),
	mode(touch|staff),
	damage(~1d),
	damtype(spcl),
	skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate, SK:Judo, SK:Sumo Wrestling, SK:Wrestling|SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2),
	parry(No),
	reach(C),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 7 Prerequisites: Magery 2, Wither Limb)
Debility,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S20),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 per ST-/H),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Frailty,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(1 min.),
	castingcost(2 per HT-/S#),
	prereqcount(1),
	magery(1),
	needs(Lend Energy),
	description(Prereq Count: 1 Prerequisites: Magery 1, Lend Energy)
Grace,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4 per DX+/S),
	prereqcount(3),
	magery(0),
	needs(Clumsiness),
	description(Prereq Count: 3 Prerequisites: Clumsiness)
Hinder,
	cat(Body Control, Movement, ~Wizardly, ~Wizardly - Body Control, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B, Mo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 to 4/S),
	prereqcount(1),
	magery(0),
	needs((Haste | Clumsiness)),
	description(Prereq Count: 1 Prerequisites: Haste or Clumsiness)
Hold Breath,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(3),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Body Control = 1) , Vigor),
	description(Prereq Count: 3 Prerequisites: Magery 1, Vigor)
Itch,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(Scratch#),
	castingcost(2),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Might,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2 per ST+/S),
	prereqcount(1),
	magery(1),
	needs(Lend Energy),
	description(Prereq Count: 1 Prerequisites: Magery 1, Lend Energy)
Nauseate,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(10 sec.),
	castingcost(2/S),
	prereqcount(5),
	magery(0),
	needs(5 CO:Body Control),
	description(Prereq Count: 5 Prerequisites: 5 Body Control)
Pain,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(2 sec.),
	duration(1 sec.),
	castingcost(2),
	prereqcount(2),
	magery(0),
	needs(Spasm),
	description(Prereq Count: 2 Prerequisites: Spasm)
Paralyze Limb,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S21),
	shortcat(B),
	mods(Spells),
	class(Melee/R-HT),
	time(1 sec.),
	duration(1 min.),
	castingcost(3),
	prereqcount(5),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Body Control = 1) , 5 CO:Body Control, Clumsiness),
	description(Prereq Count: 5 Prerequisites: Magery 1, 5 Body Control, Clumsiness)
Reflexes,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(5/3),
	prereqcount(5),
	magery(0),
	needs(Grace, Haste),
	description(Prereq Count: 5 Prerequisites: Grace, Haste)
Resist Pain,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(3),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Body Control = 2) , Pain),
	description(Prereq Count: 3 Prerequisites: Magery 2, Pain)
Retch,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(4 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(7),
	magery(0),
	needs(Nauseate, Spasm),
	description(Prereq Count: 7 Prerequisites: Nauseate, Spasm)
Rooted Feet,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular/R-ST),
	time(1 sec.),
	duration(1 min.#),
	castingcost(3),
	prereqcount(2),
	magery(0),
	needs(Hinder),
	description(Prereq Count: 2 Prerequisites: Hinder)
Roundabout,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(4),
	magery(0),
	needs(Tanglefoot),
	description(Prereq Count: 4 Prerequisites: Tanglefoot)
Sensitize,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(4),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Body Control = 1), Stun),
	description(Prereq Count: 4 Prerequisites: Magery 1, Stun)
// Sickness is in Mind Control Spells
Spasm,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(1),
	magery(0),
	needs(Itch),
	description(Prereq Count: 1 Prerequisites: Itch)
Strike Blind,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(10 sec.),
	castingcost(4/2),
	prereqcount(4),
	magery(0),
	needs(Spasm, 2 CO:Light & Darkness),
	description(Prereq Count: 4 Prerequisites: Spasm, 2 Light & Darkness)
Strike Deaf,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S22),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(10 sec.),
	castingcost(3/1),
	prereqcount(4),
	magery(0),
	needs(Spasm, 2 CO:Sound),
	description(Prereq Count: 4 Prerequisites: Spasm, 2 Sound)
Strike Dumb,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S23),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(10 sec.),
	castingcost(3/1),
	prereqcount(2),
	magery(0),
	needs(Spasm),
	description(Prereq Count: 2 Prerequisites: Spasm)
Stun,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S23),
	shortcat(B),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(3),
	magery(0),
	needs(Pain),
	description(Prereq Count: 3 Prerequisites: Pain)
Tanglefoot,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S23),
	shortcat(B),
	mods(Spells),
	class(Regular/R-DX),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(3),
	magery(0),
	needs(Clumsiness),
	description(Prereq Count: 3 Prerequisites: Clumsiness)
Tickle,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S23),
	shortcat(B),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(5/5),
	prereqcount(2),
	magery(0),
	needs(Spasm),
	description(Prereq Count: 2 Prerequisites: Spasm)
Total Paralysis,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S23),
	shortcat(B),
	mods(Spells),
	class(Melee/R-HT),
	time(1 sec.),
	duration(1 min.),
	castingcost(5),
	prereqcount(6),
	magery(1),
	needs(Paralyze Limb),
	description(Prereq Count: 6 Prerequisites: Magery 1, Paralyze Limb)
Vigor,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S23),
	shortcat(B),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2 per HT+/S#),
	prereqcount(2),
	magery(1),
	needs(Frailty | Might),
	description(Prereq Count: 2 Prerequisites: Frailty or Might)
Wither Limb,
	cat(Body Control, ~Wizardly, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S23),
	shortcat(B),
	mods(Spells),
	class(Melee/R-HT),
	time(1 sec.),
	duration(Perm.),
	castingcost(5),
	prereqcount(6),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Body Control = 2), Paralyze Limb),
	description(Prereq Count: 6 Prerequisites: Magery 2, Paralyze Limb)

// Clerical Versions

#Clone "SP:Might"  as "SP:Might (Clerical)"
#ReplaceTags in "SP:Might (Clerical)" with _
	"cat(Body Control, ~Clerical, ~Clerical PI 1, ~Clerical - Body Control), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Resist Pain"  as "SP:Resist Pain (Clerical)"
#ReplaceTags in "SP:Resist Pain (Clerical)" with _
	"cat(Body Control, ~Clerical, ~Clerical PI 2, ~Clerical - Body Control), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
// Stop Paralysis is in Healing Spells
// Stop Spasm is in Healing Spells
#Clone "SP:Vigor"  as "SP:Vigor (Clerical)"
#ReplaceTags in "SP:Vigor (Clerical)" with _
	"cat(Body Control, ~Clerical, ~Clerical PI 1, ~Clerical - Body Control), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"

	
// ***** *****
// Communication & Empathy Spells
// ***** *****

<Communication & Empathy:C>

Borrow Language,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S24),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(3/1),
	prereqcount(4),
	magery(0),
	needs(Lend Language),
	description(Prereq Count: 4 Prerequisites: Lend Language)
Borrow Skill,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S24),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(4/3),
	prereqcount(6),
	magery(0),
	needs(Lend Skill),
	description(Prereq Count: 6 Prerequisites: Lend Skill)
Compel Truth,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S24),
	shortcat(C),
	mods(Spells),
	class(Inform./R-Will),
	time(1 sec.),
	duration(5 min.),
	castingcost(4/2),
	prereqcount(3),
	magery(2),
	needs( ( (AD:Magery = 2 | AD:Bardic Talent = 2), ST:Magery = 2 | ST:Magery Communication & Empathy = 2) , Truthsayer ),
	description(Prereq Count: 3 Prerequisites: Magery 2, Truthsayer)
Control Person,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S24),
	shortcat(C),
	mods(Spells),
	class(Regular/R-Will),
	time(10 sec.),
	duration(1 min.),
	castingcost(6/3),
	prereqcount(5),
	magery(0),
	needs((Soul Rider | Telepathy)),
	description(Prereq Count: 5 Prerequisites: Soul Rider or Telepathy)
Gift of Letters,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S24),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(5),
	magery(0),
	needs(Borrow Language, 3 CA:Language Written),
	description(Prereq Count: 5 Prerequisites: Borrow Language, 3 Written Languages)
Gift of Tongues,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S24),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(5),
	magery(0),
	needs(Borrow Language, 3 CA:Language Spoken),
	description(Prereq Count: 5 Prerequisites: Borrow Language, 3 Spoken Languages)
Hide Emotion,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S24),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 hour),
	castingcost(2/2),
	prereqcount(2),
	magery(0),
	needs(Sense Emotion),
	description(Prereq Count: 2 Prerequisites: Sense Emotion)
Hide Thoughts,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S25),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(10 min.),
	castingcost(3/1),
	prereqcount(3),
	magery(0),
	needs((Truthsayer | Hide Emotion)),
	description(Prereq Count: 3 Prerequisites: Truthsayer or Hide Emotion)
Lend Language,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S25),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(3/1),
	prereqcount(3),
	magery(0),
	needs(3 CO:Communication & Empathy),
	description(Prereq Count: 3 Prerequisites: 3 Communication & Empathy)
Lend Skill,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S25),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(5),
	magery(0),
	needs(Mind-Sending, ST:IQ >= 11),
	description(Prereq Count: 5 Prerequisites: Mind-Sending, IQ 11+)
// Message is in Sound Spells
Mind-Reading,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S25),
	shortcat(C),
	mods(Spells),
	class(Regular/R-Will),
	time(10 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(3),
	magery(0),
	needs((Truthsayer | Borrow Language)),
	description(Prereq Count: 3 Prerequisites: Truthsayer or Borrow Language)
Mind-Search,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S25),
	shortcat(C),
	mods(Spells),
	class(Regular/R-Will),
	time(1 min.),
	duration(1 min.),
	castingcost(6/3),
	prereqcount(4),
	magery(0),
	needs(Mind-Reading),
	description(Prereq Count: 4 Prerequisites: Mind-Reading)
Mind-Sending,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S25),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(4 sec.),
	duration(1 min.),
	castingcost(4/4),
	prereqcount(4),
	magery(0),
	needs(Mind-Reading),
	description(Prereq Count: 4 Prerequisites: Mind-Reading)
Persuasion,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S25),
	shortcat(C),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(2xbonus#),
	prereqcount(2),
	magery(0),
	needs(Sense Emotion),
	description(Prereq Count: 2 Prerequisites: Sense Emotion)
Possession,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S25),
	shortcat(C),
	mods(Spells),
	class(Regular/R-Will),
	time(1 min.),
	duration(1 min.),
	castingcost(10/4),
	prereqcount(5),
	magery(1),
	needs( ( (AD:Magery = 1 | AD:Bardic Talent = 1), ST:Magery = 1 | ST:Magery Communication & Empathy = 1 ), Control Person ),
	description(Prereq Count: 5 Prerequisites: Magery 1, and Control Person)
Sense Emotion,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S26),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(1),
	magery(0),
	needs(Sense Foes),
	description(Prereq Count: 1 Prerequisites: Sense Foes)
Sense Evil,
	cat(Communication & Empathy, Meta-Spells, ~Wizardly, ~Wizardly - Communication & Empathy, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S26),
	shortcat(C, Me),
	mods(Spells),
	class(Inform./Area),
	time(1 sec.),
	duration(Instant),
	castingcost(2#),
	prereqcount(1),
	magery(0),
	needs( (AD:Magery = 2 | AD:Bardic Talent = 2), ST:Magery = 2 | ST:Magery Communication & Empathy = 2 | ST:Magery Meta-Spells = 2 ),
	description(Prereq Count: 1 Prerequisites: Magery 2)
Sense Foes,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S26),
	shortcat(C),
	mods(Spells),
	class(Inform./Area),
	time(1 sec.),
	duration(Instant),
	castingcost(2#),
	prereqcount(0),
	magery(0),
	needs( AD:Magery 0 | AD:Bardic Talent ),
	description(Prereq Count: 0 Prerequisites: Magery 0)
Sense Life,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S26),
	shortcat(C),
	mods(Spells),
	class(Inform./Area),
	time(1 sec.),
	duration(Instant),
	castingcost(1#),
	prereqcount(0),
	magery(0),
	needs( AD:Magery 0 | AD:Bardic Talent ),
	description(Prereq Count: 0 Prerequisites: Magery 0)
Soul Rider,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S26),
	shortcat(C),
	mods(Spells),
	class(Regular/R-Will),
	time(3 sec.),
	duration(1 min.),
	castingcost(5/2),
	prereqcount(4),
	magery(0),
	needs(Mind-Reading),
	description(Prereq Count: 4 Prerequisites: Mind-Reading)
Telepathy,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S26),
	shortcat(C),
	mods(Spells),
	class(Regular),
	time(4 sec.),
	duration(1 min.),
	castingcost(4/4#),
	prereqcount(5),
	magery(0),
	needs(Mind-Sending),
	description(Prereq Count: 5 Prerequisites: Mind-Sending)
Truthsayer,
	cat(Communication & Empathy, ~Wizardly, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S26),
	shortcat(C),
	mods(Spells),
	class(Inform./R-Will),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(2),
	magery(0),
	needs(Sense Emotion),
	description(Prereq Count: 2 Prerequisites: Sense Emotion)

// Clerical Versions

#Clone "SP:Compel Truth"  as "SP:Compel Truth (Clerical)"
#ReplaceTags in "SP:Compel Truth (Clerical)" with _
	"cat(Communication & Empathy, ~Clerical, ~Clerical PI 2, ~Clerical - Communication & Empathy), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"

Dispel Possession (Clerical),
	cat(Communication & Empathy, ~Clerical, ~Clerical PI 3, ~Clerical - Communication & Empathy), 
	type(IQ/H),
	CountAsNeed(Clerical), 
	ident(Clerical), 
	page(S24),
	shortcat(C),
	mods(Spells),
	class(Regular/R-spell),
	time(10 sec.),
	duration(Instant),
	castingcost(10),
	magery(PI 3),
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	description(Prereq: Power Investiture 3)

#Clone "SP:Gift of Letters"  as "SP:Gift of Letters (Clerical)"
#ReplaceTags in "SP:Gift of Letters (Clerical)" with _
	"cat(Communication & Empathy, ~Clerical, ~Clerical PI 4, ~Clerical - Communication & Empathy), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)"
#Clone "SP:Gift of Tongues"  as "SP:Gift of Tongues (Clerical)"
#ReplaceTags in "SP:Gift of Tongues (Clerical)" with _
	"cat(Communication & Empathy, ~Clerical, ~Clerical PI 4, ~Clerical - Communication & Empathy), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)"
#Clone "SP:Hide Thoughts"  as "SP:Hide Thoughts (Clerical)"
#ReplaceTags in "SP:Hide Thoughts (Clerical)" with _
	"cat(Communication & Empathy, ~Clerical, ~Clerical PI 2, ~Clerical - Communication & Empathy), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Persuasion"  as "SP:Persuasion (Clerical)"
#ReplaceTags in "SP:Persuasion (Clerical)" with _
	"cat(Communication & Empathy, ~Clerical, ~Clerical PI 2, ~Clerical - Communication & Empathy), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Sense Evil"  as "SP:Sense Evil (Clerical)"
#ReplaceTags in "SP:Sense Evil (Clerical)" with _
	"cat(Communication & Empathy, Meta-Spells, ~Clerical, ~Clerical PI 1, ~Clerical - Communication & Empathy, ~Clerical - Meta-Spells), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Sense Life"  as "SP:Sense Life (Clerical)"
#ReplaceTags in "SP:Sense Life (Clerical)" with _
	"cat(Communication & Empathy, ~Clerical, ~Clerical PI 1, ~Clerical - Communication & Empathy), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Truthsayer"  as "SP:Truthsayer (Clerical)"
#ReplaceTags in "SP:Truthsayer (Clerical)" with _
	"cat(Communication & Empathy, ~Clerical, ~Clerical PI 2, ~Clerical - Communication & Empathy), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"

// Druidic Versions

#Clone "SP:Sense Evil"  as "SP:Sense Evil (Druidic)"
#ReplaceTags in "SP:Sense Evil (Druidic)" with _
	"cat(Communication & Empathy, Meta-Spells, ~Druidic, ~Druidic PI 1, ~Druidic - Communication & Empathy, ~Druidic - Meta-Spells), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Sense Life"  as "SP:Sense Life (Druidic)"
#ReplaceTags in "SP:Sense Life (Druidic)" with _
	"cat(Communication & Empathy, ~Druidic, ~Druidic PI 1, ~Druidic - Communication & Empathy), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"


// ***** *****
// Earth Spells
// ***** *****

<Earth:Ea>

Create Earth,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S27),
	shortcat(Ea),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(2/cu. yd.),
	prereqcount(3),
	magery(1),
	needs(Earth to Stone),
	description(Prereq Count: 3 Prerequisites: Magery 1, Earth to Stone)
// Earth to Air is in Air Spells
Earth to Stone,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S27),
	shortcat(Ea),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(3/cu. yd.#),
	prereqcount(2),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Earth = 1), Shape Earth),
	description(Prereq Count: 2 Prerequisites: Magery 1, Shape Earth)
Earth Vision,
	cat(Earth, Knowledge, ~Wizardly, ~Wizardly - Earth, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S27),
	shortcat(Ea, K),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(30 sec.),
	castingcost(2/10 yds.#),
	prereqcount(2),
	magery(0),
	needs(Shape Earth),
	description(Prereq Count: 2 Prerequisites: Shape Earth)
Entombment,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S27),
	shortcat(Ea),
	mods(Spells),
	class(Regular/R-HT),
	time(3 sec.),
	duration(Perm.),
	castingcost(10#),
	prereqcount(5),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Earth = 2), 5 CO:Earth),
	description(Prereq Count: 5 Prerequisites: Magery 2, 5 Earth)
Flesh to Stone,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S27),
	shortcat(Ea),
	mods(Spells),
	class(Regular/R-HT),
	time(2 sec.),
	duration(Instant),
	castingcost(10#),
	prereqcount(3),
	magery(1),
	needs(Earth to Stone),
	description(Prereq Count: 3 Prerequisites: Magery 1, Earth to Stone)
Purify Earth,
	cat(Earth, Plant, ~Wizardly, ~Wizardly - Earth, ~Wizardly - Plant),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S28),
	shortcat(Ea, Pl),
	mods(Spells),
	class(Area),
	time(30 sec.),
	duration(Perm.),
	castingcost(2#),
	prereqcount(8),
	magery(1),
	needs(6 CO:Earth, Create Earth),
	description(Prereq Count: 8 Prerequisites: 6 Earth, Create Earth)
// Sandstorm is in Air Spells
Seek Earth,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S28),
	shortcat(Ea),
	mods(Spells),
	class(Information),
	time(10 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(0),
	magery(0),
	needs( AD:Magery 0 ),
	description(Prereq Count: 0 Prerequisites: Magery 0)
Shape Earth,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S28),
	shortcat(Ea),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1/cu. yd./h),
	prereqcount(1),
	magery(0),
	needs(Seek Earth),
	description(Prereq Count: 1 Prerequisites: Seek Earth)
Steelwraith,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S28),
	shortcat(Ea),
	mods(Spells),
	class(Regular/R-HT),
	time(2 sec.),
	duration(1 min.),
	castingcost(7/4),
	prereqcount(5),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Earth = 2), Walk Through Earth),
	description(Prereq Count: 5 Prerequisites: Magery 2, Walk Through Earth)
Stone Missile,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S28),
	shortcat(Ea),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(1 to Magery),
	prereqcount(4),
	magery(1),
	needs(Create Earth),
	damage(~1d+1),
	damtype(cr),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(40),
	rangemax(80),
	acc(2),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 4 Prerequisites: Magery 1, Create Earth)
Stone to Earth,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S28),
	shortcat(Ea),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(6/cu. yd.),
	prereqcount(3),
	magery(1),
	needs((Earth to Stone | 4 CO:Earth)),
	description(Prereq Count: 3 Prerequisites: Magery 1, Earth to Stone or 4 Earth)
Stone to Flesh,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S29),
	shortcat(Ea),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(Instant),
	castingcost(10),
	prereqcount(5),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Earth = 2), Flesh to Stone, Stone to Earth),
	description(Prereq Count: 5 Prerequisites: Magery 2, Flesh to Stone, Stone to Earth)
Walk Through Earth,
	cat(Earth, ~Wizardly, ~Wizardly - Earth),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S29),
	shortcat(Ea),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(10 sec.),
	castingcost(3/3#),
	prereqcount(4),
	magery(0),
	needs(4 CO:Earth),
	description(Prereq Count: 4 Prerequisites: 4 Earth)

// Clerical Versions

Earthquake (Clerical),
	cat(Earth, ~Clerical, ~Clerical PI 5, ~Clerical - Earth)
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S27),
	shortcat(Ea),
	mods(Spells),
	class(Area),
	time(30 sec.),
	duration(1 min.),
	castingcost(2/S),
	magery(PI 5),
	needs(AD:Power Investiture=5|ST:Holy PI=5), 
	description(Prereq: Power Investiture 5)
#Clone "SP:Stone to Flesh"  as "SP:Stone to Flesh (Clerical)"
#ReplaceTags in "SP:Stone to Flesh (Clerical)" with _
	"cat(Earth, ~Clerical, ~Clerical PI 3, ~Clerical - Earth), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"

// Druidic Versions

#Clone "SP:Earth Vision"  as "SP:Earth Vision (Druidic)"
#ReplaceTags in "SP:Earth Vision (Druidic)" with _
	"cat(Earth, Knowledge, ~Druidic, ~Druidic PI 3, ~Druidic - Earth, ~Druidic - Knowledge), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Earthquake (Clerical)"  as "SP:Earthquake (Druidic)"
#ReplaceTags in "SP:Earthquake (Druidic)" with _
	"cat(Earth, ~Druidic, ~Druidic PI 6, ~Druidic - Earth), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=6|ST:Druidic PI=6), 
	magery(PI 6), 
	description(Prereq: Power Investiture (Druidic) 6)"
#Clone "SP:Entombment"  as "SP:Entombment (Druidic)"
#ReplaceTags in "SP:Entombment (Druidic)" with _
	"cat(Earth, ~Druidic, ~Druidic PI 5, ~Druidic - Earth), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), 
	magery(PI 5), 
	description(Prereq: Power Investiture (Druidic) 5)"
#Clone "SP:Purify Earth"  as "SP:Purify Earth (Druidic)"
#ReplaceTags in "SP:Purify Earth (Druidic)" with _
	"cat(Earth, ~Druidic, ~Druidic PI 1, ~Druidic - Earth), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Seek Earth"  as "SP:Seek Earth (Druidic)"
#ReplaceTags in "SP:Seek Earth (Druidic)" with _
	"cat(Earth, ~Druidic, ~Druidic PI 1, ~Druidic - Earth), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Shape Earth"  as "SP:Shape Earth (Druidic)"
#ReplaceTags in "SP:Shape Earth (Druidic)" with _
	"cat(Earth, ~Druidic, ~Druidic PI 2, ~Druidic - Earth), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"

	
// ***** *****
// Fire Spells
// ***** *****

<Fire:Fi>

Burning Touch,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S29),
	shortcat(Fi),
	mods(Spells),
	class(Melee),
	time(1 sec.),
	duration(Instant),
	castingcost(1 to 3),
	prereqcount(6),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Fire = 2) , Heat, 6 CO:Fire),
	mode(touch|staff),
	damage(~1d),
	damtype(burn),
	skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate, SK:Judo, SK:Sumo Wrestling, SK:Wrestling|SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2),
	parry(No),
	reach(C),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 6 Prerequisites: Magery 2, Heat, 6 Fire)
Cold,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S29),
	shortcat(Fi),
	mods(Spells),
	class(Regular),
	time(1 min.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(4),
	magery(0),
	needs(Heat),
	description(Prereq Count: 4 Prerequisites: Heat)
Create Fire,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S29),
	shortcat(Fi),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/H),
	prereqcount(1),
	magery(0),
	needs((Ignite Fire | Seek Fire)),
	description(Prereq Count: 1 Prerequisites: Ignite Fire or Seek Fire)
Deflect Energy,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S29),
	shortcat(Fi),
	mods(Spells),
	class(Blocking),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	prereqcount(2),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Fire = 1) , Shape Fire),
	description(Prereq Count: 2 Prerequisites: Magery 1, Shape Fire)
Explosive Fireball,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S29),
	shortcat(Fi),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(2 to 2xMagery#),
	prereqcount(4),
	magery(1),
	needs(Fireball),
	damage(~1d),
	damtype(burn ex),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(25),
	rangemax(50),
	acc(1),
	notes(~2-6en),
	itemnotes({~2-6 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 4 Prerequisites: Magery 1, Fireball)
Extinguish Fire,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S30),
	shortcat(Fi),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(Perm.),
	castingcost(3),
	prereqcount(1),
	magery(0),
	needs(Ignite Fire),
	description(Prereq Count: 1 Prerequisites: Ignite Fire)
Fire Cloud,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S30),
	shortcat(Fi),
	mods(Spells),
	class(Area),
	time(1 to 5 sec.),
	duration(10 sec.),
	castingcost(1 to 5/S),
	prereqcount(7),
	magery(1),
	needs(Shape Air, Fireball),
	description(Prereq Count: 7 Prerequisites: Magery 1, Shape Air, Fireball)
Fireball,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S30),
	shortcat(Fi),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(1 to Magery#),
	prereqcount(3),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Fire = 1), Create Fire, Shape Fire),
	damage(~1d),
	damtype(burn),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(25),
	rangemax(50),
	acc(1),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 3 Prerequisites: Magery 1, Create Fire, Shape Fire)
Fireproof,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S30),
	shortcat(Fi),
	mods(Spells),
	class(Area),
	time(5 min.),
	duration(1 day),
	castingcost(3#),
	prereqcount(2),
	magery(0),
	needs(Extinguish Fire),
	description(Prereq Count: 2 Prerequisites: Extinguish Fire)
Flame Jet,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S30),
	shortcat(Fi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 sec.),
	castingcost(1 to 3/S),
	prereqcount(3),
	magery(0),
	needs(Create Fire, Shape Fire),
	damage(~1d),
	damtype(burn),
	skillused(ST:DX-4, SK:Innate Attack (Beam), SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Breath)-2),
	parry(No),
	reach(~1),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 3 Prerequisites: Create Fire, Shape Fire)
Flaming Missiles,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S30),
	shortcat(Fi),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(4/2#),
	prereqcount(5),
	magery(2),
	needs(Flaming Weapon),
	description(Prereq Count: 5 Prerequisites: Magery 2, Flaming Weapon)
Flaming Weapon,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S31),
	shortcat(Fi),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(4/1),
	prereqcount(4),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Fire = 2), Heat),
	description(Prereq Count: 4 Prerequisites: Magery 2, Heat)
Heat,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S31),
	shortcat(Fi),
	mods(Spells),
	class(Regular),
	time(1 min.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(3),
	magery(0),
	needs(Create Fire, Shape Fire),
	description(Prereq Count: 3 Prerequisites: Create Fire, Shape Fire)
Ignite Fire,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S31),
	shortcat(Fi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 sec.),
	castingcost(1 to 4/S),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Resist Cold,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S31),
	shortcat(Fi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(4),
	magery(0),
	needs(Heat),
	description(Prereq Count: 4 Prerequisites: Heat)
Resist Fire,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S31),
	shortcat(Fi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1#),
	prereqcount(3),
	magery(0),
	needs(Fireproof),
	description(Prereq Count: 3 Prerequisites: Fireproof)
Seek Fire,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S31),
	shortcat(Fi),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Shape Fire,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S31),
	shortcat(Fi),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/H),
	prereqcount(1),
	magery(0),
	needs(Ignite Fire),
	description(Prereq Count: 1 Prerequisites: Ignite Fire)
Smoke,
	cat(Fire, ~Wizardly, ~Wizardly - Fire),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S32),
	shortcat(Fi),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(5 min.#),
	castingcost(1/H),
	prereqcount(3),
	magery(0),
	needs(Shape Fire, Extinguish Fire),
	description(Prereq Count: 3 Prerequisites: Shape Fire, Extinguish Fire)
Warmth,
	cat(Fire, Protection & Warning, ~Wizardly, ~Wizardly - Fire, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S32),
	shortcat(Fi, Pr),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(1 hour),
	castingcost(2/1),
	prereqcount(4),
	magery(0),
	needs(Heat),
	description(Prereq Count: 4 Prerequisites: Heat)


// Clerical Versions

#Clone "SP:Flaming Weapon"  as "SP:Flaming Weapon (Clerical)"
#ReplaceTags in "SP:Flaming Weapon (Clerical)" with _
	"cat(Fire, ~Clerical, ~Clerical PI 3, ~Clerical - Fire), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Resist Cold"  as "SP:Resist Cold (Clerical)"
#ReplaceTags in "SP:Resist Cold (Clerical)" with _
	"cat(Fire, ~Clerical, ~Clerical PI 2, ~Clerical - Fire), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Resist Fire"  as "SP:Resist Fire (Clerical)"
#ReplaceTags in "SP:Resist Fire (Clerical)" with _
	"cat(Fire, ~Clerical, ~Clerical PI 2, ~Clerical - Fire), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Warmth"  as "SP:Warmth (Clerical)"
#ReplaceTags in "SP:Warmth (Clerical)" with _
	"cat(Fire, Protection & Warning, ~Clerical, ~Clerical PI 1, ~Clerical - Fire, ~Clerical - Protection & Warning), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"

// Druidic Versions

#Clone "SP:Extinguish Fire"  as "SP:Extinguish Fire (Druidic)"
#ReplaceTags in "SP:Extinguish Fire (Druidic)" with _
	"cat(Fire, ~Druidic, ~Druidic PI 1, ~Druidic - Fire), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Fireproof"  as "SP:Fireproof (Druidic)"
#ReplaceTags in "SP:Fireproof (Druidic)" with _
	"cat(Fire, ~Druidic, ~Druidic PI 2, ~Druidic - Fire), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Resist Cold"  as "SP:Resist Cold (Druidic)"
#ReplaceTags in "SP:Resist Cold (Druidic)" with _
	"cat(Fire, ~Druidic, ~Druidic PI 3, ~Druidic - Fire), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Warmth"  as "SP:Warmth (Druidic)"
#ReplaceTags in "SP:Warmth (Druidic)" with _
	"cat(Fire, Protection & Warning, ~Druidic, ~Druidic PI 1, ~Druidic - Fire, ~Druidic - Protection & Warning), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"

	
// ***** *****
// Food Spells
// ***** *****

<Food:Fo>

Cook,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S32),
	shortcat(Fo),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(Instant),
	castingcost(1 per meal),
	prereqcount(3),
	magery(0),
	needs(Test Food, Create Fire),
	description(Prereq Count: 3 Prerequisites: Test Food, Create Fire)
Create Food,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S32),
	shortcat(Fo),
	mods(Spells),
	class(Regular),
	time(30 sec.),
	duration(Perm.),
	castingcost(Varies),
	prereqcount(5),
	magery(0),
	needs(Cook, Seek Food),
	description(Prereq Count: 5 Prerequisites: Cook, Seek Food)
Decay,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S32),
	shortcat(Fo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(1/meal),
	prereqcount(1),
	magery(0),
	needs(Test Food),
	description(Prereq Count: 1 Prerequisites: Test Food)
Essential Food,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S32),
	shortcat(Fo),
	mods(Spells),
	class(Regular),
	time(30 sec.),
	duration(Perm.),
	castingcost(3/meal#),
	prereqcount(8),
	magery(0),
	needs(6 CO:Food, Create Food),
	description(Prereq Count: 8 Prerequisites: 6 Food, Create Food)
Far-Tasting,
	cat(Food, Knowledge, ~Wizardly, ~Wizardly - Food, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S33),
	shortcat(Fo, K),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(3/1),
	prereqcount(1),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Food = 1 | ST:Magery Knowledge = 1), Seek Food ),
	description(Prereq Count: 1 Prerequisites: Magery 1, and Seek Food)
Poison Food,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S33),
	shortcat(Fo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(3 per meal),
	prereqcount(3),
	magery(0),
	needs(Purify Food),
	description(Prereq Count: 3 Prerequisites: Purify Food)
Prepare Game,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S33),
	shortcat(Fo),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(Perm.),
	castingcost(2),
	prereqcount(3),
	magery(0),
	needs(Purify Food),
	description(Prereq Count: 3 Prerequisites: Purify Food)
Purify Food,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S33),
	shortcat(Fo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(1 per lb.),
	prereqcount(2),
	magery(0),
	needs(Decay),
	description(Prereq Count: 2 Prerequisites: Decay)
Seek Food,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S33),
	shortcat(Fo),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Test Food,
	cat(Food, ~Wizardly, ~Wizardly - Food),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S33),
	shortcat(Fo),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(1 to 3#),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)


// Clerical Versions

#Clone "SP:Create Food" as "SP:Create Food (Clerical)"
#ReplaceTags in "SP:Create Food (Clerical)" with _
	"cat(Food, ~Clerical, ~Clerical PI 3, ~Clerical - Food), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Essential Food" as "SP:Essential Food (Clerical)"
#ReplaceTags in "SP:Essential Food (Clerical)" with _
	"cat(Food, ~Clerical, ~Clerical PI 4, ~Clerical - Food), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)"

Monk's Banquet (Clerical),
	cat(Food, ~Clerical, ~Clerical PI 2, ~Clerical - Food), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S33),
	shortcat(Fo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(24 hrs.),
	castingcost(6),
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)

#Clone "SP:Purify Food" as "SP:Purify Food (Clerical)"
#ReplaceTags in "SP:Purify Food (Clerical)" with _
	"cat(Food, ~Clerical, ~Clerical PI 2, ~Clerical - Food), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Test Food" as "SP:Test Food (Clerical)"
#ReplaceTags in "SP:Test Food (Clerical)" with _
	"cat(Food, ~Clerical, ~Clerical PI 1, ~Clerical - Food), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
	
// Druidic Versions

#Clone "SP:Purify Food" as "SP:Purify Food (Druidic)"
#ReplaceTags in "SP:Purify Food (Druidic)" with _
	"cat(Food, ~Druidic, ~Druidic PI 2, ~Druidic - Food), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Seek Food" as "SP:Seek Food (Druidic)"
#ReplaceTags in "SP:Seek Food (Druidic)" with _
	"cat(Food, ~Druidic, ~Druidic PI 1, ~Druidic - Food), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"

	
// ***** *****
// Gate Spells
// ***** *****

<Gate:G>

// Blink is in Movement Spells
// Blink Other is in Movement Spells
Control Gate,
	cat(Gate, ~Wizardly, ~Wizardly - Gate),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S34),
	shortcat(G),
	mods(Spells),
	class(Regular/R-Gate),
	time(10 sec.),
	duration(1 min.),
	castingcost(6/3),
	prereqcount(12),
	magery(3),
	needs( (AD:Magery = 3, ST:Magery = 3 | ST:Magery Gate = 3) , Seek Gate ),
	description(Prereq Count: 12 Prerequisites: Magery 3, Seek Gate)
Divert Teleport,
	cat(Movement, Gate, ~Wizardly, ~Wizardly - Movement, ~Wizardly - Gate),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S34),
	shortcat(G, Mo),
	mods(Spells),
	class(Blocking/R-spell),
	time(1 sec.),
	duration(Instant),
	castingcost(Varies),
	prereqcount(6),
	magery(3),
	needs( (AD:Magery = 3, ST:Magery = 3 | ST:Magery Gate = 3 | ST:Magery Movement = 3) , Trace Teleport),
	description(Prereq Count: 6 Prerequisites: Magery 3, Trace Teleport)
Phase,
	cat(Gate, ~Wizardly, ~Wizardly - Gate),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S34),
	shortcat(G),
	mods(Spells),
	class(Blocking),
	time(1 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(5),
	magery(3),
	needs( (AD:Magery = 3, ST:Magery = 3 | ST:Magery Gate = 3) , Ethereal Body ),
	description(Prereq Count: 5 Prerequisites: Magery 3, Ethereal Body)
Phase Other,
	cat(Gate, ~Wizardly, ~Wizardly - Gate),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S34),
	shortcat(G),
	mods(Spells),
	class(Blocking),
	time(1 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(6),
	magery(3),
	needs(Phase),
	description(Prereq Count: 6 Prerequisites: Magery 3, Phase)
Scry Gate,
	cat(Gate, ~Wizardly, ~Wizardly - Gate),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S35),
	shortcat(G),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(1 min.),
	castingcost(4/4),
	prereqcount(12),
	magery(2),
	needs(Seek Gate),
	description(Prereq Count: 12 Prerequisites: Magery 2, Seek Gate)
Seek Gate,
	cat(Gate, ~Wizardly, ~Wizardly - Gate),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S35),
	shortcat(G),
	mods(Spells),
	class(Information),
	time(10 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(11),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Gate = 2), Seek Magic, 10 Colleges),
	description(Prereq Count: 11 Prerequisites: Magery 2, Seek Magic, 1 Spell from 10 Colleges)
// Teleport Shield is in Protection & Warning Spells
Trace Teleport,
	cat(Movement, Gate, ~Wizardly, ~Wizardly - Movement, ~Wizardly - Gate),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S35),
	shortcat(G, Mo),
	mods(Spells),
	class(Info/R-Spell),
	time(1 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(5),
	magery(3),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Movement = 2 | ST:Magery Gate = 2), ST:IQ >= 13, 10 Colleges ),
	description(Prereq Count: 5 Prerequisites: Magery 2, ST:IQ >= 13, 1 Spell from 10 Colleges)

	
// Clerical Versions

Sanctuary (Clerical),
	cat(Gate, ~Clerical, ~Clerical PI 6, ~Clerical - Gate), 
	type(IQ/VH),
	countasneed(Clerical),
	ident(Clerical),
	page(S35),
	shortcat(G),
	mods(Spells),
	class(Special),
	time(10 sec.),
	duration(1 hr.),
	castingcost(5/S),
	needs(AD:Power Investiture=6|ST:Holy PI=6), 
	magery(PI 6), 
	description(Prereq: Power Investiture 6)


// ***** *****
// Healing Spells
// ***** *****

<Healing:H>

Lend Energy,
	cat(Healing, Meta-Spells, ~Wizardly, ~Wizardly - Healing, ~Wizardly - Meta-Spells), 
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S37),
	shortcat(H, Me),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(Varies),
	prereqcount(0),
	magery(1),
	needs( AD:Magery = 1 | ST:Magery Healing = 1 ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
Recover Energy,
	cat(Healing, Meta-Spells, ~Wizardly, ~Wizardly - Healing, ~Wizardly - Meta-Spells), 
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S38),
	shortcat(H, Me),
	mods(Spells),
	class(Special),
	time(Special),
	duration(Special),
	castingcost(none),
	prereqcount(1),
	magery(1),
	needs( (AD:Magery = 1 | ST:Magery Healing = 1) , Lend Energy ),
	description(Prereq Count: 1 Prerequisites: Magery 1, Lend Energy)
Share Energy,
	cat(Healing, Meta-Spells, ~Wizardly, ~Wizardly - Healing, ~Wizardly - Meta-Spells), 
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S39),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Special),
	castingcost(Varies),
	prereqcount(1),
	magery(1),
	needs(Lend Energy),
	description(Prereq Count: 1 Prerequisites: Magery 1, Lend Energy)

	
// Clerical Versions

Awaken (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S36),
	shortcat(H),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Cleansing (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 1, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S36),
	shortcat(H),
	mods(Spells),
	class(Regular/R-Spec),
	time(3 sec.),
	duration(Perm.),
	castingcost(Varies),
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)
Cure Disease (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 3, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S36),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(10 min.),
	duration(Instant),
	castingcost(4),
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)
Detect Poison (Clerical),
	cat(Healing, Protection & Warning, ~Clerical, ~Clerical PI 1, ~Clerical - Healing, ~Clerical - Protection & Warning), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S36),
	shortcat(Pr, H),
	mods(Spells),
	class(Area/Information),
	time(2 sec.),
	duration(Instant),
	castingcost(2),
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)
Final Rest (Clerical),
	cat(Healing, Necromantic, ~Clerical, ~Clerical PI 1, ~Clerical - Healing, ~Clerical - Necromantic), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S36),
	shortcat(H, N),
	mods(Spells),
	class(Regular),
	time(10 min.#),
	duration(Perm.),
	castingcost(20),
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)
Great Healing (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 3, ~Clerical - Healing), 
	type(IQ/VH),
	countasneed(Clerical),
	ident(Clerical),
	page(S37),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 min.),
	duration(Perm.),
	castingcost(20),
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)
Healing Slumber (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S37),
	shortcat(H),
	mods(Spells),
	class(Regular/R-#),
	time(30 sec.),
	duration(8 hrs.#),
	castingcost(6 or 10),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Instant Neutralize Poison (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 4, ~Clerical - Healing), 
	type(IQ/VH),
	countasneed(Clerical),
	ident(Clerical),
	page(S37),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Instant),
	castingcost(8),
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)
#Clone "SP:Lend Energy" as "SP:Lend Energy (Clerical)"
#ReplaceTags in "SP:Lend Energy (Clerical)" with _
	"cat(Healing, Meta-Spells, ~Clerical, ~Clerical PI 1, ~Clerical - Healing, ~Clerical - Meta-Spells), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
Lend Vitality (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 1, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S37),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 hr.),
	castingcost(1 per HP loaned),
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)
Major Healing (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Healing), 
	type(IQ/VH),
	countasneed(Clerical),
	ident(Clerical),
	page(S37),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(1 to 4),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Minor Healing (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 1, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S37),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(1 to 3),
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)
Neutralize Poison (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 3, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S37),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(30 sec.),
	duration(Perm.),
	castingcost(5),
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)
#Clone "SP:Recover Energy" as "SP:Recover Energy (Clerical)"
#ReplaceTags in "SP:Recover Energy (Clerical)" with _
	"cat(Healing, Meta-Spells, ~Clerical, ~Clerical PI 1, ~Clerical - Healing, ~Clerical - Meta-Spells), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
Regeneration (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 4, ~Clerical - Healing), 
	type(IQ/VH),
	countasneed(Clerical),
	ident(Clerical),
	page(S38),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(Special#),
	duration(Perm.),
	castingcost(20),
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)
Relieve Paralysis (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 3, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S38),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(1 min.),
	castingcost(Varies),
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)
Relieve Sickness (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S38),
	shortcat(H),
	mods(Spells),
	class(Regular/R-spell),
	time(10 sec.),
	duration(10 min.),
	castingcost(2),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Resist Disease (Clerical),
	cat(Healing, Protection & Warning, ~Clerical, ~Clerical PI 2, ~Clerical - Healing, ~Clerical - Protection & Warning), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S38),
	shortcat(H, Pr),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(1 hour),
	castingcost(4/3),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Resist Poison (Clerical),
	cat(Healing, Protection & Warning, ~Clerical, ~Clerical PI 2, ~Clerical - Healing, ~Clerical - Protection & Warning), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S38),
	shortcat(H, Pr),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(1 hr.),
	castingcost(4/3),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Restoration (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 3, ~Clerical - Healing), 
	type(IQ/VH),
	countasneed(Clerical),
	ident(Clerical),
	page(S38),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 min.#),
	duration(Perm.),
	castingcost(15),
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)
Restore Hearing (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S39),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(1 hr.),
	castingcost(Varies),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Restore Memory (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S39),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(Perm.),
	castingcost(3),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Restore Sight (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S39),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(1 hr.),
	castingcost(Varies),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
Restore Speech (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S39),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(1 hr.),
	castingcost(5/3),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
#Clone "SP:Share Energy" as "SP:Share Energy (Clerical)"
#ReplaceTags in "SP:Share Energy (Clerical)" with _
	"cat(Healing, Meta-Spells, ~Clerical, ~Clerical PI 1, ~Clerical - Healing, ~Clerical - Meta-Spells), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
Share Vitality (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 1, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S39),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 sec./HP),
	duration(Perm.),
	castingcost(0#),
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)
Stop Bleeding (Clerical),
	cat(Healing, ~Clerical, ~Clerical PI 1, ~Clerical - Healing), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S39),
	shortcat(H),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(1 or 10),
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)
Stop Paralysis (Clerical),
	cat(Body Control, Healing, ~Clerical, ~Clerical PI 3, ~Clerical - Body Control, ~Clerical - Healing),
	type(IQ/H),
	CountAsNeed(Clerical), 
	ident(Clerical), 
	page(S40),
	shortcat(B, H),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(1 or 2),
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)
Stop Spasm (Clerical),
	cat(Body Control, Healing, ~Clerical, ~Clerical PI 2, ~Clerical - Body Control, ~Clerical - Healing),
	type(IQ/H),
	CountAsNeed(Clerical), 
	ident(Clerical), 
	page(S40),
	shortcat(B, H),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)

// Druidic Versions

#Clone "SP:Cure Disease (Clerical)" as "SP:Cure Disease (Druidic)"
#ReplaceTags in "SP:Cure Disease (Druidic)" with _
	"cat(Healing, ~Druidic, ~Druidic PI 2, ~Druidic - Healing), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Detect Poison (Clerical)" as "SP:Detect Poison (Druidic)"
#ReplaceTags in "SP:Detect Poison (Druidic)" with _
	"cat(Healing, Protection & Warning, ~Druidic, ~Druidic PI 1, ~Druidic - Healing, ~Druidic - Protection & Warning), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Instant Neutralize Poison (Clerical)" as "SP:Instant Neutralize Poison (Druidic)"
#ReplaceTags in "SP:Instant Neutralize Poison (Druidic)" with _
	"cat(Healing, ~Druidic, ~Druidic PI 3, ~Druidic - Healing), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Neutralize Poison (Clerical)" as "SP:Neutralize Poison (Druidic)"
#ReplaceTags in "SP:Neutralize Poison (Druidic)" with _
	"cat(Healing, ~Druidic, ~Druidic PI 2, ~Druidic - Healing), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Recover Energy (Clerical)" as "SP:Recover Energy (Druidic)"
#ReplaceTags in "SP:Recover Energy (Druidic)" with _
	"cat(Healing, Meta-Spells, ~Druidic, ~Druidic PI 1, ~Druidic - Healing, ~Druidic - Meta-Spells), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Share Energy (Clerical)" as "SP:Share Energy (Druidic)"
#ReplaceTags in "SP:Share Energy (Druidic)" with _
	"cat(Healing, Meta-Spells, ~Druidic, ~Druidic PI 1, ~Druidic - Healing, ~Druidic - Meta-Spells), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
	

// ***** *****
// Illusion Spells
// ***** *****

<Illusion:I>
	
Complex Illusion,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S40),
	shortcat(I),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/H),
	prereqcount(2),
	magery(0),
	needs(Sound, Simple Illusion),
	description(Prereq Count: 2 Prerequisites: Sound, Simple Illusion)
Control Illusion,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S40),
	shortcat(I),
	mods(Spells),
	class(Regular/R-spell),
	time(2 sec.),
	duration(Perm.),
	castingcost(1),
	prereqcount(4),
	magery(1),
	needs(Perfect Illusion),
	description(Prereq Count: 4 Prerequisites: Magery 1, Perfect Illusion)
Dispel Illusion,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S40),
	shortcat(I),
	mods(Spells),
	class(Regular/R-spell),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	prereqcount(5),
	magery(1),
	needs(Control Illusion),
	description(Prereq Count: 5 Prerequisites: Magery 1, Control Illusion)
Illusion Disguise,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S40),
	shortcat(I),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Varies),
	castingcost(3),
	prereqcount(1),
	magery(0),
	needs(Simple Illusion),
	description(Prereq Count: 1 Prerequisites: Simple Illusion)
Illusion Shell,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S41),
	shortcat(I),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 or 2/H),
	prereqcount(1),
	magery(0),
	needs(Simple Illusion),
	description(Prereq Count: 1 Prerequisites: Simple Illusion)
Independence,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S41),
	shortcat(I),
	mods(Spells),
	class(Area),
	time(Varies),
	duration(Varies),
	castingcost(2),
	prereqcount(1),
	magery(0),
	needs(Simple Illusion),
	description(Prereq Count: 1 Prerequisites: Simple Illusion)
Initiative,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S41),
	shortcat(I),
	mods(Spells),
	class(Area),
	time(10 sec.),
	duration(Indef.#),
	castingcost(Varies),
	prereqcount(9),
	magery(0),
	needs(Independence, Wisdom),
	description(Prereq Count: 9 Prerequisites: Independence, Wisdom)
Know Illusion,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S41),
	shortcat(I),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(1),
	magery(0),
	needs(Simple Illusion),
	description(Prereq Count: 1 Prerequisites: Simple Illusion)
Perfect Illusion,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S41),
	shortcat(I),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/H#),
	prereqcount(3),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Illusion = 1) , Complex Illusion),
	description(Prereq Count: 3 Prerequisites: Magery 1, Complex Illusion)
Phantom,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S41),
	shortcat(I),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(5/H#),
	prereqcount(7),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Illusion = 2), Perfect Illusion, Hinder, Apportation),
	description(Prereq Count: 7 Prerequisites: Magery 2, Perfect Illusion, Hinder, Apportation)
Simple Illusion,
	cat(Illusion, ~Wizardly, ~Wizardly - Illusion),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S42),
	shortcat(I),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(1/H),
	taboo(DI:Blindness),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0, ST:IQ = 11),
	description(Prereq Count: 0 Prerequisites: IQ 11+, No Blindness)


// ***** *****
// Knowledge Spells
// ***** *****

<Knowledge:K>

Analyze Magic,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S42),
	shortcat(K),
	mods(Spells),
	class(Inform./R-spell),
	time(1 hr.),
	duration(Instant),
	castingcost(8),
	prereqcount(3),
	magery(1),
	needs(Identify Spell),
	description(Prereq Count: 3 Prerequisites: Magery 1, Identify Spell)
Astral Vision,
	cat(Knowledge, Necromantic, ~Wizardly, ~Wizardly - Knowledge, ~Wizardly - Necromantic),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S42),
	shortcat(K, N),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(6),
	magery(1),
	needs(Sense Spirit, See Invisible),
	description(Prereq Count: 6 Prerequisites: Magery 1, Sense Spirit, See Invisible)
Aura,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S42),
	shortcat(K),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(1),
	magery(1),
	needs(Detect Magic),
	description(Prereq Count: 1 Prerequisites: Magery 1, Detect Magic)
Detect Magic,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S43),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(0),
	magery(1),
	needs( AD:Magery = 1, ST:Magery = 1 | ST:Magery Knowledge = 1 | AD:Bardic Talent = 1 ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
// Earth Vision is in Earth Spells
Far-Feeling,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S43),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(3/1),
	prereqcount(0),
	magery(1),
	needs( AD:Magery = 1, ST:Magery = 1 | ST:Magery Knowledge = 1 | AD:Bardic Talent = 1 ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
// Far-Hearing is in Sound Spells
// Far-Tasting is in Food Spells
Find Direction,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S43),
	shortcat(K),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(0),
	magery(1),
	needs( AD:Magery = 1, ST:Magery = 1 | ST:Magery Knowledge = 1 | AD:Bardic Talent = 1 ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
Glass Wall,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S43),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(3),
	magery(0),
	needs((5 CO:Knowledge | Earth Vision)),
	description(Prereq Count: 3 Prerequisites: 5 Knowledge or Earth Vision)
History,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S43),
	shortcat(K),
	mods(Spells),
	class(Information),
	time(sec.=cost),
	duration(Instant),
	castingcost(Varies),
	prereqcount(4),
	magery(1),
	needs(Trace),
	description(Prereq Count: 4 Prerequisites: Magery 1, Trace)
Identify Spell,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S43),
	shortcat(K),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(1),
	magery(1),
	needs(Detect Magic),
	description(Prereq Count: 1 Prerequisites: Magery 1, Detect Magic)
Know Location,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S43),
	shortcat(K),
	mods(Spells),
	class(Information),
	time(10 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(2),
	magery(1),
	needs( ( AD:Magery = 1, ST:Magery = 1 | ST:Magery Knowledge = 1 | AD:Bardic Talent = 1 ) , Tell Position),
	description(Prereq Count: 2 Prerequisites: Magery 1, Tell Position)
Mage Sight,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S44),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(1),
	magery(1),
	needs(Detect Magic),
	description(Prereq Count: 1 Prerequisites: Magery 1, Detect Magic)
Measurement,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S44),
	shortcat(K),
	mods(Spells),
	class(Area/Inform.),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Pathfinder,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S44),
	shortcat(K),
	mods(Spells),
	class(Information),
	time(10 sec.),
	duration(Instant),
	castingcost(4),
	prereqcount(2),
	magery(1),
	needs( ( AD:Magery = 1, ST:Magery = 1 | ST:Magery Knowledge = 1 | AD:Bardic Talent = 1 ) , ST:IQ >= 12, 2 GR:Seek Spells ),
	description(Prereq Count: 2 Prerequisites: Magery 1, IQ 12+, 2 Seek spells)
// Plant Vision is in Plant Spells
Projection,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S44),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(6),
	magery(1),
	needs(Sense Spirit, 4 CO:Knowledge),
	description(Prereq Count: 6 Prerequisites: Magery 1, Sense Spirit, 4 Knowledge)
See Secrets,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S44),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(1 min.),
	castingcost(5/2),
	prereqcount(5),
	magery(1),
	needs(Seeker, Aura),
	description(Prereq Count: 5 Prerequisites: Magery 1, Seeker, Aura)
Seek Magic,
	cat(Knowledge, Meta-Spells, ~Wizardly, ~Wizardly - Knowledge, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S45),
	shortcat(K, Me),
	mods(Spells),
	class(Information),
	time(10 sec.),
	duration(Instant),
	castingcost(6),
	prereqcount(1),
	magery(1),
	needs(Detect Magic),
	description(Prereq Count: 1 Prerequisites: Magery 1, Detect Magic)
Seeker,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S45),
	shortcat(K),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(2),
	magery(1),
	needs( ( AD:Magery = 1, ST:Magery = 1 | ST:Magery Knowledge = 1 | AD:Bardic Talent = 1 ) , ST:IQ >= 12, 2 GR:Seek Spells ),
	description(Prereq Count: 2 Prerequisites: Magery 1, IQ 12+, 2 Seek spells)
Tell Position,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S45),
	shortcat(K),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	prereqcount(1),
	magery(0),
	needs(Measurement),
	description(Prereq Count: 1 Prerequisites: Measurement)
Test Load,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S45),
	shortcat(K),
	mods(Spells),
	class(Area/Inform.),
	time(1 sec.),
	duration(Instant),
	castingcost(2#),
	prereqcount(1),
	magery(0),
	needs(Measurement),
	description(Prereq Count: 1 Prerequisites: Measurement)
Trace,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S45),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(1 min.),
	duration(1 hr.),
	castingcost(3/1),
	prereqcount(3),
	magery(1),
	needs(Seeker),
	description(Prereq Count: 3 Prerequisites: Magery 1, Seeker)
// Water Vision is in Water Spells
Wizard Eye,
	cat(Knowledge, ~Wizardly, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S45),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(2),
	magery(1),
	needs(Apportation, Keen Vision),
	description(Prereq Count: 2 Prerequisites: Magery 1, Apportation, Keen Vision)

	
// Clerical Versions

#Clone "SP:Astral Vision" as "SP:Astral Vision (Clerical)"
#ReplaceTags in "SP:Astral Vision (Clerical)" with _
	"cat(Knowledge, ~Clerical, ~Clerical PI 3, ~Clerical - Knowledge), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Aura" as "SP:Aura (Clerical)"
#ReplaceTags in "SP:Aura (Clerical)" with _
	"cat(Knowledge, ~Clerical, ~Clerical PI 1, ~Clerical - Knowledge), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Detect Magic" as "SP:Detect Magic (Clerical)"
#ReplaceTags in "SP:Detect Magic (Clerical)" with _
	"cat(Knowledge, ~Clerical, ~Clerical PI 1, ~Clerical - Knowledge), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:See Secrets" as "SP:See Secrets (Clerical)"
#ReplaceTags in "SP:See Secrets (Clerical)" with _
	"cat(Knowledge, ~Clerical, ~Clerical PI 3, ~Clerical - Knowledge), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Seeker" as "SP:Seeker (Clerical)"
#ReplaceTags in "SP:Seeker (Clerical)" with _
	"cat(Knowledge, ~Clerical, ~Clerical PI 2, ~Clerical - Knowledge), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"

// Druidic Versions

#Clone "SP:Detect Magic" as "SP:Detect Magic (Druidic)"
#ReplaceTags in "SP:Detect Magic (Druidic)" with _
	"cat(Knowledge, ~Druidic, ~Druidic PI 1, ~Druidic - Knowledge), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Find Direction" as "SP:Find Direction (Druidic)"
#ReplaceTags in "SP:Find Direction (Druidic)" with _
	"cat(Knowledge, ~Druidic, ~Druidic PI 1, ~Druidic - Knowledge), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Know Location" as "SP:Know Location (Druidic)"
#ReplaceTags in "SP:Know Location (Druidic)" with _
	"cat(Knowledge, ~Druidic, ~Druidic PI 2, ~Druidic - Knowledge), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Pathfinder" as "SP:Pathfinder (Druidic)"
#ReplaceTags in "SP:Pathfinder (Druidic)" with _
	"cat(Knowledge, ~Druidic, ~Druidic PI 2, ~Druidic - Knowledge), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
Remember Path (Druidic),
	cat(Knowledge, ~Druidic, ~Druidic PI 3, ~Druidic - Knowledge), 
	type(IQ/H),
	CountAsNeed(Druidic), 
	ident(Druidic), 
	page(S44),
	shortcat(K),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(1 hr.),
	castingcost(3/1),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)
#Clone "SP:Tell Position" as "SP:Tell Position (Druidic)"
#ReplaceTags in "SP:Tell Position (Druidic)" with _
	"cat(Knowledge, ~Druidic, ~Druidic PI 1, ~Druidic - Knowledge), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"

	
// ***** *****
// Light & Darkness Spells
// ***** *****

<Light & Darkness:L>

Blackout,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S46),
	shortcat(L),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(3),
	magery(0),
	needs(Darkness),
	description(Prereq Count: 3 Prerequisites: Darkness)
Blur,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S46),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(1 to 5/S),
	prereqcount(3),
	magery(0),
	needs(Darkness),
	description(Prereq Count: 3 Prerequisites: Darkness)
Bright Vision,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S46),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	taboo(DI:Blindness),
	prereqcount(1),
	magery(0),
	needs((Keen Vision | 5 CO:Light & Darkness)),
	description(Prereq Count: 1 Prerequisites: Keen Vision or 5 Light & Darkness)
Colors,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S46),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(1),
	magery(0),
	needs(Light),
	description(Prereq Count: 1 Prerequisites: Light)
Continual Light,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S46),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Varies),
	castingcost(Varies),
	prereqcount(1),
	magery(0),
	needs(Light),
	description(Prereq Count: 1 Prerequisites: Light)
Dark Vision,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S46),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(5/2),
	prereqcount(2),
	magery(0),
	needs((Night Vision | Infravision)),
	description(Prereq Count: 2 Prerequisites: Night Vision or Infravision)
Darkness,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S46),
	shortcat(L),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(2),
	magery(0),
	needs(Continual Light),
	description(Prereq Count: 2 Prerequisites: Continual Light)
Glow,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S46),
	shortcat(L),
	mods(Spells),
	class(Area),
	time(Varies),
	duration(Varies),
	castingcost(Varies),
	prereqcount(2),
	magery(0),
	needs(Continual Light),
	description(Prereq Count: 2 Prerequisites: Continual Light)
Hawk Vision,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S47),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(2/lvl./H#),
	taboo(DI:Blindness, DI:Bad Sight (farsighted),
	 DI:Bad Sight (nearsighted)),
	prereqcount(1),
	magery(0),
	needs((Keen Vision | 5 CO:Light & Darkness)),
	description(Prereq Count: 1 Prerequisites: Keen Vision or 5 Light & Darkness)
Hide,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S47),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(1 hr.),
	castingcost(1 to 5/S),
	prereqcount(2),
	magery(1),
	needs((Blur | Forgetfulness)),
	description(Prereq Count: 2 Prerequisites: Magery 1, Blur or Forgetfulness)
Infravision,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S47),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/1),
	prereqcount(1),
	magery(0),
	needs((Keen Vision | 5 CO:Light & Darkness)),
	description(Prereq Count: 1 Prerequisites: Keen Vision or 5 Light & Darkness)
Invisibility,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S47),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(5/3),
	prereqcount(6),
	magery(0),
	needs(6 CO:Light & Darkness, Blur),
	description(Prereq Count: 6 Prerequisites: 6 Light & Darkness, Blur)
Light,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S47),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1/1),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Light Jet,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S47),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(2),
	magery(0),
	needs(Continual Light),
	damage(Spec.),
	damtype(blind),
	skillused(ST:DX-4, SK:Innate Attack (Beam), SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Breath)-2),
	parry(No),
	notes(~2/1en),
	itemnotes({~2/1 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 2 Prerequisites: Continual Light or Shape Light)
Mirror,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S47),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/2),
	prereqcount(2),
	magery(0),
	needs(Colors),
	description(Prereq Count: 2 Prerequisites: Colors)
Night Vision,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S47),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/1),
	prereqcount(1),
	magery(0),
	needs((Keen Vision | 5 CO:Light & Darkness)),
	description(Prereq Count: 1 Prerequisites: Keen Vision or 5 Light & Darkness)
See Invisible,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S48),
	shortcat(L),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(3),
	magery(0),
	needs((Dark Vision, Infravision | Invisibility)),
	description(Prereq Count: 3 Prerequisites: Dark Vision, Infravision or Invisibility)
Sunbolt,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S48),
	shortcat(L),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(1 to Magery#),
	prereqcount(6),
	magery(1),
	needs(6 CO:Light & Darkness, Sunlight),
	damage(~1d-1),
	damtype(burn),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(75),
	rangemax(150),
	acc(2),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 6 Prerequisites: Magery 1, 6 Light & Darkness, Sunlight)
Sunlight,
	cat(Light & Darkness, ~Wizardly, ~Wizardly - Light & Darkness),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S48),
	shortcat(L),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(4),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Light & Darkness = 1) , Glow, Colors),
	description(Prereq Count: 4 Prerequisites: Magery 1, Glow, Colors)

	
// Clerical Versions

#Clone "SP:Continual Light" as "SP:Continual Light (Clerical)"
#ReplaceTags in "SP:Continual Light (Clerical)" with _
	"cat(Light & Darkness, ~Clerical, ~Clerical PI 2, ~Clerical - Light & Darkness), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Glow" as "SP:Glow (Clerical)"
#ReplaceTags in "SP:Glow (Clerical)" with _
	"cat(Light & Darkness, ~Clerical, ~Clerical PI 2, ~Clerical - Light & Darkness), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Light" as "SP:Light (Clerical)"
#ReplaceTags in "SP:Light (Clerical)" with _
	"cat(Light & Darkness, ~Clerical, ~Clerical PI 1, ~Clerical - Light & Darkness), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Light Jet" as "SP:Light Jet (Clerical)"
#ReplaceTags in "SP:Light Jet (Clerical)" with _
	"cat(Light & Darkness, ~Clerical, ~Clerical PI 2, ~Clerical - Light & Darkness), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Sunbolt" as "SP:Sunbolt (Clerical)"
#ReplaceTags in "SP:Sunbolt (Clerical)" with _
	"cat(Light & Darkness, ~Clerical, ~Clerical PI 3, ~Clerical - Light & Darkness), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Sunlight" as "SP:Sunlight (Clerical)"
#ReplaceTags in "SP:Sunlight (Clerical)" with _
	"cat(Light & Darkness, ~Clerical, ~Clerical PI 3, ~Clerical - Light & Darkness), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"

// Druidic Versions

#Clone "SP:Hawk Vision" as "SP:Hawk Vision (Druidic)"
#ReplaceTags in "SP:Hawk Vision (Druidic)" with _
	"cat(Light & Darkness, ~Druidic, ~Druidic PI 1, ~Druidic - Light & Darkness), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Sunlight" as "SP:Sunlight (Druidic)"
#ReplaceTags in "SP:Sunlight (Druidic)" with _
	"cat(Light & Darkness, ~Druidic, ~Druidic PI 3, ~Druidic - Light & Darkness), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"


// ***** *****
// Making & Breaking Spells
// ***** *****

<Making & Breaking:Ma>

Copy,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S48),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(Perm.),
	castingcost(2 plus 1/copy),
	prereqcount(5),
	magery(0),
	needs(5 CO:Making & Breaking, Restore, 1 CA:Language Written),
	description(Prereq Count: 5 Prerequisites: 5 Making & Breaking, Restore, 1 Written Language)
Fasten,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S48),
	shortcat(Ma),
	mods(Spells),
	class(Regular/R-DX),
	time(1 sec.),
	duration(Perm.),
	castingcost(3#),
	prereqcount(10),
	magery(0),
	needs(Knot),
	description(Prereq Count: 10 Prerequisites: Knot)
Find Weakness,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S49),
	shortcat(Ma),
	mods(Spells),
	class(Information),
	time(2 sec.),
	duration(Instant),
	castingcost(1#),
	prereqcount(4),
	magery(0),
	needs(_ 
		( 1 CO:Fire, 1 CO:Water, 1 CO:Earth, 1 CO:Air ) _
	| 	( (Ignite Fire | Seek Fire), Seek Water, Seek Earth, Purify Air ) _
	),
	description(Prereq Count: 4 Prerequisites: 1 Fire, 1 Water, 1 Earth, 1 Air)
Knot,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S49),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(Indef.#),
	castingcost(2),
	prereqcount(9),
	magery(0),
	needs(Stiffen),
	description(Prereq Count: 9 Prerequisites: Stiffen)
Mapmaker,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S49),
	shortcat(Ma),
	mods(Spells),
	class(Special),
	time(10 sec.),
	duration(1 hr.),
	castingcost(4/2),
	prereqcount(9),
	magery(0),
	needs(Copy, Measurement),
	description(Prereq Count: 9 Prerequisites: Copy, Measurement)
Rejoin,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S49),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(4 sec./10 lbs.),
	duration(10 min.),
	castingcost(1 per 10 lbs./H),
	prereqcount(7),
	magery(0),
	needs(Weaken, Restore),
	description(Prereq Count: 7 Prerequisites: Weaken, Restore)
Repair,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S49),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(1 sec./lb.),
	duration(Perm.),
	castingcost(2/5 lbs.#),
	prereqcount(8),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Making & Breaking = 2), Rejoin ),
	description(Prereq Count: 8 Prerequisites: Magery 2, Rejoin)
Restore,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S49),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(10 min.),
	castingcost(2/1),
	prereqcount(1),
	magery(0),
	needs((Find Weakness | Simple Illusion)),
	description(Prereq Count: 1 Prerequisites: Find Weakness or Simple Illusion)
Rive,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S49),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Instant),
	castingcost(1 per die),
	prereqcount(7),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Making & Breaking = 2), Shatter ),
	description(Prereq Count: 7 Prerequisites: Magery 2, Shatter)
Sharpen,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S50),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(4 sec.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(9),
	magery(2),
	needs(Repair),
	description(Prereq Count: 9 Prerequisites: Magery 2, Repair)
Shatter,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S50),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Instant),
	castingcost(1 to 3),
	prereqcount(6),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Making & Breaking = 1), Weaken ),
	description(Prereq Count: 6 Prerequisites: Magery 1, Weaken)
Shatterproof,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S50),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 hr.),
	castingcost(3/3),
	prereqcount(10),
	magery(2),
	needs(Repair, Shatter),
	description(Prereq Count: 10 Prerequisites: Magery 2, Repair, Shatter)
Stiffen,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S50),
	shortcat(Ma),
	mods(Spells),
	class(Regular/R-Spec.),
	time(2 sec./lb.),
	duration(10 min.),
	castingcost(1 per lb./H#),
	prereqcount(8),
	magery(0),
	needs(Rejoin),
	description(Prereq Count: 8 Prerequisites: Rejoin)
Weaken,
	cat(Making & Breaking, ~Wizardly, ~Wizardly - Making & Breaking),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S50),
	shortcat(Ma),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(Perm.),
	castingcost(2 to 6),
	prereqcount(5),
	magery(0),
	needs(Find Weakness),
	description(Prereq Count: 5 Prerequisites: Find Weakness)


// ***** *****
// Meta-Spells Spells
// ***** *****

<Meta-Spells:Me>

Counterspell,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S51),
	shortcat(Me),
	mods(Spells),
	class(Regular/R-spell),
	time(5 sec.),
	duration(Instant),
	castingcost(Varies),
	prereqcount(0),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Meta-Spells = 1) ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
Dispel Magic,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S51),
	shortcat(Me),
	mods(Spells),
	class(Area/R-spell),
	time(sec.=cost),
	duration(Perm.),
	castingcost(3),
	prereqcount(13),
	magery(1),
	needs(Counterspell, 13 Spells),
	description(Prereq Count: 13 Prerequisites: Magery 1, Counterspell and 12 other Spells)
Great Ward,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S51),
	shortcat(Me),
	mods(Spells),
	class(Block/R-spell),
	time(none),
	duration(Instant),
	castingcost(1 per subject#),
	prereqcount(1),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Meta-Spells = 2), Ward ),
	description(Prereq Count: 1 Prerequisites: Magery 2, Ward)
// Lend Energy is in Healing Spells
Magic Resistance,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S51),
	shortcat(Me),
	mods(Spells),
	class(Reg/R-Will+Magery),
	time(3 sec.),
	duration(1 min.),
	castingcost(1 to 5/S#),
	prereqcount(7),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Meta-Spells = 1), 7 Colleges ),
	description(Prereq Count: 7 Prerequisites: Magery 1, 1 Spell from 7 Colleges)
Pentagram,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S51),
	shortcat(Me),
	mods(Spells),
	class(Special),
	time(1/sq. ft.#),
	duration(Perm.),
	castingcost(1/sq. ft.#),
	prereqcount(9),
	magery(2),
	needs(Spell Shield),
	description(Prereq Count: 9 Prerequisites: Magery 2, Spell Shield)
// Protection from Evil is in Protection & Warning Spells
// Recover Energy is in Healing Spells
Reflect,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S52),
	shortcat(Me),
	mods(Spells),
	class(Block/R-spell),
	time(none),
	duration(Instant),
	castingcost(4 or 6#),
	prereqcount(1),
	magery(1),
	needs(Ward),
	description(Prereq Count: 1 Prerequisites: Magery 1, Ward)
Scryguard,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S52),
	shortcat(Me),
	mods(Spells),
	class(Regular),
	time(5 sec.),
	duration(10 hrs.),
	castingcost(3/1),
	prereqcount(0),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Meta-Spells = 1) ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
// Seek Magic is in Knowledge Spells
// Sense Evil is in Communication & Empathy Spells
// Sense Energy is in Healing Spells
Spell Shield,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S52),
	shortcat(Me),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(8),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Meta-Spells = 2), Scryguard, Magic Resistance ),
	description(Prereq Count: 8 Prerequisites: Magery 2, Scryguard, Magic Resistance)
Ward,
	cat(Meta-Spells, ~Wizardly, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S52),
	shortcat(Me),
	mods(Spells),
	class(Block/R-spell),
	time(none),
	duration(Instant),
	castingcost(2 or 3#),
	prereqcount(0),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Meta-Spells = 1) ),
	description(Prereq Count: 0 Prerequisites: Magery 1)

	
// Clerical Versions

Bless (Clerical),
	cat(Meta-Spells, ~Clerical, ~Clerical PI 5, ~Clerical - Meta-Spells), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S50),
	shortcat(Me),
	mods(Spells),
	class(Regular),
	time(min.=cost),
	duration(until peril),
	castingcost(10 or 50),
	needs(AD:Power Investiture=5|ST:Holy PI=5), 
	magery(PI 5), 
	description(Prereq: Power Investiture 5)
Curse (Clerical),
	cat(Meta-Spells, ~Clerical, ~Clerical PI 5, ~Clerical - Meta-Spells), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S51),
	shortcat(Me),
	mods(Spells),
	class(Regular),
	time(Varies),
	duration(Special),
	castingcost(Varies),
	needs(AD:Power Investiture=5|ST:Holy PI=5), 
	magery(PI 5), 
	description(Prereq: Power Investiture 5)
#Clone "SP:Dispel Magic" as "SP:Dispel Magic (Clerical)"
#ReplaceTags in "SP:Dispel Magic (Clerical)" with _
	"cat(Meta-Spells, ~Clerical, ~Clerical PI 4, ~Clerical - Meta-Spells), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)"
#Clone "SP:Magic Resistance" as "SP:Magic Resistance (Clerical)"
#ReplaceTags in "SP:Magic Resistance (Clerical)" with _
	"cat(Meta-Spells, ~Clerical, ~Clerical PI 3, ~Clerical - Meta-Spells), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Pentagram" as "SP:Pentagram (Clerical)"
#ReplaceTags in "SP:Pentagram (Clerical)" with _
	"cat(Meta-Spells, ~Clerical, ~Clerical PI 5, ~Clerical - Meta-Spells), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=5|ST:Holy PI=5), 
	magery(PI 5), 
	description(Prereq: Power Investiture 5)"
Remove Curse,
	cat(Meta-Spells, ~Clerical, ~Clerical PI 5, ~Clerical - Meta-Spells), 
	type(IQ/H),
	countasneed(Clerical),
	ident(Clerical),
	page(S52),
	shortcat(Me),
	mods(Spells),
	class(Regular/R-spell),
	time(1 hr.),
	duration(Instant),
	castingcost(20),
	needs(AD:Power Investiture=5|ST:Holy PI=5), 
	magery(PI 5), 
	description(Prereq: Power Investiture 5)

// Druidic Versions

#Clone "SP:Dispel Magic" as "SP:Dispel Magic (Druidic)"
#ReplaceTags in "SP:Dispel Magic (Druidic)" with _
	"cat(Meta-Spells, ~Druidic, ~Druidic PI 4, ~Druidic - Meta-Spells), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture (Druidic) 4)"


// ***** *****
// Mind Control Spells
// ***** *****

<Mind Control:Mi>

Alertness,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S53),
	shortcat(Mi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(10 min.),
	castingcost(2 to 10/H),
	prereqcount(2),
	magery(0),
	needs(_
		2 GR:Keen Senses _
	|	(Keen Hearing, Keen Vision)_
	|	(Keen Hearing, "Keen Taste and Smell")_
	|	(Keen Hearing, Keen Touch)_
	|	(Keen Vision, "Keen Taste and Smell")_
	|	(Keen Vision, Keen Touch)_
	|	("Keen Taste and Smell", Keen Touch)_
	),
	description(Prereq Count: 2 Prerequisites: 2 Keen Sense spells)
Bravery,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S53),
	shortcat(Mi),
	mods(Spells),
	class(Area/R-Will-1),
	time(1 sec.),
	duration(1 hr.),
	castingcost(2),
	prereqcount(1),
	magery(0),
	needs(Fear),
	description(Prereq Count: 1 Prerequisites: Fear)
Charm,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S53),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-Will),
	time(3 sec.),
	duration(1 min.),
	castingcost(6/3),
	prereqcount(8),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Mind Control = 1 | AD:Bardic Talent = 1), Loyalty, 8 CO:Mind Control ),
	description(Prereq Count: 8 Prerequisites: Magery 1, Loyalty, 7 Mind Control)
Command,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S53),
	shortcat(Mi),
	mods(Spells),
	class(Blocking/R-Will),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(2),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Mind Control = 2 | AD:Bardic Talent = 2), Forgetfulness ),
	description(Prereq Count: 2 Prerequisites: Magery 2, Forgetfulness)
Daze,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-HT),
	time(2 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(1),
	magery(0),
	needs(Foolishness),
	description(Prereq Count: 1 Prerequisites: Foolishness)
Drunkenness,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-Will),
	time(2 sec.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(4),
	magery(0),
	needs(Foolishness, Clumsiness),
	description(Prereq Count: 4 Prerequisites: Foolishness, Clumsiness)
Dull Hearing,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(30 min.),
	castingcost(1 to 3/H),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Dull Taste and Smell,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(30 min.),
	castingcost(1 to 3/H),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Dull Touch,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(30 min.),
	castingcost(1 to 3/H),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Dull Vision,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(30 min.),
	castingcost(1 to 3/H),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Dullness,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-HT),
	time(1 sec.),
	duration(10 min.),
	castingcost(2 to 10/H),
	prereqcount(2),
	magery(0),
	needs(_
		2 GR:Dull Senses _
	|	(Dull Hearing, Dull Vision)_
	|	(Dull Hearing, "Dull Taste and Smell")_
	|	(Dull Hearing, Dull Touch)_
	|	(Dull Vision, "Dull Taste and Smell")_
	|	(Dull Vision, Dull Touch)_
	|	("Dull Taste and Smell", Dull Touch)_
	),
	description(Prereq Count: 2 Prerequisites: 2 Dull Senses)
Fascinate,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Reg/Blocking/R-IQ),
	time(1 sec.),
	duration(Indef.#),
	castingcost(4),
	prereqcount(2),
	magery(0),
	needs(Daze),
	description(Prereq Count: 2 Prerequisites: Daze)
Fear,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Area/R-Will),
	time(1 sec.),
	duration(10 min.),
	castingcost(1),
	prereqcount(0),
	magery(0),
	needs(Sense Emotion),
	description(Prereq Count: 0 Prerequisites: Sense Emotion)
Foolishness,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 per IQ-/H),
	prereqcount(0),
	magery(0),
	needs( (AD:Magery 0 | AD:Bardic Talent), ST:IQ = 12 ),
	description(Prereq Count: 0 Prerequisites: IQ 12+)
Forgetfulness,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Reg/R-Will/R-Skill),
	time(10 sec.),
	duration(1 hr.),
	castingcost(3/3),
	prereqcount(1),
	magery(1),
	needs( (AD:Magery 0 | AD:Bardic Talent), Foolishness ),
	description(Prereq Count: 1 Prerequisites: Magery 1, Foolishness)
Keen Hearing,
	cat(Mind Control, Sound, ~Wizardly, ~Wizardly - Mind Control, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi, S),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(30 min.),
	castingcost(1 per +/H#),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Keen Taste and Smell,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(30 min.),
	castingcost(1 per +/H#),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Keen Touch,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(30 min.),
	castingcost(1 per +/H#),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Keen Vision,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S54),
	shortcat(Mi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(30 min.),
	castingcost(1 per +/H#),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0 | AD:Bardic Talent),
	description(Prereq Count: 0)
Loyalty,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S55),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-Will),
	time(2 sec.),
	duration(1 hr.),
	castingcost(2/2#),
	prereqcount(3),
	magery(0),
	needs(Bravery, 3 Mind Control),
	description(Prereq Count: 3 Prerequisites: Bravery, 2 Mind Control)
Mass Daze,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S55),
	shortcat(Mi),
	mods(Spells),
	class(Area/R-HT),
	time(sec.=cost),
	duration(Instant),
	castingcost(2/1#),
	prereqcount(2),
	magery(0),
	needs(Daze, ST:IQ >= 13),
	description(Prereq Count: 2 Prerequisites: Daze, IQ 13+)
Mass Sleep,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S55),
	shortcat(Mi),
	mods(Spells),
	class(Area/R-HT),
	time(sec.=cost),
	duration(Instant),
	castingcost(3#),
	prereqcount(3),
	magery(0),
	needs(Sleep, ST:IQ >= 13),
	description(Prereq Count: 3 Prerequisites: Sleep, IQ 13+)
Panic,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S55),
	shortcat(Mi),
	mods(Spells),
	class(Area/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(1),
	magery(0),
	needs(Fear),
	description(Prereq Count: 1 Prerequisites: Fear)
Sickness,
	cat(Mind Control, Body Control, ~Wizardly, ~Wizardly - Mind Control, ~Wizardly - Body Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S55),
	shortcat(Mi, B),
	mods(Spells),
	class(Regular/R-HT),
	time(4 sec.),
	duration(1 min.),
	castingcost(3/3),
	prereqcount(5),
	magery(1),
	needs(Drunkenness),
	description(Prereq Count: 5 Prerequisites: Drunkenness)
Sleep,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S55),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-HT),
	time(3 sec.),
	duration(Instant),
	castingcost(4),
	prereqcount(2),
	magery(0),
	needs(Daze),
	description(Prereq Count: 2 Prerequisites: Daze)
Strengthen Will,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S55),
	shortcat(Mi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1/pt/H),
	prereqcount(6),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Mind Control = 1 | AD:Bardic Talent = 1), 6 CO:Mind Control ),
	description(Prereq Count: 6 Prerequisites: Magery 1, 6 Mind Control)
Terror,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S55),
	shortcat(Mi),
	mods(Spells),
	class(Area/R-Will),
	time(1 sec.),
	duration(Instant),
	castingcost(4),
	prereqcount(1),
	magery(0),
	needs(Fear),
	description(Prereq Count: 1 Prerequisites: Fear)
Weaken Will,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S56),
	shortcat(Mi),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/pt/H),
	prereqcount(1),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Mind Control = 1 | AD:Bardic Talent = 1), Foolishness ),
	description(Prereq Count: 1 Prerequisites: Magery 1, Foolishness)
Wisdom,
	cat(Mind Control, ~Wizardly, ~Wizardly - Mind Control),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S56),
	shortcat(Mi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4 per IQ+/S),
	prereqcount(6),
	magery(0),
	needs(6 CO:Mind Control),
	description(Prereq Count: 6 Prerequisites: 6 Mind Control)

	
// Clerical Versions

#Clone "SP:Bravery" as "SP:Bravery (Clerical)"
#ReplaceTags in "SP:Bravery (Clerical)" with _
	"cat(Mind Control, ~Clerical, ~Clerical PI 1, ~Clerical - Mind Control), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Command" as "SP:Command (Clerical)"
#ReplaceTags in "SP:Command (Clerical)" with _
	"cat(Mind Control, ~Clerical, ~Clerical PI 2, ~Clerical - Mind Control), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Strengthen Will" as "SP:Strengthen Will (Clerical)"
#ReplaceTags in "SP:Strengthen Will (Clerical)" with _
	"cat(Mind Control, ~Clerical, ~Clerical PI 3, ~Clerical - Mind Control), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
Vigil (Clerical),
	cat(Mind Control, ~Clerical, ~Clerical PI 4, ~Clerical - Mind Control), 
	type(IQ/VH),
	CountAsNeed(Clerical), 
	ident(Clerical), 
	page(S56),
	shortcat(Mi),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 night),
	castingcost(8),
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)
#Clone "SP:Wisdom" as "SP:Wisdom (Clerical)"
#ReplaceTags in "SP:Wisdom (Clerical)" with _
	"cat(Mind Control, ~Clerical, ~Clerical PI 3, ~Clerical - Mind Control), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"


// ***** *****
// Movement Spells
// ***** *****

<Movement:Mo>

Apportation,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S56),
	shortcat(Mo),
	mods(Spells),
	class(Reg./R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(0),
	magery(1),
	needs( AD:Magery = 1, ST:Magery = 1 | ST:Magery Movement = 1 ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
Blink,
	cat(Movement, Gate, ~Wizardly, ~Wizardly - Movement, ~Wizardly - Gate),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S56),
	shortcat(Mo, G),
	mods(Spells),
	class(Blocking),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(5),
	magery(3),
	needs( (AD:Magery = 3, ST:Magery = 3 | ST:Magery Movement = 3 | ST:Magery Gate = 3), ST:IQ >= 13, 10 Colleges ),
	description(Prereq Count: 5 Prerequisites: Magery 3, ST:IQ >= 13, 1 Spell from 10 Colleges)
Blink Other,
	cat(Movement, Gate, ~Wizardly, ~Wizardly - Movement, ~Wizardly - Gate),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S56),
	shortcat(Mo, G),
	mods(Spells),
	class(Blocking),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(6),
	magery(3),
	needs(Blink),
	description(Prereq Count: 6 Prerequisites: Magery 3, Blink)
Deflect Missile,
	cat(Movement, Protection & Warning, ~Wizardly, ~Wizardly - Movement, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S56),
	shortcat(Mo, Pr),
	mods(Spells),
	class(Blocking),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	prereqcount(1),
	magery(1),
	needs(Apportation),
	description(Prereq Count: 1 Prerequisites: Magery 1, Apportation)
// Divert Teleport is in Gate Spells
Ethereal Body,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S57),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(30 sec.),
	duration(10 sec.),
	castingcost(8/4),
	prereqcount(4),
	magery(3),
	needs( (AD:Magery = 3, ST:Magery = 3 | ST:Magery Movement = 3), 6 CO:Movement ),
	description(Prereq Count: 4 Prerequisites: Magery 3, and 6 Movement)
Flight,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S57),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(5/3),
	prereqcount(2),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Movement = 2), Levitation),
	description(Prereq Count: 2 Prerequisites: Magery 2, Levitation)
Glue,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S57),
	shortcat(Mo),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(10 min.),
	castingcost(3/S),
	prereqcount(1),
	magery(0),
	needs(Haste),
	description(Prereq Count: 1 Prerequisites: Haste)
Grease,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S57),
	shortcat(Mo),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(10 min.),
	castingcost(3/S),
	prereqcount(1),
	magery(0),
	needs(Haste),
	description(Prereq Count: 1 Prerequisites: Haste)
Great Haste,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S57),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(10 sec.),
	castingcost(5#),
	prereqcount(1),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Movement = 1), Haste, ST:IQ >= 12 ),
	description(Prereq Count: 1 Prerequisites: Magery 1, Haste, IQ 12+)
Haste,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S57),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(2/pt./H),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
// Hinder is in Body Control Spells
Levitation,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S57),
	shortcat(Mo),
	mods(Spells),
	class(Reg/R-ST/R-Will),
	time(2 sec.),
	duration(1 min.),
	castingcost(1 per 80 lbs./H#),
	prereqcount(1),
	magery(1),
	needs(Apportation),
	description(Prereq Count: 1 Prerequisites: Magery 1, Apportation)
Light Tread,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S57),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(10 min.),
	castingcost(4/1#),
	prereqcount(3),
	magery(1),
	needs(Apportation, Shape Earth),
	description(Prereq Count: 3 Prerequisites: Magery 1, Apportation, Shape Earth)
Lighten Burden,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S58),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(10 min.),
	castingcost(3 or 5/H#),
	prereqcount(1),
	magery(1),
	needs(Apportation),
	description(Prereq Count: 1 Prerequisites: Magery 1, Apportation)
Lockmaster,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S58),
	shortcat(Mo),
	mods(Spells),
	class(Reg/R-Magelock),
	time(10 sec.),
	duration(Perm.),
	castingcost(3),
	prereqcount(1),
	magery(2),
	needs(_
		( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Movement = 2), Apportation ) _
	|	Locksmith _
	),
	description(Prereq Count: 1 Prerequisites: Magery 2, Apportation or Locksmith)
Locksmith,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S58),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/2),
	prereqcount(1),
	magery(1),
	needs(Apportation),
	description(Prereq Count: 1 Prerequisites: Magery 1, Apportation)
Manipulate,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S58),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(4/3#),
	prereqcount(2),
	magery(1),
	needs(Locksmith),
	description(Prereq Count: 2 Prerequisites: Magery 1, Locksmith)
Quick March,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S58),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(1 min.),
	duration(1 day's march),
	castingcost(4#),
	prereqcount(1),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Movement = 1), Haste ),
	description(Prereq Count: 1 Prerequisites: Magery 1, Haste)
Slow,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S58),
	shortcat(Mo),
	mods(Spells),
	class(Regular/R-HT),
	time(3 sec.),
	duration(10 sec.),
	castingcost(5/4),
	prereqcount(2),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Movement = 1), Haste, Hinder ),
	description(Prereq Count: 2 Prerequisites: Magery 1, Haste, Hinder)
Slow Fall,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S58),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 per 50 lbs./H),
	prereqcount(1),
	magery(1),
	needs(Apportation),
	description(Prereq Count: 1 Prerequisites: Magery 1, Apportation)
// Swim is in Water Spells
// Trace Teleport is in Gate Spells
Undo,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S59),
	shortcat(Mo),
	mods(Spells),
	class(Regular/R-Spec.),
	time(1 sec.),
	duration(Instant),
	castingcost(3 or 6#),
	prereqcount(2),
	magery(1),
	needs(Locksmith),
	description(Prereq Count: 2 Prerequisites: Magery 1, Locksmith)
Wallwalker,
	cat(Movement, ~Wizardly, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S59),
	shortcat(Mo),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(1 per 50 lbs./H#),
	prereqcount(1),
	magery(1),
	needs(Apportation),
	description(Prereq Count: 1 Prerequisites: Magery 1, Apportation)


// ***** *****
// Necromantic Spells
// ***** *****

<Necromantic:N>

Astral Block,
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S59),
	shortcat(N),
	mods(Spells),
	class(Area),
	time(2 sec.),
	duration(10 min.),
	castingcost(4/2#),
	prereqcount(16),
	magery(2),
	needs(Summon Spirit, Repel Spirits),
	description(Prereq Count: 16 Prerequisites: Magery 2, Summon Spirit, Repel Spirits)
// Astral Vision is in Knowledge Spells
Banish,
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S59),
	shortcat(N),
	mods(Spells),
	class(Spec./R-Will),
	time(5 sec.),
	duration(Instant),
	castingcost(Varies),
	prereqcount(10),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Necromantic = 1), 10 Colleges),
	description(Prereq Count: 10 Prerequisites: Magery 1, 1 Spell from 10 Colleges)
Command Spirit ([Spirit]),
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S60),
	shortcat(N),
	mods(Spells),
	noresync(yes),
	x(#InputReplace("Select the Spirit type you can Command:", "[Spirit]", , "Command Spirit")),
	class(Regular/R-Will),
	time(2 sec.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(5),
	magery(2),
	needs(Summon Spirit, Turn Spirit),
	description(Prereq Count: 5 Prerequisites: Magery 2, Summon Spirit, Turn Spirit)
Death Vision,
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S60),
	shortcat(N),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 sec.),
	castingcost(2),
	prereqcount(0),
	magery(1),
	needs( AD:Magery = 1, ST:Magery = 1 | ST:Magery Necromantic = 1 ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
Entrap Spirit,
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S60),
	shortcat(N),
	mods(Spells),
	class(Special),
	time(1 sec.),
	duration(5 min.),
	castingcost(Varies),
	prereqcount(11),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Necromantic = 1), 7 CO:Necromantic, Turn Spirit ),
	description(Prereq Count: 11 Prerequisites: Magery 1, 7 Necromantic, Turn Spirit)
//Final Rest is in Healing Spells
Repel Spirits,
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S60),
	shortcat(N),
	mods(Spells),
	class(Area/R-Will),
	time(10 sec.),
	duration(1 hr.),
	castingcost(4/H),
	prereqcount(14),
	magery(1),
	needs(Banish, Turn Spirit),
	description(Prereq Count: 14 Prerequisites: Magery 1, Banish, Turn Spirit)
Sense Spirit,
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S60),
	shortcat(N),
	mods(Spells),
	class(Inform./Area),
	time(1 sec.),
	duration(Instant),
	castingcost(1#),
	prereqcount(1),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Necromantic = 1), Sense Life | Death Vision ),
	description(Prereq Count: 1 Prerequisites: Magery 1, Sense Life or Death Vision)
Summon Spirit,
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S60),
	shortcat(N),
	mods(Spells),
	class(Inform./R-Will),
	time(5 min.),
	duration(1 min.),
	castingcost(20/10#),
	prereqcount(1),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Necromantic = 2), Death Vision ),
	description(Prereq Count: 1 Prerequisites: Magery 2, Death Vision)
Turn Spirit,
	cat(Necromantic, ~Wizardly, ~Wizardly - Necromantic),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S61),
	shortcat(N),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(10 sec.),
	castingcost(4/2#),
	prereqcount(3),
	magery(1),
	needs(Fear, Sense Spirit),
	description(Prereq Count: 3 Prerequisites: Magery 1, Fear, Sense Spirit)


// Clerical Versions

Affect Spirits (Clerical),
	cat(Necromantic, ~Clerical, ~Clerical PI 3, ~Clerical - Necromantic), 
	type(IQ/H),
	CountAsNeed(Clerical), 
	ident(Clerical), 
	page(S59),
	shortcat(N),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(4/2),
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)
#Clone "SP:Astral Block" as "SP:Astral Block (Clerical)"
#ReplaceTags in "SP:Astral Block (Clerical)" with _
	"cat(Necromantic, ~Clerical, ~Clerical PI 4, ~Clerical - Necromantic), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)"
#Clone "SP:Banish" as "SP:Banish (Clerical)"
#ReplaceTags in "SP:Banish (Clerical)" with _
	"cat(Necromantic, ~Clerical, ~Clerical PI 4, ~Clerical - Necromantic), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=4|ST:Holy PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture 4)"
#Clone "SP:Command Spirit ([Spirit])" as "SP:Command Spirit ([Spirit]; Clerical)"
#ReplaceTags in "SP:Command Spirit ([Spirit]; Clerical)" with _
	"cat(Necromantic, ~Clerical, ~Clerical PI 3, ~Clerical - Necromantic), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Entrap Spirit" as "SP:Entrap Spirit (Clerical)"
#ReplaceTags in "SP:Entrap Spirit (Clerical)" with _
	"cat(Necromantic, ~Clerical, ~Clerical PI 5, ~Clerical - Necromantic), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=5|ST:Holy PI=5), 
	magery(PI 5), 
	description(Prereq: Power Investiture 5)"
#Clone "SP:Repel Spirits" as "SP:Repel Spirits (Clerical)"
#ReplaceTags in "SP:Repel Spirits (Clerical)" with _
	"cat(Necromantic, ~Clerical, ~Clerical PI 3, ~Clerical - Necromantic), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Sense Spirit" as "SP:Sense Spirit (Clerical)"
#ReplaceTags in "SP:Sense Spirit (Clerical)" with _
	"cat(Necromantic, ~Clerical, ~Clerical PI 1, ~Clerical - Necromantic), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Summon Spirit" as "SP:Summon Spirit (Clerical)"
#ReplaceTags in "SP:Summon Spirit (Clerical)" with _
	"cat(Necromantic, ~Clerical, ~Clerical PI 2, ~Clerical - Necromantic), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Turn Spirit" as "SP:Turn Spirit (Clerical)"
#ReplaceTags in "SP:Turn Spirit (Clerical)" with _
	"cat(Necromantic, ~Clerical, ~Clerical PI 2, ~Clerical - Necromantic), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
Turn Zombie (Clerical),
	cat(Necromantic, ~Clerical, ~Clerical PI 2, ~Clerical - Necromantic), 
	type(IQ/H),
	CountAsNeed(Clerical), 
	ident(Clerical), 
	page(S61),
	shortcat(N),
	mods(Spells),
	class(Area),
	time(4 sec.),
	duration(1 day),
	castingcost(2),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)


// ***** *****
// Plant Spells
// ***** *****

<Plant:Pl>

// Druidic Versions

Arboreal Immurement (Druidic),
	cat(~Druidic, ~Druidic PI 5, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S61),
	shortcat(Pl),
	mods(Spells),
	class(Regular/R-HT),
	time(3 sec.),
	duration(Indef.#),
	castingcost(8#),
	needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5),
	magery(PI 5),
	description(Prereq: Power Investiture (Druidic) 5)
Conceal (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S61),
	shortcat(Pl),
	mods(Spells),
	class(Area),
	time(4 sec.),
	duration(1 min.),
	castingcost(varies#),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Create Plant (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S61),
	shortcat(Pl),
	mods(Spells),
	class(Area),
	time(sec.=cost),
	duration(Perm.),
	castingcost(Varies),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Forest Warning (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S61),
	shortcat(Pl),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(10 hrs.),
	castingcost(2#/S),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Hide Path (Druidic),
	cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S62),
	shortcat(Pl),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2),
	magery(PI 2),
	description(Prereq: Power Investiture (Druidic) 2)
Identify Plant (Druidic),
	cat(~Druidic, ~Druidic PI 1, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S62),
	shortcat(Pl),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1),
	magery(PI 1),
	description(Prereq: Power Investiture (Druidic) 1)
Plant Control (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S62),
	shortcat(Pl),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/H),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Plant Sense (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S62),
	shortcat(Pl),
	mods(Spells),
	class(Reg/R-Hide Path),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Plant Speech (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S62),
	shortcat(Pl),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Plant Vision (Druidic),
	cat(Plant, Knowledge, ~Druidic, ~Druidic PI 2, ~Druidic - Plant, ~Druidic - Knowledge),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S62),
	shortcat(Pl, K),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(30 sec.),
	castingcost(1/10 yds.),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)
Pollen Cloud (Druidic),
	cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S62),
	shortcat(Pl),
	mods(Spells),
	class(Area/R-HT),
	time(1 sec.),
	duration(5 min.#),
	castingcost(1),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2),
	magery(PI 2),
	description(Prereq: Power Investiture (Druidic) 2)
// Purify Earth is in Earth Spells
Seek Plant (Druidic),
	cat(~Druidic, ~Druidic PI 1, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S62),
	shortcat(Pl),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1),
	magery(PI 1),
	description(Prereq: Power Investiture (Druidic) 1)
Shape Plant (Druidic),
	cat(~Druidic, ~Druidic PI 2, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S63),
	shortcat(Pl),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(1 min.),
	castingcost(3/1#),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2),
	magery(PI 2),
	description(Prereq: Power Investiture (Druidic) 2)
Tangle Growth (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S63),
	shortcat(Pl),
	mods(Spells),
	class(Area),
	time(2 sec.),
	duration(1 min.),
	castingcost(1 or 2#/H),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Walk Through Plants (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S63),
	shortcat(Pl),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/1),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Walk Through Wood (Druidic),
	cat(~Druidic, ~Druidic PI 3, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S63),
	shortcat(Pl),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 sec.),
	castingcost(3/2),
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3),
	magery(PI 3),
	description(Prereq: Power Investiture (Druidic) 3)
Wither Plant (Druidic),
	cat(~Druidic, ~Druidic PI 4, ~Druidic - Plant),
	type(IQ/H),
	countasneed(Druidic),
	ident(Druidic),
	page(S63),
	shortcat(Pl),
	mods(Spells),
	class(Area/R-HT),
	time(10 sec.),
	duration(Perm.),
	castingcost(2),
	prereqcount(5),
	needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4),
	magery(PI 4),
	description(Prereq: Power Investiture (Druidic) 4)


// ***** *****
// Protection & Warning Spells
// ***** *****

<Protection & Warning:Pr>

Armor,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S63),
	shortcat(Pr),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(1),
	magery(2),
	needs(Shield),
	description(Prereq Count: 1 Prerequisites: Magery 2, Shield)
Bladeturning,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S63),
	shortcat(Pr),
	mods(Spells),
	class(Regular/R-Spec),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/2),
	prereqcount(1),
	magery(2),
	needs(Shield),
	description(Prereq Count: 1 Prerequisites: Magery 2, Shield)
// Coolness is in Water Spells
// Deflect Missile is in Movement Spells
// Detect Poison is in Healing Spells
Iron Arm,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S64),
	shortcat(Pr),
	mods(Spells),
	class(Blocking),
	time(1 sec.),
	duration(Instant),
	castingcost(1),
	prereqcount(4),
	magery(2),
	needs(Resist Pain, ST:DX >= 11),
	description(Prereq Count: 4 Prerequisites: Magery 2, Resist Pain, DX 11+)
Magelock,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S64),
	shortcat(Pr),
	mods(Spells),
	class(Regular),
	time(4 sec.),
	duration(6 hrs.),
	castingcost(3/2),
	prereqcount(0),
	magery(1),
	needs( AD:Magery = 1, ST:Magery = 1 | ST:Magery Protection & Warning = 1 ),
	description(Prereq Count: 0 Prerequisites: Magery 1)
Missile Shield,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S64),
	shortcat(Pr),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(5/2),
	prereqcount(1),
	magery(2),
	needs( Apportation | Shield ),
	description(Prereq Count: 1 Prerequisites: Magery 2, Apportation or Shield)
Mystic Mist,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S64),
	shortcat(Pr),
	mods(Spells),
	class(Area),
	time(5 min.),
	duration(10 hrs.),
	castingcost(1/S),
	prereqcount(1),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Protection & Warning = 1), (Watchdog | Shield) ),
	description(Prereq Count: 1 Prerequisites: Magery 1, and either Watchdog or Shield)
Nightingale,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S64),
	shortcat(Pr),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(10 hrs.),
	castingcost(2/2),
	prereqcount(1),
	magery(0),
	needs(Sense Danger),
	description(Prereq Count: 1 Prerequisites: Sense Danger)
// Protect Animal is in Animal Spells
Protection from Evil,
	cat(Protection & Warning, Meta-Spells, ~Wizardly, ~Wizardly - Protection & Warning, ~Wizardly - Meta-Spells),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S64),
	shortcat(Pr, Me),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(1-5/half),
	prereqcount(XX),
	magery(3),
	needs( ( (AD:Magery = 3 | AD:Bardic Talent = 3) | ST:Magery Protection & Warning = 3 | ST:Magery Meta-Spells = 3 ) , Sense Evil ),
	description(Prereq Count: XX Prerequisites: Magery 3, Sense Evil)
Reflect Gaze,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/VH),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S65),
	shortcat(Pr),
	mods(Spells),
	class(Blocking/R-Spec),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(3),
	magery(0),
	needs(Mirror),
	description(Prereq Count: 3 Prerequisites: Mirror)
// Resist Acid is in Water Spells 
// Resist Disease is in Healing Spells 
// Resist Lightning is in Weather Spells
// Resist Poison is in Healing Spells
// Resist Sound is in Sound Spells
// Resist Water is in Water Spells
Sense Danger,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S65),
	shortcat(Pr),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(3),
	prereqcount(0),
	magery(0),
	needs(Sense Foes),
	description(Prereq Count: 0 Prerequisites: Sense Foes)
Shield,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S65),
	shortcat(Pr),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(Varies),
	prereqcount(0),
	magery(2),
	needs( AD:Magery = 2, ST:Magery = 2 | ST:Magery Protection & Warning = 2 ),
	description(Prereq Count: 0 Prerequisites: Magery 2)
Teleport Shield,
	cat(Protection & Warning, Gate, ~Wizardly, ~Wizardly - Protection & Warning, ~Wizardly - Gate),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S65),
	shortcat(Pr, G),
	mods(Spells),
	class(Area),
	time(10 sec.),
	duration(1 hr.),
	castingcost(1/S#),
	prereqcount(7),
	magery(2),
	needs(Watchdog, Spell Shield),
	description(Prereq Count: 7 Prerequisites: Magery 2, Watchdog, Spell Shield)
// Umbrella is in Water Spells
// Warmth is in Fire Spells
Watchdog,
	cat(Protection & Warning, ~Wizardly, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S65),
	shortcat(Pr),
	mods(Spells),
	class(Area),
	time(10 sec.),
	duration(10 hrs.),
	castingcost(1/1),
	prereqcount(1),
	magery(0),
	needs(Sense Danger),
	description(Prereq Count: 1 Prerequisites: Sense Danger)

	
// Clerical Versions

#Clone "SP:Armor" as "SP:Armor (Clerical)"
#ReplaceTags in "SP:Armor (Clerical)" with _
	"cat(Protection & Warning, ~Clerical, ~Clerical PI 1, ~Clerical - Protection & Warning), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Protection from Evil" as "SP:Protection from Evil (Clerical)"
#ReplaceTags in "SP:Protection from Evil (Clerical)" with _
	"cat(Protection & Warning, Meta-Spells, ~Clerical, ~Clerical PI 2, ~Clerical - Protection & Warning, ~Clerical - Meta-Spells), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Watchdog" as "SP:Watchdog (Clerical)"
#ReplaceTags in "SP:Watchdog (Clerical)" with _
	"cat(Protection & Warning, ~Clerical, ~Clerical PI 1, ~Clerical - Protection & Warning), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"

// Druidic Versions

#Clone "SP:Mystic Mist" as "SP:Mystic Mist (Druidic)"
#ReplaceTags in "SP:Mystic Mist (Druidic)" with _
	"cat(Protection & Warning, ~Druidic, ~Druidic PI 2, ~Druidic - Protection & Warning), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Protection from Evil" as "SP:Protection from Evil (Druidic)"
#ReplaceTags in "SP:Protection from Evil (Druidic)" with _
	"cat(Protection & Warning, Meta-Spells, ~Druidic, ~Druidic PI 2, ~Druidic - Protection & Warning, ~Druidic - Meta-Spells), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
Weather Dome,
	cat(Protection & Warning, Weather, ~Druidic, ~Druidic PI 2, ~Druidic - Protection & Warning, ~Druidic - Weather), 
	type(IQ/H),
	CountAsNeed(Druidic), 
	ident(Druidic), 
	page(S65),
	shortcat(Pr, We),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(6 hrs.),
	castingcost(3/2),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)


// ***** *****
// Sound Spells
// ***** *****

<Sound:S>

// Concussion is in Air Spells
Delayed Message,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S66),
	shortcat(S),
	mods(Spells),
	class(Area),
	time(4 sec.),
	duration(Indef.#),
	castingcost(3#),
	prereqcount(3),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Sound = 1 | AD:Bardic Talent = 1), Sense Life, Voices ),
	description(Prereq Count: 3 Prerequisites: Magery 1, Sense Life, Voices)
Far-Hearing,
	cat(Sound, Knowledge, ~Wizardly, ~Wizardly - Sound, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S66),
	shortcat(S, K),
	mods(Spells),
	class(Information),
	time(3 sec.),
	duration(1 min.),
	castingcost(4/2),
	taboo(DI:Hard of Hearing),
	prereqcount(4),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Sound = 1 | ST:Magery Knowledge = 1 | AD:Bardic Talent = 1) , 4 CO:Sound ),
	description(Prereq Count: 4 Prerequisites: Magery 1, 4 Sound)
Garble,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S66),
	shortcat(S),
	mods(Spells),
	class(Regular/R-Will),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(2),
	magery(0),
	needs(Voices),
	description(Prereq Count: 2 Prerequisites: Voices)
Great Voice,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S66),
	shortcat(S),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(3/1),
	prereqcount(3),
	magery(0),
	needs(Voices, Thunderclap),
	description(Prereq Count: 3 Prerequisites: Voices, Thunderclap)
Hush,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S66),
	shortcat(S),
	mods(Spells),
	class(Regular/R-Will),
	time(2 sec.),
	duration(10 sec.#),
	castingcost(2/1),
	prereqcount(2),
	magery(0),
	needs(Silence),
	description(Prereq Count: 2 Prerequisites: Silence)
// Keen Hearing is in Mind Control Spells
Mage-Stealth,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S66),
	shortcat(S),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(3),
	magery(0),
	needs(Hush),
	description(Prereq Count: 3 Prerequisites: Hush)
Message,
	cat(Sound, Communication & Empathy, ~Wizardly, ~Wizardly - Sound, ~Wizardly - Communication & Empathy),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S67),
	shortcat(S, C),
	mods(Spells),
	class(Regular/R-spell),
	time(Varies),
	duration(Varies),
	castingcost(1/15 sec.),
	prereqcount(7),
	magery(1),
	needs(Great Voice, Seeker),
	description(Prereq Count: 7 Prerequisites: Great Voice, Seeker)
Noise,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S67),
	shortcat(S),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(5 sec.),
	castingcost(4/2),
	prereqcount(3),
	magery(0),
	needs(Wall of Silence),
	description(Prereq Count: 3 Prerequisites: Wall of Silence)
Resist Sound,
	cat(Sound, Protection & Warning, ~Wizardly, ~Wizardly - Sound, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S67),
	shortcat(S, Pr),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(4),
	magery(0),
	needs(4 CO:Sound),
	description(Prereq Count: 4 Prerequisites: 4 Sound)
Silence,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S67),
	shortcat(S),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(1),
	magery(0),
	needs(Sound),
	description(Prereq Count: 1 Prerequisites: Sound)
Silver Tongue,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S67),
	shortcat(S),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(6),
	magery(0),
	needs(Voices, 5 CO:Mind Control),
	description(Prereq Count: 6 Prerequisites: Voices, 5 Mind Control)
Sound,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S67),
	shortcat(S),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Varies),
	castingcost(Varies),
	prereqcount(0),
	magery(0),
	needs( AD:Magery 0 | AD:Bardic Talent ),
	description(Prereq Count: 0)
Sound Jet,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S67),
	shortcat(S),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 sec.),
	castingcost(1 to 4/S),
	prereqcount(4),
	magery(0),
	needs(Great Voice),
	damage(HT-(~1-4)),
	damtype(stun),
	skillused(ST:DX-4, SK:Innate Attack (Beam), SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Breath)-2),
	parry(No),
	reach(~1),
	notes(~1-4en),
	itemnotes({~1-4 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 4 Prerequisites: Great Voice)
Thunderclap,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S67),
	shortcat(S),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(1),
	magery(0),
	needs(Sound),
	description(Prereq Count: 1 Prerequisites: Sound)
Voices,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S68),
	shortcat(S),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(1),
	magery(0),
	needs(Sound),
	description(Prereq Count: 1 Prerequisites: Sound)
Wall of Silence,
	cat(Sound, ~Wizardly, ~Wizardly - Sound),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S68),
	shortcat(S),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(2),
	magery(0),
	needs(Silence),
	description(Prereq Count: 2 Prerequisites: Silence)

	
// Clerical Versions

#Clone "SP:Great Voice" as "SP:Great Voice (Clerical)"
#ReplaceTags in "SP:Great Voice (Clerical)" with _
	"cat(Sound, ~Clerical, ~Clerical PI 2, ~Clerical - Sound), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Silence" as "SP:Silence (Clerical)"
#ReplaceTags in "SP:Silence (Clerical)" with _
	"cat(Sound, ~Clerical, ~Clerical PI 1, ~Clerical - Sound), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Silver Tongue" as "SP:Silver Tongue (Clerical)"
#ReplaceTags in "SP:Silver Tongue (Clerical)" with _
	"cat(Sound, ~Clerical, ~Clerical PI 3, ~Clerical - Sound), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Thunderclap" as "SP:Thunderclap (Clerical)"
#ReplaceTags in "SP:Thunderclap (Clerical)" with _
	"cat(Sound, ~Clerical, ~Clerical PI 1, ~Clerical - Sound), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"

// Druidic Versions

#Clone "SP:Thunderclap" as "SP:Thunderclap (Druidic)"
#ReplaceTags in "SP:Thunderclap (Druidic)" with _
	"cat(Sound, ~Druidic, ~Druidic PI 1, ~Druidic - Sound), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
	

// ***** *****
// Water Spells
// ***** *****

<Water:Wa>

Breathe Water,
	cat(Water, Air, ~Wizardly, ~Wizardly - Water, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S68),
	shortcat(Wa, Ai),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(6),
	magery(0),
	needs(Create Air, Destroy Water),
	description(Prereq Count: 6 Prerequisites: Create Air, Destroy Water)
Coolness,
	cat(Water, Protection & Warning, ~Wizardly, ~Wizardly - Water, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S68),
	shortcat(Wa, Pr),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(1 hr.),
	castingcost(2/1),
	prereqcount(5),
	magery(0),
	needs(Cold),
	description(Prereq Count: 5 Prerequisites: Cold)
Create Water,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S68),
	shortcat(Wa),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(Perm.),
	castingcost(2/gal.),
	prereqcount(2),
	magery(0),
	needs(Purify Water),
	description(Prereq Count: 2 Prerequisites: Purify Water)
Dehydrate,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S68),
	shortcat(Wa),
	mods(Spells),
	class(Regular/R-HT),
	time(2 sec.),
	duration(Perm.),
	castingcost(1 to 3),
	prereqcount(5),
	magery(0),
	needs(5 Water, Destroy Water),
	description(Prereq Count: 5 Prerequisites: 5 Water, Destroy Water)
Destroy Water,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S68),
	shortcat(Wa),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(Perm.),
	castingcost(3/S),
	prereqcount(3),
	magery(0),
	needs(Create Water),
	description(Prereq Count: 3 Prerequisites: Create Water)
// Fog is in Weather Spells
Freeze,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S68),
	shortcat(Wa),
	mods(Spells),
	class(Regular),
	time(10 sec.),
	duration(Perm.),
	castingcost(Varies),
	prereqcount(4),
	magery(0),
	needs(Shape Water),
	description(Prereq Count: 4 Prerequisites: Shape Water)
Frostbite,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S69),
	shortcat(Wa),
	mods(Spells),
	class(Regular/R-HT),
	time(3 sec.),
	duration(Perm.),
	castingcost(1 to 3),
	prereqcount(6),
	magery(0),
	needs(Cold, Freeze),
	description(Prereq Count: 6 Prerequisites: Cold, Freeze)
// Hail is in Weather Spells
Ice Dagger,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S69),
	shortcat(Wa),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(1 to Magery#),
	prereqcount(5),
	magery(0),
	needs(Ice Sphere | Water Jet),
	damage(~1d-1),
	damtype(imp),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(30),
	rangemax(60),
	acc(3),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 5 Prerequisites: Ice Sphere or Water Jet)
Ice Sphere,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S69),
	shortcat(Wa),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(1 to Magery#),
	prereqcount(4),
	magery(0),
	needs(Shape Water),
	damage(~1d),
	damtype(cr),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(40),
	rangemax(80),
	acc(2),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 4 Prerequisites: Shape Water)
Icy Missiles,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S69),
	shortcat(Wa),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(4/2),
	prereqcount(4),
	magery(0),
	needs(Icy Weapon),
	description(Prereq Count: 4 Prerequisites: Icy Weapon)
Icy Weapon,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S69),
	shortcat(Wa),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(3/1),
	prereqcount(3),
	magery(0),
	needs(Create Water),
	description(Prereq Count: 3 Prerequisites: Create Water)
Purify Water,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S70),
	shortcat(Wa),
	mods(Spells),
	class(Special),
	time(5-10 sec/gal#),
	duration(Perm.),
	castingcost(1/gal.),
	prereqcount(1),
	magery(0),
	needs(Seek Water),
	description(Prereq Count: 1 Prerequisites: Seek Water)
Resist Water,
	cat(Water, Protection & Warning, ~Wizardly, ~Wizardly - Water, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S70),
	shortcat(Wa, Pr),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(2),
	magery(2),
	needs( Shape Water, Destroy Water | Umbrella ),
	description(Prereq Count: 2 Prerequisites: Magery 2, Shape Water, Destroy Water or Umbrella)
Seek Water,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S70),
	shortcat(Wa),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(Instant),
	castingcost(2),
	prereqcount(0),
	magery(0),
	needs(AD:Magery 0),
	description(Prereq Count: 0)
Shape Water,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S70),
	shortcat(Wa),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(1/1#),
	prereqcount(3),
	magery(0),
	needs(Create Water),
	description(Prereq Count: 3 Prerequisites: Create Water)
Swim,
	cat(Water, Movement, ~Wizardly, ~Wizardly - Water, ~Wizardly - Movement),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S70),
	shortcat(Wa, Mo),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(6/3),
	prereqcount(6),
	magery(1),
	needs(Shape Water, Levitation),
	description(Prereq Count: 6 Prerequisites: Magery 1, Shape Water, Levitation)
Umbrella,
	cat(Water, Protection & Warning, ~Wizardly, ~Wizardly - Water, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S70),
	shortcat(Wa, Pr),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(10 min.),
	castingcost(1/1),
	prereqcount(1),
	magery(2),
	needs( Shape Water | Shield ),
	description(Prereq Count: 1 Prerequisites: Magery 2, Shape Water or Shield)
Walk on Water,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S71),
	shortcat(Wa),
	mods(Spells),
	class(Regular),
	time(4 sec.),
	duration(1 min.),
	castingcost(3/2),
	prereqcount(4),
	magery(0),
	needs(Shape Water),
	description(Prereq Count: 4 Prerequisites: Shape Water)
Water Jet,
	cat(Water, ~Wizardly, ~Wizardly - Water),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S71),
	shortcat(Wa),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 sec.),
	castingcost(1 to 3),
	prereqcount(4),
	magery(0),
	needs(Shape Water),
	damage(~1d),
	damtype(knock),
	skillused(ST:DX-4, SK:Innate Attack (Beam), SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile)-2, SK:Innate Attack (Breath)-2),
	parry(No),
	reach(~1),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 4 Prerequisites: Shape Water)
Water Vision,
	cat(Water, Knowledge, ~Wizardly, ~Wizardly - Water, ~Wizardly - Knowledge),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S71),
	shortcat(Wa, K),
	mods(Spells),
	class(Information),
	time(1 sec.),
	duration(30 sec.),
	castingcost(1/1#),
	prereqcount(4),
	magery(0),
	needs(Shape Water),
	description(Prereq Count: 4 Prerequisites: Shape Water)

	
// Clerical Versions

#Clone "SP:Breathe Water" as "SP:Breathe Water (Clerical)"
#ReplaceTags in "SP:Breathe Water (Clerical)" with _
	"cat(Water, Air, ~Clerical, ~Clerical PI 3, ~Clerical - Water, ~Clerical - Air), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=3|ST:Holy PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture 3)"
#Clone "SP:Coolness" as "SP:Coolness (Clerical)"
#ReplaceTags in "SP:Coolness (Clerical)" with _
	"cat(Water, Protection & Warning, ~Clerical, ~Clerical PI 1, ~Clerical - Water, ~Clerical - Protection & Warning), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
#Clone "SP:Create Water" as "SP:Create Water (Clerical)"
#ReplaceTags in "SP:Create Water (Clerical)" with _
	"cat(Water, ~Clerical, ~Clerical PI 2, ~Clerical - Water), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
#Clone "SP:Purify Water" as "SP:Purify Water (Clerical)"
#ReplaceTags in "SP:Purify Water (Clerical)" with _
	"cat(Water, ~Clerical, ~Clerical PI 1, ~Clerical - Water), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"
Resist Acid (Clerical),
	cat(Water, Protection & Warning, ~Clerical, ~Clerical PI 2, ~Clerical - Water, ~Clerical - Protection & Warning), 
	type(IQ/H),
	CountAsNeed(Clerical), 
	ident(Clerical), 
	page(S70),
	shortcat(Wa, Pr),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/H#),
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)
#Clone "SP:Umbrella" as "SP:Umbrella (Clerical)"
#ReplaceTags in "SP:Umbrella (Clerical)" with _
	"cat(Water, Protection & Warning, ~Clerical, ~Clerical PI 1, ~Clerical - Water, ~Clerical - Protection & Warning), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=1|ST:Holy PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture 1)"

// Druidic Versions

#Clone "SP:Breathe Water" as "SP:Breathe Water (Druidic)"
#ReplaceTags in "SP:Breathe Water (Druidic)" with _
	"cat(Water, Air, ~Druidic, ~Druidic PI 3, ~Druidic - Water, ~Druidic - Air), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Coolness" as "SP:Coolness (Druidic)"
#ReplaceTags in "SP:Coolness (Druidic)" with _
	"cat(Water, Protection & Warning, ~Druidic, ~Druidic PI 1, ~Druidic - Water, ~Druidic - Protection & Warning), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Freeze" as "SP:Freeze (Druidic)"
#ReplaceTags in "SP:Freeze (Druidic)" with _
	"cat(Water, ~Druidic, ~Druidic PI 3, ~Druidic - Water), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Frostbite" as "SP:Frostbite (Druidic)"
#ReplaceTags in "SP:Frostbite (Druidic)" with _
	"cat(Water, ~Druidic, ~Druidic PI 4, ~Druidic - Water), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture (Druidic) 4)"
Geyser (Druidic),
	cat(Water, ~Druidic, ~Druidic PI 6, ~Druidic - Water), 
	type(IQ/VH),
	CountAsNeed(Druidic), 
	ident(Druidic), 
	page(S69),
	shortcat(Wa),
	mods(Spells),
	class(Area),
	time(5 sec.),
	duration(1 sec.),
	castingcost(5/2),
	needs(AD:Power Investiture (Druidic)=6|ST:Druidic PI=6), 
	magery(PI 6), 
	description(Prereq: Power Investiture (Druidic) 6)
#Clone "SP:Purify Water" as "SP:Purify Water (Druidic)"
#ReplaceTags in "SP:Purify Water (Druidic)" with _
	"cat(Water, ~Druidic, ~Druidic PI 1, ~Druidic - Water), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Seek Water" as "SP:Seek Water (Druidic)"
#ReplaceTags in "SP:Seek Water (Druidic)" with _
	"cat(Water, ~Druidic, ~Druidic PI 1, ~Druidic - Water), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Shape Water" as "SP:Shape Water (Druidic)"
#ReplaceTags in "SP:Shape Water (Druidic)" with _
	"cat(Water, ~Druidic, ~Druidic PI 2, ~Druidic - Water), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)"
#Clone "SP:Swim" as "SP:Swim (Druidic)"
#ReplaceTags in "SP:Swim (Druidic)" with _
	"cat(Water, Movement, ~Druidic, ~Druidic PI 3, ~Druidic - Water, ~Druidic - Movement), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Umbrella" as "SP:Umbrella (Druidic)"
#ReplaceTags in "SP:Umbrella (Druidic)" with _
	"cat(Water, Protection & Warning, ~Druidic, ~Druidic PI 1, ~Druidic - Water, ~Druidic - Protection & Warning), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=1|ST:Druidic PI=1), 
	magery(PI 1), 
	description(Prereq: Power Investiture (Druidic) 1)"
#Clone "SP:Water Vision" as "SP:Water Vision (Druidic)"
#ReplaceTags in "SP:Water Vision (Druidic)" with _
	"cat(Water, Knowledge, ~Druidic, ~Druidic PI 3, ~Druidic - Water, ~Druidic - Knowledge), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"

	
// ***** *****
// Weather Spells
// ***** *****

<Weather:We>

Explosive Lightning,
	cat(Weather, Air, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S71),
	shortcat(We, Ai),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(2 to 2xMagery#),
	prereqcount(7),
	magery(1),
	needs(Lightning),
	damage(~1d-1),
	damtype(burn ex),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(50),
	rangemax(100),
	acc(3),
	notes(~2-6en),
	itemnotes({~2-6 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 7 Prerequisites: Magery 1, Lightning)
Lightning,
	cat(Weather, Air, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S71),
	shortcat(We, Ai),
	mods(Spells),
	class(Missile),
	time(1 to 3 sec.),
	duration(Instant),
	castingcost(1 to Magery#),
	prereqcount(6),
	magery(1),
	needs( (AD:Magery = 1, ST:Magery = 1 | ST:Magery Weather = 1 | ST:Magery Air = 1), 6 CO:Air ),
	damage(~1d-1),
	damtype(burn),
	skillused(ST:DX-4, SK:Innate Attack (Breath)-2, SK:Innate Attack (Gaze)-2, SK:Innate Attack (Projectile), SK:Innate Attack (Beam)-2),
	parry(No),
	rangehalfdam(50),
	rangemax(100),
	acc(3),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 6 Prerequisites: Magery 1, 6 Air)
Lightning Missiles,
	cat(Weather, Air, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S72),
	shortcat(We, Ai),
	mods(Spells),
	class(Regular),
	time(3 sec.),
	duration(1 min.),
	castingcost(4/2#),
	prereqcount(8),
	magery(2),
	needs(Lightning Weapon),
	description(Prereq Count: 8 Prerequisites: Magery 2, Lightning Weapon)
Lightning Weapon,
	cat(Weather, Air, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S72),
	shortcat(We, Ai),
	mods(Spells),
	class(Regular),
	time(2 sec.),
	duration(1 min.),
	castingcost(4/1),
	prereqcount(7),
	magery(2),
	needs( (AD:Magery = 2, ST:Magery = 2 | ST:Magery Weather = 2 | ST:Magery Air = 2), Lightning ),
	description(Prereq Count: 7 Prerequisites: Magery 2, Lightning)
Resist Lightning,
	cat(Weather, Air, Protection & Warning, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air, ~Wizardly - Protection & Warning),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S72),
	shortcat(We, Ai, Pr),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/1),
	prereqcount(6),
	magery(0),
	needs(6 CO:Air),
	description(Prereq Count: 6 Prerequisites: 6 Air)
Shocking Touch,
	cat(Weather, Air, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S72),
	shortcat(We, Ai),
	mods(Spells),
	class(Melee),
	time(1 sec.),
	duration(Instant),
	castingcost(1 to 3),
	prereqcount(7),
	magery(1),
	needs(Lightning),
	mode(touch|staff),
	damage(~1d+1),
	damtype(burn),
	skillused(ST:DX, SK:Brawling, SK:Boxing, SK:Karate, SK:Judo, SK:Sumo Wrestling, SK:Wrestling|SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2),
	parry(No),
	reach(C),
	notes(~1-3en),
	itemnotes({~1-3 energy. Multiply spell effect based on enegy spent.}),
	description(Prereq Count: 7 Prerequisites: Magery 1, Lightning)
Spark Cloud,
	cat(Weather, Air, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S72),
	shortcat(We, Ai),
	mods(Spells),
	class(Area),
	time(1 to 5 sec.),
	duration(10 sec.),
	castingcost(1 to 5/S),
	prereqcount(7),
	magery(1),
	needs(Shape Air, Lightning),
	description(Prereq Count: 7 Prerequisites: Magery 1, Shape Air, Lightning)
Spark Storm,
	cat(Weather, Air, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S72),
	shortcat(We, Ai),
	mods(Spells),
	class(Area),
	time(Instant#),
	duration(1 min.#),
	castingcost(2, 4, or 6/H),
	prereqcount(7),
	magery(1),
	needs(Windstorm, Lightning),
	description(Prereq Count: 7 Prerequisites: Magery 1, Windstorm, Lightning)
Wall of Lightning,
	cat(Weather, Air, ~Wizardly, ~Wizardly - Weather, ~Wizardly - Air),
	type(IQ/H),
	countasneed(Wizardly),
	ident(Wizardly),
	page(S72),
	shortcat(We, Ai),
	mods(Spells),
	class(Regular),
	time(1 sec.),
	duration(1 min.),
	castingcost(2 to 6/S),
	prereqcount(7),
	magery(1),
	needs(Lightning),
	description(Prereq Count: 7 Prerequisites: Magery 1, Lightning)
// Weather Dome is in Protection & Warning Spells

	
// Clerical Versions

#Clone "SP:Resist Lightning" as "SP:Resist Lightning (Clerical)"
#ReplaceTags in "SP:Resist Lightning (Clerical)" with _
	"cat(Weather, Air, Protection & Warning, ~Clerical, ~Clerical PI 2, ~Clerical - Weather, ~Clerical - Air, ~Clerical - Protection & Warning), 
	CountAsNeed(Clerical), 
	ident(Clerical), 
	prereqcount(), 
	needs(AD:Power Investiture=2|ST:Holy PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture 2)"
	
// Druidic Versions

Fog (Druidic),
	cat(Weather, Water, ~Druidic, ~Druidic PI 2, ~Druidic - Weather, ~Druidic - Water), 
	type(IQ/H),
	CountAsNeed(Druidic), 
	ident(Druidic), 
	page(S71),
	shortcat(We, Wa),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(2/H),
	needs(AD:Power Investiture (Druidic)=2|ST:Druidic PI=2), 
	magery(PI 2), 
	description(Prereq: Power Investiture (Druidic) 2)
Hail (Druidic),
	cat(Weather, Water, ~Druidic, ~Druidic PI 4, ~Druidic - Weather, ~Druidic - Water), 
	type(IQ/H),
	CountAsNeed(Druidic), 
	ident(Druidic), 
	page(S71),
	shortcat(We, Wa),
	mods(Spells),
	class(Area),
	time(1 sec.),
	duration(1 min.),
	castingcost(1/5/S#),
	needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture (Druidic) 4)
#Clone "SP:Lightning" as "SP:Lightning (Druidic)"
#ReplaceTags in "SP:Lightning (Druidic)" with _
	"cat(Weather, Air, ~Druidic, ~Druidic PI 4, ~Druidic - Weather, ~Druidic - Air), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=4|ST:Druidic PI=4), 
	magery(PI 4), 
	description(Prereq: Power Investiture (Druidic) 4)"
#Clone "SP:Resist Lightning" as "SP:Resist Lightning (Druidic)"
#ReplaceTags in "SP:Resist Lightning (Druidic)" with _
	"cat(Weather, Air, Protection & Warning, ~Druidic, ~Druidic PI 3, ~Druidic - Weather, ~Druidic - Air, ~Druidic - Protection & Warning), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=3|ST:Druidic PI=3), 
	magery(PI 3), 
	description(Prereq: Power Investiture (Druidic) 3)"
#Clone "SP:Spark Storm" as "SP:Spark Storm (Druidic)"
#ReplaceTags in "SP:Spark Storm (Druidic)" with _
	"cat(Weather, Air, ~Druidic, ~Druidic PI 5, ~Druidic - Weather, ~Druidic - Air), 
	CountAsNeed(Druidic), 
	ident(Druidic), 
	prereqcount(), 
	needs(AD:Power Investiture (Druidic)=5|ST:Druidic PI=5), 
	magery(PI 5), 
	description(Prereq: Power Investiture (Druidic) 5)"
	
	
// #INSERTIONPOINT#                                                                                                              //
// #INSERTIONPOINT# Everything from Emily's "Dungeon Fantasy RPG - Equipment.gdf" inserted below, down to next #INSERTIONPOINT#  //
// #INSERTIONPOINT#                                                                                                              //


********************************************************************************************************\[STOP]
[ATTRIBUTES]
*******************************************************************************************************\[START]
EnchantmentEnergyMultiplier, basevalue(1), display(no), hide(yes)
EnchantmentSlowAndSureCost, basevalue(20), display(no), hide(yes)
EnchantmentQuickAndDirtyThreshold, basevalue(100), display(no), hide(yes)
EnchantmentQuickAndDirtyCost, basevalue(1), display(no), hide(yes)

[EQUIPMENT]

<_New Equipment>
_New Equipment, noresync(yes),_
		displaycost(varies),_
		displayweight(varies),_
		techlvl([techlevel]),_
		basecost([cost]),_
		baseweight([weight]),_
		lc([legalityclass]),_
		mods(Equipment),_
	x(_
		#InputToTagReplace("Please enter the name of this piece of equipment:", name, , "New Equipment"),_
		#InputReplace("Please enter the Tech Level of this piece of equipment:", "[techlevel]", , "New Equipment"),_
		#InputReplace("Please enter the Cost of this piece of equipment. DO NOT include a dollar sign or comma:", "[cost]", , "New Equipment"),_
		#InputReplace("Please enter the Weight of this piece of equipment:", "[weight]", , "New Equipment"),_
		#InputReplace("Please enter the Legality Class of this piece of equipment:", "[legalityclass]", , "New Equipment"),_
		#edit)

_New Armor, noresync(yes),_
		displaycost(varies),_
		displayweight(varies),_
		techlvl([techlevel]),_
		basecost([cost]),_
		baseweight([weight]),_
		lc([legalityclass]),_
		location(%locationlist%),_
		dr([damageresistance]),_
		notes([notes]),_
		mods(Equipment, Armor),_
	x(_
		#InputToTagReplace("Please enter the name of this piece of armor:", name, , "New Armor"),_
		#InputReplace("Please enter the Tech Level of this piece of armor:", "[techlevel]", , "New Armor"),_
		#InputReplace("Please enter the Cost of this piece of armor. DO NOT include a dollar sign or comma:", "[cost]", , "New Armor"),_
		#InputReplace("Please enter the Weight of this piece of armor:", "[weight]", , "New Armor"),_
		#InputReplace("Please enter the Legality Class of this piece of armor:", "[legalityclass]", , "New Armor"),_
		#InputReplace("Please enter the Damage Resistance of this piece of armor:", "[damageresistance]", , "New Armor"),_
		#ChoiceList(_
				name(location),_
				title(_New Armor),_
				text(Choose the locations covered by this piece of armor:),_
				picksallowed(atleast 1),_
				method(bynumber),_
				list(_
					"all",_
					"arms",_
					"eyes",_
					"face",_
					"feet",_
					"full suit",_
					"groin",_
					"hands",_
					"head",_
					"legs",_
					"limbs",_
					"neck",_
					"skull",_
					"torso",_
					"right leg",_
					"left leg",_
					"right foot",_
					"left foot",_
					"right arm",_
					"left arm",_
					"right hand",_
					"left hand",_
					"right eye",_
					"left eye"_
					)_
				),_
		#edit)


_New Melee Weapon, noresync(yes),_
		displaycost(varies),_
		displayweight(varies),_
		techlvl([techlevel]),_
		basecost([cost]),_
		baseweight([weight]),_
		lc([legalityclass]),_
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),_
		damtype([damagetype]),_
		armordivisor([armordivisor]),_
		reach([reach]),_
		parry([parry]),_
		minst([minimumst]%usealiaslist%),_
		skillused([skillused]),_
		mods(Equipment, Melee Quality, Weapon Quality),_
	x(_
		#InputToTagReplace("Please enter the name of this hand weapon:", name, " ", "New Melee Weapon"),_
		#InputReplace("Please enter the Tech Level of this hand weapon:", "[techlevel]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the Cost of this hand weapon. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the Weight of this hand weapon:", "[weight]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the Legality Class of this hand weapon:", "[legalityclass]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armor divisors or damage type:", "[damage]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the parry for this hand weapon; Parry should be a numerical entry as seen on the Weapons Tables (e.g. +2, basecost(0), or -1):", "[parry]", "0", "New Melee Weapon"),_
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", " ", "New Melee Weapon"),_
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", " ", "New Melee Weapon"),_
		#ChoiceList(_
					name(UnarmedDamageBonus),_
					title(New Melee Weapon: Unarmed Damage Bonus),_
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),_
					picksallowed(atleast 1, upto 3),_
					method(bynumber),_
					default(1),_
					list(_
						"_N/A",_
						"Brawling",_
						"Boxing",_
						"Karate" _
						),_
					aliaslist(_
							"0",_
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},_
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},_
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),_
		#ChoiceList(_
				name(Use),_
				title(New Melee Weapon: Weapon Use),_
				text(How is this weapon used?),_
				picksallowed(1),_
				method(bynumber),_
				list(_
					"One-Handed",_
					"Two-Handed",_
					"Two-Handed, becomes unready after attack" _
					),_
				aliaslist(_
						"",_
						"†",_
						"‡"_
					)_
				),_
		#edit)

_New Muscle-Powered Ranged Weapon, noresync(yes),_
		displaycost(varies),_
		displayweight(varies),_
		techlvl([techlevel]),_
		basecost([cost]),_
		baseweight([weight]),_
		lc([legalityclass]),_
		damage([damage]),_
		armordivisor([armordivisor]),_
		damtype([damagetype]),_
		acc([accuracy]),_
		calcrange(yes),_
		rangehalfdam([halfdamagerange]),_
		rangemax([maxrange]),_
		rof([rateoffire]),_
		shots([shots]),_
		minst([minimumst]%usealiaslist%),_
		bulk([bulk]),_
		skillused([skillused]),_
		mods(Equipment, Ranged Quality),_
	x(_
		#InputToTagReplace("Please enter the name of this muscle-powered ranged weapon:", name, " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the Tech Level of this muscle-powered ranged weapon:", "[techlevel]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the Cost of this muscle-powered ranged weapon. DO NOT include a dollar sign or comma:", "[cost]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the Weight of this muscle-powered ranged weapon:", "[weight]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the Legality Class of this muscle-powered ranged weapon:", "[legalityclass]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the damage of this muscle-powered ranged weapon (e.g. 6dx5 or thr+1). DO NOT include armor divisors or damage type in this field :", "[damage]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the damage type of this muscle-powered ranged weapon (e.g. pi+ or cut):", "[damagetype]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the accuracy of this muscle-powered ranged weapon:", "[accuracy]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the half damage range of this muscle-powered ranged weapon (e.g. ST*10 or 25):", "[halfdamagerange]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the maximum range of this muscle-powered ranged weapon (e.g. ST*10 or 25):", "[maxrange]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the rate of fire of this muscle-powered ranged weapon:", "[rateoffire]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the shots for this muscle-powered ranged weapon:", "[shots]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the minimum strength of this muscle-powered ranged weapon:", "[minimumst]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the bulk of this muscle-powered ranged weapon:", "[bulk]", " ", "New Muscle-Powered Ranged Weapon"),_
		#InputReplace("Please enter the skill used for this muscle-powered ranged weapon:", "[skillused]", " ", "New Muscle-Powered Ranged Weapon"),_
		#ChoiceList(_
				name(Use),_
				title(New Muscle-Powered Ranged Weapon: Weapon Use),_
				text(How is this weapon used?),_
				picksallowed(1),_
				method(bynumber),_
				list(_
					"One-Handed",_
					"Two-Handed",_
					"Two-Handed, becomes unready after attack" _
					),_
				aliaslist(_
						"",_
						"†",_
						"‡"_
					)_
				),_
		#edit)

_New Parent Item, basecost(0), baseweight(0), isparent(yes),_
	description(_
			In GCA a "Parent" item can have other traits assigned to it as "Children." This is essentially an organizational structure, allowing you to file multiple traits together under the parent item if you wish. _
			To make an item a "child" right click on it and select "Make Child of..." _
			The child items will be hidden by default; you may show the child items by right clicking on the parent and selecting "Show Components." Once displayed the children will be shown in a "tree" format under the parent. _
			Any item may be assigned as a parent by right clicking on it and selecting "Make Parent"; this entry is here for convenience, as it is automatically designated a Parent. _
			),_
	x(#InputToTagReplace("Please specify a name for this item:", name, " ", "New Parent Item"))



<Coin - DFRPG Adventurers>
Copper, basecost(1), baseweight(0.02), mods(coins), page(DFRPG:A95)
Silver, basecost(20), baseweight(0.02), mods(coins), page(DFRPG:A95)
Gold, basecost(400), baseweight(0.02), mods(coins), page(DFRPG:A95)
"Gold (eigth)", basecost(50), baseweight(0.02), mods(coins), page(DFRPG:A95)
"Gold (quarter)", basecost(100), baseweight(0.02), mods(coins), page(DFRPG:A95)
"Gold (half)", basecost(200), baseweight(0.02), mods(coins), page(DFRPG:A95)


<Armor - DFRPG Adventurers>
"Light Cloth (Head)", basecost(13), dr(1), baseweight(1.5), location(head),
 description(DR 1; protects head location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Light Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Light Cloth (Full Face)", basecost(18), dr(1), baseweight(2.1), location(head,face),
 description(DR 1; protects head and face locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Light Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Light Cloth (Body)", basecost(53), dr(1), baseweight(6.3), location(body),
 description(DR 1; protects body location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Light Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Light Cloth (Arms)", basecost(25), dr(1), baseweight(3), location(arms),
 description(DR 1; protects arms location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Light Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Light Cloth (Hands)", basecost(5), dr(1), baseweight(0.6), location(hands),
 description(DR 1; protects hands location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Light Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Light Cloth (Legs)", basecost(37), dr(1), baseweight(4.5), location(legs),
 description(DR 1; protects legs location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Light Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Light Cloth (Feet)", basecost(17), dr(1), baseweight(2.1), location(feet),
 description(DR 1; protects feet location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Light Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Light Cloth (Suit)", basecost(150), dr(1), baseweight(18), location(suit),
 description(DR 1; protects all locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Light Cloth, Armor - Cloth Type), page(DFRPG:A108)
							                                                                                                                                                                                              
"Heavy Cloth (Head)", basecost(38), dr(2), baseweight(3), location(head),
 description(DR 2; protects head location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Full Face)", basecost(53), dr(2), baseweight(4.2), location(head,face),
 description(DR 2; protects head and face locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Body)", basecost(158), dr(2), baseweight(12.6), location(body),
 description(DR 2; protects body location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Arms)", basecost(75), dr(2), baseweight(6), location(arms),
 description(DR 2; protects arms location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Hands)", basecost(15), dr(2), baseweight(1.2), location(hands),
 description(DR 2; protects hands location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Legs)", basecost(112), dr(2), baseweight(9), location(legs),
 description(DR 2; protects legs location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Feet)", basecost(52), dr(2), baseweight(4.2), location(feet),
 description(DR 2; protects feet location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Suit)", basecost(450), dr(2), baseweight(36), location(suit),
 description(DR 2; protects all locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)

"Light Leather (Head)", basecost(13), dr(1), baseweight(1.5), location(head),
 description(DR 1; protects head location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Light Leather (Full Face)", basecost(18), dr(1), baseweight(2.1), location(head,face),
 description(DR 1; protects head and face locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Light Leather (Body)", basecost(53), dr(1), baseweight(6.3), location(body),
 description(DR 1; protects body location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Light Leather (Arms)", basecost(25), dr(1), baseweight(3), location(arms),
 description(DR 1; protects arms location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Light Leather (Hands)", basecost(5), dr(1), baseweight(0.6), location(hands),
 description(DR 1; protects hands location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Light Leather (Legs)", basecost(37), dr(1), baseweight(4.5), location(legs),
 description(DR 1; protects legs location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Light Leather (Feet)", basecost(17), dr(1), baseweight(2.1), location(feet),
 description(DR 1; protects feet location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Light Leather (Suit)", basecost(150), dr(1), baseweight(18), location(suit),
 description(DR 1; protects all locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)

"Furs (Head)", basecost(13), dr(1), baseweight(1.5), location(head),
 description(DR 1; protects head location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Furs (Full Face)", basecost(18), dr(1), baseweight(2.1), location(head,face),
 description(DR 1; protects head and face locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Furs (Body)", basecost(53), dr(1), baseweight(6.3), location(body),
 description(DR 1; protects body location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Furs (Arms)", basecost(25), dr(1), baseweight(3), location(arms),
 description(DR 1; protects arms location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Furs (Hands)", basecost(5), dr(1), baseweight(0.6), location(hands),
 description(DR 1; protects hands location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Furs (Legs)", basecost(37), dr(1), baseweight(4.5), location(legs),
 description(DR 1; protects legs location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Furs (Feet)", basecost(17), dr(1), baseweight(2.1), location(feet),
 description(DR 1; protects feet location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
"Furs (Suit)", basecost(150), dr(1), baseweight(18), location(suit),
 description(DR 1; protects all locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor,Armor - Light Leather, Armor - Leather Type), page(DFRPG:A108)
							                                                                                                                                                                                              
"Heavy Cloth (Head)", basecost(38), dr(2), baseweight(3), location(head),
 description(DR 2; protects head location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Full Face)", basecost(53), dr(2), baseweight(4.2), location(head,face),
 description(DR 2; protects head and face locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Body)", basecost(158), dr(2), baseweight(12.6), location(body),
 description(DR 2; protects body location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Arms)", basecost(75), dr(2), baseweight(6), location(arms),
 description(DR 2; protects arms location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Hands)", basecost(15), dr(2), baseweight(1.2), location(hands),
 description(DR 2; protects hands location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Legs)", basecost(112), dr(2), baseweight(9), location(legs),
 description(DR 2; protects legs location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Feet)", basecost(52), dr(2), baseweight(4.2), location(feet),
 description(DR 2; protects feet location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
"Heavy Cloth (Suit)", basecost(450), dr(2), baseweight(36), location(suit),
 description(DR 2; protects all locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Cloth, Armor - Cloth Type), page(DFRPG:A108)
							                                                                                                                                                                                              
"Heavy Leather (Head)", basecost(38), dr(2), baseweight(3), location(head),
 description(DR 2; protects head location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Leather, Armor - Leather Type), page(DFRPG:A108)
"Heavy Leather (Full Face)", basecost(53), dr(2), baseweight(4.2), location(head,face),
 description(DR 2; protects head and face locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Heavy Leather, Armor - Leather Type), page(DFRPG:A108)
"Heavy Leather (Body)", basecost(158), dr(2), baseweight(12.6), location(body),
 description(DR 2; protects body location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Leather, Armor - Leather Type), page(DFRPG:A108)
"Heavy Leather (Arms)", basecost(75), dr(2), baseweight(6), location(arms),
 description(DR 2; protects arms location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Leather, Armor - Leather Type), page(DFRPG:A108)
"Heavy Leather (Hands)", basecost(15), dr(2), baseweight(1.2), location(hands),
 description(DR 2; protects hands location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Leather, Armor - Leather Type), page(DFRPG:A108)
"Heavy Leather (Legs)", basecost(112), dr(2), baseweight(9), location(legs),
 description(DR 2; protects legs location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Leather, Armor - Leather Type), page(DFRPG:A108)
"Heavy Leather (Feet)", basecost(52), dr(2), baseweight(4.2), location(feet),
 description(DR 2; protects feet location),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Leather, Armor - Leather Type), page(DFRPG:A108)
"Heavy Leather (Suit)", basecost(450), dr(2), baseweight(36), location(suit),
 description(DR 2; protects all locations),cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Heavy Leather, Armor - Leather Type), page(DFRPG:A108)
							
"Light Mail (Head)", basecost(125), dr(3/1), baseweight(3), location(head),
 description(DR 3/1; protects head location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Mail, Armor - Mail Type ), page(DFRPG:A108)
"Light Mail (Full Face)", basecost(175), dr(3/1), baseweight(4.2), location(head,face),
 description(DR 3/1; protects head and face locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Metal, Armor - Light Mail, Armor - Mail Type ), page(DFRPG:A108)
"Light Mail (Body)", basecost(525), dr(3/1), baseweight(12.6), location(body),
 description(DR 3/1; protects body location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Mail, Armor - Mail Type ), page(DFRPG:A108)
"Light Mail (Arms)", basecost(250), dr(3/1), baseweight(6), location(arms),
 description(DR 3/1; protects arms location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Mail, Armor - Mail Type ), page(DFRPG:A108)
"Light Mail (Hands)", basecost(50), dr(3/1), baseweight(1.2), location(hands),
 description(DR 3/1; protects hands location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Mail, Armor - Mail Type ), page(DFRPG:A108)
"Light Mail (Legs)", basecost(375), dr(3/1), baseweight(9), location(legs),
 description(DR 3/1; protects legs location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Mail, Armor - Mail Type ), page(DFRPG:A108)
"Light Mail (Feet)", basecost(175), dr(3/1), baseweight(4.2), location(feet),
 description(DR 3/1; protects feet location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Mail, Armor - Mail Type ), page(DFRPG:A108)
"Light Mail (Suit)", basecost(1500), dr(3/1), baseweight(36), location(suit),
 description(DR 3/1; protects all locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Mail, Armor - Mail Type ), page(DFRPG:A108)
							
"Light Scale (Head)", basecost(80), dr(3/2), baseweight(4), location(head),
 description(DR 3; protects head location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Scale, Armor - Scale Type), page(DFRPG:A108)
"Light Scale (Full Face)", basecost(112), dr(3/2), baseweight(5.6), location(head,face),
 description(DR 3; protects head and face locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Metal, Armor - Light Scale, Armor - Scale Type), page(DFRPG:A108)
"Light Scale (Body)", basecost(336), dr(3/2), baseweight(16.8), location(body),
 description(DR 3; protects body location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Scale, Armor - Scale Type), page(DFRPG:A108)
"Light Scale (Arms)", basecost(160), dr(3/2), baseweight(8), location(arms),
 description(DR 3; protects arms location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Scale, Armor - Scale Type), page(DFRPG:A108)
"Light Scale (Hands)", basecost(32), dr(3/2), baseweight(1.6), location(hands),
 description(DR 3; protects hands location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Scale, Armor - Scale Type), page(DFRPG:A108)
"Light Scale (Legs)", basecost(240), dr(3/2), baseweight(12), location(legs),
 description(DR 3; protects legs location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Scale, Armor - Scale Type), page(DFRPG:A108)
"Light Scale (Feet)", basecost(112), dr(3/2), baseweight(5.6), location(feet),
 description(DR 3; protects feet location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Scale, Armor - Scale Type), page(DFRPG:A108)
"Light Scale (Suit)", basecost(960), dr(3/2), baseweight(48), location(suit),
 description(DR 3; protects all locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Light Scale, Armor - Scale Type), page(DFRPG:A108)
							
"Light Segmented Plate (Head)", basecost(150), dr(3), baseweight(4), location(head),
 description(DR 3; protects head location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Light Segmented Plate ), page(DFRPG:A108)
"Light Segmented Plate (Full Face)", basecost(210), dr(3), baseweight(5.6), location(head,face),
 description(DR 3; protects head and face locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 	mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Light Segmented Plate ), page(DFRPG:A108)
"Light Segmented Plate (Body)", basecost(630), dr(3), baseweight(16.8), location(body),
 description(DR 3; protects body location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Light Segmented Plate ), page(DFRPG:A108)
"Light Segmented Plate (Arms)", basecost(300), dr(3), baseweight(8), location(arms),
 description(DR 3; protects arms location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Light Segmented Plate ), page(DFRPG:A108)
"Light Segmented Plate (Hands)", basecost(60), dr(3), baseweight(1.6), location(hands),
 description(DR 3; protects hands location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Light Segmented Plate ), page(DFRPG:A108)
"Light Segmented Plate (Legs)", basecost(450), dr(3), baseweight(12), location(legs),
 description(DR 3; protects legs location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Light Segmented Plate ), page(DFRPG:A108)
"Light Segmented Plate (Feet)", basecost(210), dr(3), baseweight(5.6), location(feet),
 description(DR 3; protects feet location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Light Segmented Plate ), page(DFRPG:A108)
"Light Segmented Plate (Suit)", basecost(1800), dr(3), baseweight(48), location(suit),
 description(DR 3; protects all locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Light Segmented Plate ), page(DFRPG:A108)
							
"Mail (Head)", basecost(225), dr(4/2), baseweight(3.8), location(head),
 description(DR 4/2; protects head location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Mail, Armor - Mail Type ), page(DFRPG:A108)
"Mail (Full Face)", basecost(315), dr(4/2), baseweight(5.3), location(head,face),
 description(DR 4/2; protects head and face locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Metal, Armor - Mail, Armor - Mail Type ), page(DFRPG:A108)
"Mail (Body)", basecost(945), dr(4/2), baseweight(15.8), location(body),
 description(DR 4/2; protects body location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Mail, Armor - Mail Type ), page(DFRPG:A108)
"Mail (Arms)", basecost(450), dr(4/2), baseweight(7.5), location(arms),
 description(DR 4/2; protects arms location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Mail, Armor - Mail Type ), page(DFRPG:A108)
"Mail (Hands)", basecost(90), dr(4/2), baseweight(1.5), location(hands),
 description(DR 4/2; protects hands location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Mail, Armor - Mail Type ), page(DFRPG:A108)
"Mail (Legs)", basecost(675), dr(4/2), baseweight(11.2), location(legs),
 description(DR 4/2; protects legs location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Mail, Armor - Mail Type ), page(DFRPG:A108)
"Mail (Feet)", basecost(315), dr(4/2), baseweight(5.2), location(feet),
 description(DR 4/2; protects feet location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Mail, Armor - Mail Type ), page(DFRPG:A108)
"Mail (Suit)", basecost(2700), dr(4/2), baseweight(45), location(suit),
 description(DR 4/2; protects all locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Mail, Armor - Mail Type ), page(DFRPG:A108)
							
"Scale (Head)", basecost(138), dr(4/3), baseweight(7), location(head),
 description(DR 4; protects head location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Scale, Armor - Scale Type ), page(DFRPG:A108)
"Scale (Full Face)", basecost(193), dr(4/3), baseweight(9.8), location(head,face),
 description(DR 4; protects head and face locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers),		mods(Armor, Armor - Metal, Armor - Scale, Armor - Scale Type ), page(DFRPG:A108)
"Scale (Body)", basecost(578), dr(4/3), baseweight(29.4), location(body),
 description(DR 4; protects body location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Scale, Armor - Scale Type ), page(DFRPG:A108)
"Scale (Arms)", basecost(275), dr(4/3), baseweight(14), location(arms),
 description(DR 4; protects arms location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Scale, Armor - Scale Type ), page(DFRPG:A108)
"Scale (Hands)", basecost(55), dr(4/3), baseweight(2.8), location(hands),
 description(DR 4; protects hands location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Scale, Armor - Scale Type ), page(DFRPG:A108)
"Scale (Legs)", basecost(412), dr(4/3), baseweight(21), location(legs),
 description(DR 4; protects legs location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Scale, Armor - Scale Type ), page(DFRPG:A108)
"Scale (Feet)", basecost(192), dr(4/3), baseweight(9.8), location(feet),
 description(DR 4; protects feet location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Scale, Armor - Scale Type ), page(DFRPG:A108)
"Scale (Suit)", basecost(1650), dr(4/3), baseweight(84), location(suit),
 description(DR 4; protects all locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Scale, Armor - Scale Type ), page(DFRPG:A108)
							
"Segmented Plate (Head)", basecost(225), dr(4), baseweight(6), location(head),
 description(DR 4; protects head location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Segmented Plate ), page(DFRPG:A108)
"Segmented Plate (Full Face)", basecost(315), dr(4), baseweight(8.4), location(head,face),
 description(DR 4; protects head and face locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 	mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Segmented Plate ), page(DFRPG:A108)
"Segmented Plate (Body)", basecost(945), dr(4), baseweight(25.2), location(body),
 description(DR 4; protects body location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Segmented Plate ), page(DFRPG:A108)
"Segmented Plate (Arms)", basecost(450), dr(4), baseweight(12), location(arms),
 description(DR 4; protects arms location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Segmented Plate ), page(DFRPG:A108)
"Segmented Plate (Hands)", basecost(90), dr(4), baseweight(2.4), location(hands),
 description(DR 4; protects hands location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Segmented Plate ), page(DFRPG:A108)
"Segmented Plate (Legs)", basecost(675), dr(4), baseweight(18), location(legs),
 description(DR 4; protects legs location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Segmented Plate ), page(DFRPG:A108)
"Segmented Plate (Feet)", basecost(315), dr(4), baseweight(8.4), location(feet),
 description(DR 4; protects feet location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Segmented Plate ), page(DFRPG:A108)
"Segmented Plate (Suit)", basecost(2700), dr(4), baseweight(72), location(suit),
 description(DR 4; protects all locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Segmented Plate ), page(DFRPG:A108)
							
"Heavy Mail (Head)", basecost(300), dr(5/3), baseweight(4.5), location(head),
 description(DR 5/3; protects head location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Mail, Armor - Mail Type), page(DFRPG:A108)
"Heavy Mail (Full Face)", basecost(420), dr(5/3), baseweight(6.3), location(head,face),
 description(DR 5/3; protects head and face locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Metal, Armor - Heavy Mail, Armor - Mail Type), page(DFRPG:A108)
"Heavy Mail (Body)", basecost(1260), dr(5/3), baseweight(18.9), location(body),
 description(DR 5/3; protects body location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Mail, Armor - Mail Type), page(DFRPG:A108)
"Heavy Mail (Arms)", basecost(600), dr(5/3), baseweight(9), location(arms),
 description(DR 5/3; protects arms location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Mail, Armor - Mail Type), page(DFRPG:A108)
"Heavy Mail (Hands)", basecost(120), dr(5/3), baseweight(1.8), location(hands),
 description(DR 5/3; protects hands location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Mail, Armor - Mail Type), page(DFRPG:A108)
"Heavy Mail (Legs)", basecost(900), dr(5/3), baseweight(13.5), location(legs),
 description(DR 5/3; protects legs location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Mail, Armor - Mail Type), page(DFRPG:A108)
"Heavy Mail (Feet)", basecost(420), dr(5/3), baseweight(6.3), location(feet),
 description(DR 5/3; protects feet location; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Mail, Armor - Mail Type), page(DFRPG:A108)
"Heavy Mail (Suit)", basecost(3600), dr(5/3), baseweight(54), location(suit),
 description(DR 5/3; protects all locations; metal armor), notes([1, 2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Mail, Armor - Mail Type), page(DFRPG:A108)
							
"Heavy Scale (Head)", basecost(275), dr(5), baseweight(10), location(head),
 description(DR 5; protects head location; metal armor), notes([2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Heavy Scale, Armor - Scale Type ), page(DFRPG:A108)
"Heavy Scale (Full Face)", basecost(385), dr(5), baseweight(14), location(head,face),
 description(DR 5; protects head and face locations; metal armor), notes([2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Metal, Armor - Heavy Scale, Armor - Scale Type ), page(DFRPG:A108)
"Heavy Scale (Body)", basecost(1155), dr(5), baseweight(42), location(body),
 description(DR 5; protects body location; metal armor), notes([2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Scale, Armor - Scale Type ), page(DFRPG:A108)
"Heavy Scale (Arms)", basecost(550), dr(5), baseweight(20), location(arms),
 description(DR 5; protects arms location; metal armor), notes([2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Heavy Scale, Armor - Scale Type ), page(DFRPG:A108)
"Heavy Scale (Hands)", basecost(110), dr(5), baseweight(4), location(hands),
 description(DR 5; protects hands location; metal armor), notes([2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Scale, Armor - Scale Type ), page(DFRPG:A108)
"Heavy Scale (Legs)", basecost(825), dr(5), baseweight(30), location(legs),
 description(DR 5; protects legs location; metal armor), notes([2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Heavy Scale, Armor - Scale Type ), page(DFRPG:A108)
"Heavy Scale (Feet)", basecost(385), dr(5), baseweight(14), location(feet),
 description(DR 5; protects feet location; metal armor), notes([2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Metal, Armor - Heavy Scale, Armor - Scale Type ), page(DFRPG:A108)
"Heavy Scale (Suit)", basecost(3300), dr(5), baseweight(120), location(suit),
 description(DR 5; protects all locations; metal armor), notes([2]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Metal, Armor - Heavy Scale, Armor - Scale Type ), page(DFRPG:A108)
							
"Heavy Segmented Plate (Head)", basecost(300), dr(5), baseweight(8), location(head),
 description(DR 5; protects head location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Segmented Plate ), page(DFRPG:A108)
"Heavy Segmented Plate (Full Face)", basecost(420), dr(5), baseweight(11.2), location(head,face),
 description(DR 5; protects head and face locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers),	mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Segmented Plate ), page(DFRPG:A108)
"Heavy Segmented Plate (Body)", basecost(1260), dr(5), baseweight(33.6), location(body),
 description(DR 5; protects body location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Segmented Plate ), page(DFRPG:A108)
"Heavy Segmented Plate (Arms)", basecost(600), dr(5), baseweight(16), location(arms),
 description(DR 5; protects arms location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Segmented Plate ), page(DFRPG:A108)
"Heavy Segmented Plate (Hands)", basecost(120), dr(5), baseweight(3.2), location(hands),
 description(DR 5; protects hands location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Segmented Plate ), page(DFRPG:A108)
"Heavy Segmented Plate (Legs)", basecost(900), dr(5), baseweight(24), location(legs),
 description(DR 5; protects legs location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Segmented Plate ), page(DFRPG:A108)
"Heavy Segmented Plate (Feet)", basecost(420), dr(5), baseweight(11.2), location(feet),
 description(DR 5; protects feet location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Segmented Plate ), page(DFRPG:A108)
"Heavy Segmented Plate (Suit)", basecost(3600), dr(5), baseweight(96), location(suit),
 description(DR 5; protects all locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Segmented Plate ), page(DFRPG:A108)
							
"Brigandine (Head)", basecost(450), dr(5), baseweight(5), location(head),
 description(DR 5; protects head location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Brigandine ), page(DFRPG:A108)
"Brigandine (Full Face)", basecost(630), dr(5), baseweight(7), location(head,face),
 description(DR 5; protects head and face locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Brigandine ), page(DFRPG:A108)
"Brigandine (Body)", basecost(1890), dr(5), baseweight(21), location(body),
 description(DR 5; protects body location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Brigandine ), page(DFRPG:A108)
"Brigandine (Arms)", basecost(900), dr(5), baseweight(10), location(arms),
 description(DR 5; protects arms location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Brigandine ), page(DFRPG:A108)
"Brigandine (Hands)", basecost(180), dr(5), baseweight(2), location(hands),
 description(DR 5; protects hands location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Brigandine ), page(DFRPG:A108)
"Brigandine (Legs)", basecost(1350), dr(5), baseweight(15), location(legs),
 description(DR 5; protects legs location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Brigandine ), page(DFRPG:A108)
"Brigandine (Feet)", basecost(630), dr(5), baseweight(7), location(feet),
 description(DR 5; protects feet location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Brigandine ), page(DFRPG:A108)
"Brigandine (Suit)", basecost(5400), dr(5), baseweight(60), location(suit),
 description(DR 5; protects all locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Brigandine ), page(DFRPG:A108)
							
"Plate (Head)", basecost(625), dr(6), baseweight(5), location(head),
 description(DR 6; protects head location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Plate ), page(DFRPG:A108)
"Plate (Full Face)", basecost(875), dr(6), baseweight(7), location(head,face),
 description(DR 6; protects head and face locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Plate ), page(DFRPG:A108)
"Plate (Body)", basecost(2625), dr(6), baseweight(21), location(body),
 description(DR 6; protects body location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Plate ), page(DFRPG:A108)
"Plate (Arms)", basecost(1250), dr(6), baseweight(10), location(arms),
 description(DR 6; protects arms location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers),				mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Plate ), page(DFRPG:A108)
"Plate (Hands)", basecost(250), dr(6), baseweight(2), location(hands),
 description(DR 6; protects hands location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Plate ), page(DFRPG:A108)
"Plate (Legs)", basecost(1875), dr(6), baseweight(15), location(legs),
 description(DR 6; protects legs location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Plate ), page(DFRPG:A108)
"Plate (Feet)", basecost(875), dr(6), baseweight(7), location(feet),
 description(DR 6; protects feet location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Plate ), page(DFRPG:A108)
"Plate (Suit)", basecost(7500), dr(6), baseweight(60), location(suit),
 description(DR 6; protects all locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 				mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Plate ), page(DFRPG:A108)
							
"Heavy Plate (Head)", basecost(750), dr(7), baseweight(6), location(head),
 description(DR 7; protects head location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Plate ), page(DFRPG:A108)
"Heavy Plate (Full Face)", basecost(1050), dr(7), baseweight(8.4), location(head,face),
 description(DR 7; protects head and face locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Plate ), page(DFRPG:A108)
"Heavy Plate (Body)", basecost(3150), dr(7), baseweight(25.2), location(body),
 description(DR 7; protects body location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Plate ), page(DFRPG:A108)
"Heavy Plate (Arms)", basecost(1500), dr(7), baseweight(12), location(arms),
 description(DR 7; protects arms location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Plate ), page(DFRPG:A108)
"Heavy Plate (Hands)", basecost(300), dr(7), baseweight(2.4), location(hands),
 description(DR 7; protects hands location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Plate ), page(DFRPG:A108)
"Heavy Plate (Legs)", basecost(2250), dr(7), baseweight(18), location(legs),
 description(DR 7; protects legs location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Plate ), page(DFRPG:A108)
"Heavy Plate (Feet)", basecost(1050), dr(7), baseweight(8.4), location(feet),
 description(DR 7; protects feet location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Plate ), page(DFRPG:A108)
"Heavy Plate (Suit)", basecost(9000), dr(7), baseweight(72), location(suit),
 description(DR 7; protects all locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Heavy Plate ), page(DFRPG:A108)
							
"Extra-Heavy Plate (Head)", basecost(875), dr(8), baseweight(7), location(head),
 description(DR 8; protects head location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Extra-Heavy Plate ), page(DFRPG:A108)
"Extra-Heavy Plate (Full Face)", basecost(1225), dr(8), baseweight(9.8), location(head,face),
 description(DR 8; protects head and face locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 	mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Extra-Heavy Plate ), page(DFRPG:A108)
"Extra-Heavy Plate (Body)", basecost(3675), dr(8), baseweight(29.4), location(body),
 description(DR 8; protects body location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Extra-Heavy Plate ), page(DFRPG:A108)
"Extra-Heavy Plate (Arms)", basecost(1750), dr(8), baseweight(14), location(arms),
 description(DR 8; protects arms location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Extra-Heavy Plate ), page(DFRPG:A108)
"Extra-Heavy Plate (Hands)", basecost(350), dr(8), baseweight(2.8), location(hands),
 description(DR 8; protects hands location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Extra-Heavy Plate ), page(DFRPG:A108)
"Extra-Heavy Plate (Legs)", basecost(2625), dr(8), baseweight(21), location(legs),
 description(DR 8; protects legs location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Extra-Heavy Plate ), page(DFRPG:A108)
"Extra-Heavy Plate (Feet)", basecost(1225), dr(8), baseweight(9.8), location(feet),
 description(DR 8; protects feet location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Extra-Heavy Plate ), page(DFRPG:A108)
"Extra-Heavy Plate (Suit)", basecost(10500), dr(8), baseweight(84), location(suit),
 description(DR 8; protects all locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Extra-Heavy Plate ), page(DFRPG:A108)
							
"Epic Plate (Head)", basecost(1000), dr(9), baseweight(8), location(head),
 description(DR 9; protects head location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Epic Plate ), page(DFRPG:A108)
"Epic Plate (Full Face)", basecost(1400), dr(9), baseweight(11.2), location(head,face),
 description(DR 9; protects head and face locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 		mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Epic Plate ), page(DFRPG:A108)
"Epic Plate (Body)", basecost(4200), dr(9), baseweight(33.6), location(body),
 description(DR 9; protects body location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Epic Plate ), page(DFRPG:A108)
"Epic Plate (Arms)", basecost(2000), dr(9), baseweight(16), location(arms),
 description(DR 9; protects arms location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Epic Plate ), page(DFRPG:A108)
"Epic Plate (Hands)", basecost(400), dr(9), baseweight(3.2), location(hands),
 description(DR 9; protects hands location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Epic Plate ), page(DFRPG:A108)
"Epic Plate (Legs)", basecost(3000), dr(9), baseweight(24), location(legs),
 description(DR 9; protects legs location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Epic Plate ), page(DFRPG:A108)
"Epic Plate (Feet)", basecost(1400), dr(9), baseweight(11.2), location(feet),
 description(DR 9; protects feet location; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers),			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Epic Plate ), page(DFRPG:A108)
"Epic Plate (Suit)", basecost(12000), dr(9), baseweight(96), location(suit),
 description(DR 9; protects all locations; metal armor), notes([2, 3]), cat(_Armor, Armor, Armor - DFRPG Adventurers), 			mods(Armor, Armor - Plate Type, Armor - Metal, Armor - Epic Plate ), page(DFRPG:A108)

<Shields>
Light Cloak, basecost(20), baseweight(2), db(1), dr(1), hp(3), lc(), skillused(SK:Cloak, ST:DX-5, SK:Net-4, SK:Shield-4), damage(spcl.), cat(_Shields, Shields), mods(Cloaks),_
	itemnotes(_
				{Can be used offensively to Feint or grapple at reach C, 1.}_
			),_
	description(DB:1 Skill:Cloak Notes: [1] Can be used offensively to Feint or grapple at reach C, 1 (but not for a shield bash or rush). A cloak occupies a hand, and a failed block may endanger your arm.), notes([1]), page(DFRPG:A107)
Heavy Cloak, basecost(50), baseweight(5), db(2), dr(1), hp(5), lc(), skillused(SK:Cloak, ST:DX-5, SK:Net-4, SK:Shield-4), damage(spcl.), cat(_Shields, Shields), mods(Cloaks),_
	itemnotes(_
				{Can be used offensively to Feint or grapple at reach C, 1.}_
			),_
	description(DB:2 Skill:Cloak Notes: [1] Can be used offensively to Feint or grapple at reach C, 1 (but not for a shield bash or rush). A cloak occupies a hand, and a failed block may endanger your arm.), notes([1]), page(DFRPG:A107)

Small Shield, 
	basecost(40), 
	baseweight(8), 
	db(1), dr(6), hp(30), 
	page(DFRPG:A107,DFRPG:A101), 
	cat(_Shields, Shields), 
	mods(Shield),_
	newmode(Bash, 
		skillused(ST:DX-4, "SK:Shield (Buckler)"-2, "SK:Shield (Force)"-2, "SK:Shield (Shield)"), 
		damage(thr), 
		damtype(cr), 
		reach(1), 
		parry(No), 
		minst()_
	),_
	newmode(Rush, skillused(ST:DX-4, "SK:Shield (Buckler)"-2, "SK:Shield (Force)"-2, "SK:Shield (Shield)"), damage(slam+1), damtype(cr), reach(1), parry(No), minst() ),_
	description(TL:0 LC:4 DB:1 Dam:thr cr Reach:1 Parry:No ST:-- Skill:Shield (Shield) Notes: [2,3] Can be used offensively for a Feint, shield bash (see the Melee Weapons Table, Adventurers pp. 98-103), or shield rush (Slams, Tramples, and Overruns, Exploits, p. 40). Also available as a buckler.), notes([2,3])
Medium Shield, basecost(60), baseweight(15), db(2), dr(7), hp(40), page(DFRPG:A107,DFRPG:A101), cat(_Shields, Shields), mods(Shield),_
	newmode(Bash, skillused(ST:DX-4, "SK:Shield (Buckler)"-2, "SK:Shield (Force)"-2, "SK:Shield (Shield)"), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	newmode(Rush, skillused(ST:DX-4, "SK:Shield (Buckler)"-2, "SK:Shield (Force)"-2, "SK:Shield (Shield)"), damage(slam+2), damtype(cr), reach(1), parry(No), minst()),_
	description(DB:2 Dam:thr cr Reach:1 Parry:No ST:-- Skill:Shield (Shield) Notes: [2,3] Can be used offensively for a Feint, shield bash (see the Melee Weapons Table, Adventurers pp. 98-103), or shield rush (Slams, Tramples, and Overruns, Exploits, p. 40). Also available as a buckler.), notes([2,3])
Large Shield, basecost(90), baseweight(25), db(3), dr(9), hp(60), page(DFRPG:A107,DFRPG:A101), cat(_Shields, Shields), mods(Shield),_
	newmode(Bash, 
		skillused(ST:DX-4, "SK:Shield (Buckler)"-2, "SK:Shield (Force)"-2, "SK:Shield (Shield)"), 
		itemnotes(_
				{Large shields get in the way: -2 to all attacks with the other hand (but not with the shield) unless you have Shield-Wall Training (Adventurers, p. 29). In close combat, apply -3 for DB instead, not as well; Shield-Wall Training doesn’t cancel this.}_ 
		),_
		damage(thr), 
		damtype(cr), 
		reach(1), 
		parry(No), 
		minst()),_
	newmode(Rush, 
		skillused(ST:DX-4, "SK:Shield (Buckler)"-2, "SK:Shield (Force)"-2, "SK:Shield (Shield)"), 
		itemnotes(_
				{Large shields get in the way: -2 to all attacks with the other hand (but not with the shield) unless you have Shield-Wall Training (Adventurers, p. 29). In close combat, apply -3 for DB instead, not as well; Shield-Wall Training doesn’t cancel this.}_ 
		),_
		damage(slam+3), 
		damtype(cr), 
		reach(1), 
		parry(No), 
		minst()),_
	description(DB:3 Dam:thr cr Reach:1 Parry:No ST:-- Skill:Shield (Shield) Notes: [2,3] Can be used offensively for a Feint, shield bash (see the Melee Weapons Table, Adventurers pp. 98-103), or shield rush (Slams, Tramples, and Overruns, Exploits, p. 40). Also available as a buckler.), notes([2,4])


Small Buckler, basecost(40), baseweight(8), db(1), dr(6), hp(30), page(DFRPG:A107,DFRPG:A101), cat(_Shields, Shields), mods(Shield),_
	newmode(Bash, skillused(ST:DX-4, "SK:Shield (Buckler)"-2, "SK:Shield (Force)"-2, "SK:Shield (Shield)"), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	itemnotes(_
				{You can ready a buckler in one turn and drop it as a free action, basecost(just like a weapon – but it always occupies one hand), and it does not allow a shield rush.}_
			),_
	description(DB:1 Dam:thr cr Reach:1 Parry:No ST:-- Skill:Shield (Buckler) Notes: [2,3] Can be used offensively for a Feint, shield bash (see the Melee Weapons Table, Adventurers pp. 98-103), or shield rush (Slams, Tramples, and Overruns, Exploits, p. 40). You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. ), notes([2,3])
Medium Buckler, basecost(60), baseweight(15), db(2), dr(7), hp(40), page(DFRPG:A107,DFRPG:A101), cat(_Shields, Shields), mods(Shield),_
	newmode(Bash, skillused(ST:DX-4, "SK:Shield (Buckler)"-2, "SK:Shield (Force)"-2, "SK:Shield (Shield)"), damage(thr), damtype(cr), reach(1), parry(No), minst()),_
	itemnotes(_
				{You can ready a buckler in one turn and drop it as a free action, basecost(just like a weapon – but it always occupies one hand), and it does not allow a shield rush.}_
			),_
	description(DB:2 Dam:thr cr Reach:1 Parry:No ST:-- Skill:Shield (Buckler) Notes: [2,3] Can be used offensively for a Feint, shield bash (see the Melee Weapons Table, Adventurers pp. 98-103), or shield rush (Slams, Tramples, and Overruns, Exploits, p. 40). You can ready a buckler in one turn and drop it as a free action, just like a weapon - but it always occupies one hand, and it does not allow a shield rush. Use Shield (Buckler) instead of regular shield skill. No effect on statistics. ), notes([2,3])


[MODIFIERS]
<Melee Quality>
_New Melee Attack Mode, basecost(0), group(Melee Quality), noresync(yes),_
	addmode(_New Melee Attack Mode,_
		lc([legalityclass]),_
		damage([damage] + @max(%UnarmedDamageBonusAliasList%)),_
		damtype([damagetype]),_
		armordivisor([armordivisor]),_
		reach([reach]),_
		parry([parry]),_
		minst([minimumst]%usealiaslist%),_
		skillused([skillused])),_
	x(_
		#InputReplace("Please enter the name of the new attack mode below. Note that each weapon mode must have a unique mode name:", "_New Melee Attack Mode", " ", "New Melee Attack Mode"),_
		#InputReplace("Please enter the Legality Class of this hand weapon:", "[legalityclass]", "%copyfirst", "New Melee Attack Mode"),_
		#InputReplace("Please enter the damage of this hand weapon (e.g. 6dx5, sw+1, or thr-1). DO NOT include armor divisors or damage type:", "[damage]", "%copyfirst", "New Melee Attack Mode"),_
		#InputReplace("Please enter the armor divisor. If there is no armor divisor enter space (or just click enter). DO NOT include parenthesis:", "[armordivisor]", "%copyfirst", "New Melee Attack Mode"),_
		#InputReplace("Please enter the damage type of this hand weapon (e.g. pi+ or cut):", "[damagetype]", "%copyfirst", "New Melee Attack Mode"),_
		#InputReplace("Please enter the reach for this hand weapon:", "[reach]", "%copyfirst", "New Melee Attack Mode"),_
		#InputReplace("Please enter the parry for this hand weapon:", "[parry]", "%copyfirst", "New Melee Attack Mode"),_
		#InputReplace("Please enter the skill used for this hand weapon:", "[skillused]", "%copyfirst", "New Melee Attack Mode"),_
		#InputReplace("Please enter the minimum strength of this hand weapon:", "[minimumst]", "%copyfirst", "New Melee Attack Mode"),_
		#ChoiceList(_
					name(UnarmedDamageBonus),_
					title(New Melee Weapon: Unarmed Damage Bonus),_
					text(Does this weapon receive a damage bonus from an unarmed combat skill?),_
					picksallowed(atleast 1, upto 3),_
					method(bynumber),_
					default(1),_
					list(_
						"_N/A",_
						"Brawling",_
						"Boxing",_
						"Karate" _
						),_
					aliaslist(_
							"0",_
							{@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) else 0)},_
							{@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) else @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) else 0))},_
							{@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) else @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) else 0))}_
						)_
				),_
		#ChoiceList(_
				name(Use),_
				title(New Melee Attack Mode: Weapon Use),_
				text(How is this weapon used?),_
				picksallowed(1),_
				method(bynumber),_
				list(_
					"%copyfirst",_
					"One-Handed",_
					"Two-Handed",_
					"Two-Handed, becomes unready after attack" _
					),_
				aliaslist(_
						"",_
						"",_
						"†",_
						"‡"_
					)_
				),_
		#edit)

_Remove Attack Mode ([Mode]), +0, group(Melee Quality),_
	addmode([Mode], reach(), rangehalfdam(), rangemax(), damage(), damtype()),_
	x(_
		#InputReplace("Please enter the exact name of the attack mode you wish to remove from this weapon:", "[Mode]", "", "Remove Attack Mode") _
	)

_Skill: Throwing Art Damage Bonus, basecost(+0), shortname(Throwing Art Damage Bonus), group(Melee Quality),_
	gives(_
		=+@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN @textindexedvalue($modetag(mode)$modetag(dmg),_
						("thrownsw", owner::baseswdice), ("thrownthr", owner::basethdice),_
						("woomerasw", owner::baseswdice), ("woomerathr", owner::basethdice),_
						("atlatlsw", owner::baseswdice), ("atlatlthr", owner::basethdice), ELSE 0) _
			ELSE @if(_
				"SK:Throwing Art::level" > ST:DX _
				THEN @textindexedvalue($modetag(mode)$modetag(dmg),_
						("thrownsw", 2 * owner::baseswdice), ("thrownthr", 2 * owner::basethdice),_
						("woomerasw", 2 * owner::baseswdice), ("woomerathr", 2 * owner::basethdice),_
						("atlatlsw", 2 * owner::baseswdice), ("atlatlthr", 2 * owner::basethdice), ELSE 0) _
				ELSE 0 _
				)_
			) to owner::damage$ ListAs "+1/die or +2/die from Throwing Art Damage Bonus",_
		=*@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN 1 + (1/ST:ST::Score) _
			ELSE @IF(_
					"SK:Throwing Art::level" > ST:DX _
					THEN 1 + (2/ST:ST::Score) _
					ELSE 1 _
					)_
				) to owner::rangehalfdam,_
		=*@if(_
			"SK:Throwing Art::level" = ST:DX _
			THEN 1 + (1/ST:ST::Score) _
			ELSE @IF(_
					"SK:Throwing Art::level" > ST:DX _
					THEN 1 + (2/ST:ST::Score) _
					ELSE 1 _
					)_
				) to owner::rangemax_
		)

[MODIFIERS]

<_General>
_User-Defined Enhancement, +0%, group(_General),_
	x(_
		#InputToTagReplace("Please enter the name of the Enhancement:" , name, ,"User-Define Enhancement"),_
		#InputToTagReplace("Please enter the value of the Enchantment; use +0% for percentage enhancements, *0 for cost multipliers, and +0 for point increases (replacing 0 with the actual value):", cost, "+0%", "User-Define Enhancement") _
	)

_User-Defined Limitation, -0%, group(_General),_
	x(_
		#InputToTagReplace("Please enter the name of the Limitation:" , name, ,"User-Define Limitation"),_
		#InputToTagReplace("Please enter the value of the Limitation; use -0% for percentage limitaitons, *0 for cost multipliers, and -0 for point reductions (replacing 0 with the actual value):", cost, "-0%", "Limitation") _
	)

_Free, *0, group(_General), shortname(Free)

<Equipment>
~%GemstoneList%, 1/2, level([GemstoneLevel]), tier(1), shortname(%GemstoneList%),_
		x(_
			#InputReplace("Please enter the dollar value of the Gemstone or Materials; do not include a dollar sign", "[GemstoneLevel]", "100", "Gemstone Cost")_
			#ChoiceList(_
					name(Gemstone),_
					title(Enchantment Gemstones),_
					text(),_
					picksallowed(1),_
					method(bynumber),_
					list(_
							"Amber",_
							"Aquamarine",_
							"Amethyst",_
							"Carnelian",_
							"Coral Carving",_
							"Diamond",_
							"Emerald",_
							"Garnet",_
							"Gold",_
							"Ivory Carving",_
							"Ivory",_
							"Jade",_
							"Moonstone",_
							"Onyx",_
							"Opal",_
							"Pearl",_
							"Platinum",_
							"Ruby",_
							"Sapphire",_
							"Sunstone",_
							"Topaz"_
						)_
					)_
	), noresync(yes)

~_New Enchantment, [cost], displaycost(var.), shortname(New Enchantment), page(), tier(1), _
	x(_
		#InputReplace("please enter the name of the Enchantment:" , "New Enchantment", ,"New Enchantment"),_
		#InputReplace("Please enter the cost of the Enchantment:", "[cost]", 100, "New Enchantment"),_
			#ChoiceList(_
					name(Gemstone),_
					title(New Enchantment Gemstones),_
					text(You may choose up to three Gemstones),_
					picksallowed(atleast 1, upto 3),_
					method(bynumber),_
					list(_
							"_None of these",_
							"Amber",_
							"Aquamarine",_
							"Amethyst",_
							"Carnelian",_
							"Coral Carving",_
							"Diamond",_
							"Emerald",_
							"Garnet",_
							"Gold",_
							"Ivory Carving",_
							"Ivory",_
							"Jade",_
							"Moonstone",_
							"Onyx",_
							"Opal",_
							"Pearl",_
							"Platinum",_
							"Ruby",_
							"Sapphire",_
							"Sunstone",_
							"Topaz"_
						)_
					),_
			#ChoiceList(_
					name(GemstoneOneCost),_
					title(Gemstones Value),_
					text(Select the required value of the %Gemstone1%:),_
					default(1),_
					picksallowed(1),_
					method(bynumber),_
					list(_
							"    0",_
							"   50",_
							"  100",_
							"  200",_
							"  250",_
							"  300",_
							"  400",_
							"  500",_
							"  600",_
							"  700",_
							"  750",_
							"  800",_
							"  900",_
							" 1000",_
							" 1500",_
							" 2000",_
							" 2500",_
							" 5000",_
							" 7500",_
							"10000"_
						)_
					),_
			#ChoiceList(_
					name(GemstoneTwoCost),_
					title(Gemstones Value),_
					text(Select the required value of the %Gemstone2%; if you only chose one gemstone just click OK:),_
					default(1),_
					picksallowed(1),_
					method(bynumber),_
					list(_
							"    0",_
							"   50",_
							"  100",_
							"  200",_
							"  250",_
							"  300",_
							"  400",_
							"  500",_
							"  600",_
							"  700",_
							"  750",_
							"  800",_
							"  900",_
							" 1000",_
							" 1500",_
							" 2000",_
							" 2500",_
							" 5000",_
							" 7500",_
							"10000"_
						)_
					),_
			#ChoiceList(_
					name(GemstoneThreeCost),_
					title(Gemstones Value),_
					text(Select the required value of the %Gemstone3%; if you only chose one or two gemstones just click OK:),_
					default(1),_
					picksallowed(1),_
					method(bynumber),_
					list(_
							"    0",_
							"   50",_
							"  100",_
							"  200",_
							"  250",_
							"  300",_
							"  400",_
							"  500",_
							"  600",_
							"  700",_
							"  750",_
							"  800",_
							"  900",_
							" 1000",_
							" 1500",_
							" 2000",_
							" 2500",_
							" 5000",_
							" 7500",_
							"10000"_
						)_
					)_
	),_
	extracost(_
				@max(0,%GemstoneOneCost1%-@ownerhasmod(~%Gemstone1%)) + _
				@max(0,%GemstoneTwoCost1%-@ownerhasmod(~%Gemstone2%)) + _
				@max(0,%GemstoneThreeCost1%-@ownerhasmod(~%Gemstone3%))_
			)



<Equipment>
_Free, *0, shortname(Free)
_New Modifier, [cost], gives([weight] to owner::baseweight),_
	x(_
		#InputToTagReplace("Please enter the name of this modifier:", name, " ", "New Modifier"),_
		#InputReplace("Enter the change in cost of the equipment; this can be numerical (e.g. +3 or -50), a multiplier (*0.5), or a percentage (e.g. +50% or -25%):", "[cost]", +0, "New Modifier"),_
		#InputReplace("Enter the change in weight of the equipment; this can be numerical (e.g. +3 or -0.5), or a multiplier (*0.5), but *NOT* a percentage:", "[weight]", +0, "New Modifier") _
	)


<Melee Quality>
Balanced, +4 CF, gives(=+1 to owner::skillscore), page(DF1:26), group(Melee Quality), shortname(Balanced)
//  Balanced: +1 to skill with any melee weapon or projectile (arrow, bolt etc.), or +1 Acc with a blowpipe, bow, or crossbow. All weapons except sticks and improvised weapons: +4 CF.

Dwarven, +4 CF, displaycost(+4CF), gives(=nobase to owner::parry$, =+0 to owner::parry), page(DF1:26), group(Melee Quality), shortname(Dwarven)
//  Dwarven: Changes a Parry of 0U to 0, letting a weapon that can't normally parry and attack on the same turn do just that. Doesn't prevent the weapon from becoming unready after attacking (Ã¡ on ST). Any unbalanced weapon: +4 CF.
//  FIXME: Can be applied to any weapon - should actually be restricted to 0U weapons that aren't Meteoric, Orichalcum, or Silver.

Meteoric, +19 CF, page(DF1:27), group(Melee Quality), shortname(Meteoric)
//  Meteoricâ€ : Meteoric iron is immune to magic - Reverse Missiles, Steelwraith, Turn Blade, and so on won't stop it, and Shape Metal, Shatter, and the like can't destroy it. Of course, it can't benefit from enchantments, weapon-enhancing spells, or magical repairs. Any metal weapon: +19 CF.
//  FIXME: Can be applied to any weapon - should actually be restricted to weapons that aren't Dwarven, Orichalcum, or Silver.

Orichalcum, +29 CF, gives(=nobase$ to owner::break), page(DF1:27), group(Melee Quality), shortname(Orichalcum)
//  FIXME: Can be applied to any weapon - should actually be restricted to weapons that aren't Dwarven, Meteoric, or Silver.

Ornate, +1 CF/+4 CF/+9 CF, conditional(+1 to ST:Reaction), upto(3), page(DF1:27), group(Melee Quality), shortname(Ornate)
Silver, +19 CF, gives(=+2 to owner::break), page(DF1:27), group(Melee Quality), shortname(Silver)
//  FIXME: Can be applied to any weapon - should actually be restricted to weapons that aren't Dwarven, Meteoric, or Orichalcum.

"Silver-coated", +2 CF, page(DF1:27), group(Melee Quality), shortname(Silver-coated)

_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Melee Quality), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)

<Cutting Class Quality>
Fine, +9 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine", -1 to owner::break), page(DF1:26), group(Cutting Class Quality), shortname(Fine)

<Crushing/Imp Class Quality>
Fine, +2 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine", -1 to owner::break), page(DF1:26), group(Crushing/Imp Class Quality), shortname(Fine)

<Sword Class Quality>
Fine, +3 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine", -1 to owner::break), page(DF1:26), group(Sword Class Quality), shortname(Fine)
Very Fine, +19 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 2), ("imp", 2) ) to owner::damage$ listAs "+2 to cut/imp damage from Very Fine", -2 to owner::break), page(DF1:26), group(Sword Class Quality), shortname(Very Fine)

<Bow Quality>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Bow Quality), page(F132, HT250, MA53, PU2:9, DF1:14), shortname(Weapon Bond)
Balanced, +4 CF, gives(=+1 to owner::acc), page(DF1:26), group(Bow Quality), shortname(Balanced)

//  Elven: Lets a bow shoot at +2 to ST for range and damage purposes; e.g., a ST 11 elf could draw a ST 13 bow. Any bow (not crossbow): +16 CF.
//  Elven, +1600%, gives(=nobase$ to owner::damagebasedon, ="ST:Striking ST"+2 to owner::damagebasedon), page(DF1:26), group(Bow Quality), shortname(Elven)
Elven, +16 CF, gives(+2 to owner::effectivest), page(DF1:26), group(Bow Quality), shortname(Elven)
//  FIXED: does not actually adjust weapon strength.

Fine, +3 CF, gives(*1.2 to owner::rangehalfdam, *1.2 to owner::rangemax), page(DF1:26), group(Bow Quality), shortname(Fine)
Ornate, +1 CF/+4 CF/+9 CF, conditional(+1 to ST:Reaction), upto(3), page(DF1:27), group(Bow Quality), shortname(Ornate)

<Arrow>
Balanced, +4 CF, gives(=+1 to owner::skillscore), shortname(Balanced)
Silver, +19 CF, gives(=+2 to owner::break), page(DF1:27), group(Arrow), shortname(Silver)
"Silver-coated", +2 CF, page(DF1:27), group(Arrow), shortname(Silver-coated)
Meteoric, +19 CF, page(DF1:27), group(Arrow), shortname(Meteoric)
Orichalcum, +29 CF, gives(=nobase$ to owner::break), page(DF1:27), group(Arrow), shortname(Orichalcum)
Fine, +3 CF, gives(=+@textindexedvalue( $modetag(damtype), ("cut", 1), ("imp", 1) ) to owner::damage$ listAs "+1 to cut/imp damage from Fine", -1 to owner::break), page(DF1:26), group(Arrow), shortname(Fine)

<Shield>
_Perk: Weapon Bond, +0, gives(+1 to owner::skillscore), group(Shield), page(DF1:14), shortname(Weapon Bond)
Balanced, +4 CF, gives(=+1 to owner::skillscore), page(DF1:27), group(Shield), shortname(Balanced)
Dwarven, +4 CF, gives(=*2 to owner::baseweight, +1 owner::damage), page(DF1:27), group(Shield), shortname(Dwarven)
Fine, +9 CF, gives(=*3/4 to owner::baseweight), page(DF1:27), group(Shield), shortname(Fine)
Meteoric, +99 CF, gives(=*2 to owner::baseweight, +1 owner::damage), page(DF1:27), group(Shield), shortname(Meteoric)
Ornate, +1 CF/+4 CF/+9 CF, conditional(+1 to ST:Reaction), upto(3), page(DF1:27), group(Shield), shortname(Ornate)
"Mirrored", +2 CF/+6 CF, upto(1), levelnames(,), page(DF1:27), group(Shield), shortname(Mirrored),_
			formula(_
					@if(_
						@ownerhasmod(Meteoric) + _
						@ownerhasmod(Orichalcum) + _
						@ownerhasmod(Dwarven) _
						> 0 THEN 2 ELSE 6_
						)_
					), forceformula(yes)

//  fixme: try to implement needs() or something
//  fixme: add a mode for reflecting curses
Orichalcum, +149 CF, gives(*2/3 to owner::baseweight), page(DF1:27), group(Shield), shortname(Orichalcum)

<Armor>
Fine, +9 CF, gives(=*3/4 to owner::baseweight), page(DF1:27), group(Armor), shortname(Fine)
Ornate, +1 CF/+4 CF/+9 CF, conditional(+1 to ST:Reaction), upto(3), page(DF1:27), group(Armor), shortname(Ornate)

<Armor - Light Cloth>
//  Giant Spider Silk: Improves cloth armor from DR 1 to DR 2, and allows it to be worn under other armor, for +2 DR, with- out the DX penalty for layering. +99 CF.
Giant Spider Silk, +99 CF, gives(+1 to owner::dr), page(DF1:27), group(Armor - Light Cloth), shortname(Giant Spider Silk)

<Armor - Heavy Leather>
//   fixme: gives double the DR bonus vs fire
Dragonhide, +37 CF/+44 CF/+52 CF/+59 CF, gives(+1 to owner::dr, =*@indexedvalue(me::level, 1.25, 1.5, 1.75, 2) to owner::baseweight), upto(4), page(DF1:27), group(Armor - Heavy Leather), shortname(Dragonhide)

<Armor - Metal>
//  Meteoricâ€ : Resists magic as for the weapon modifier (above). Any metal armor: +19 CF.
Meteoric, +19 CF, page(DF1:27), group(Armor - Metal), shortname(Meteoric)

<Armor - Mail Type>
//  Elven: Elven mail uses the higher DR listed for the base armor against all damage - don't reduce its DR vs. crushing blows. Any mail: +3 CF.
Elven, +3 CF, page(DF1:27), group(Armor - Mail Type), shortname(Elven), description(Elven mail uses the higher DR listed for the base armor against all damage - don't reduce its DR vs. crushing blows.)

//  Thieves': Blackened mail woven for maximum flexibility and minimum noise. Ignore its weight for encumbrance purposes when making Climbing and Stealth rolls. Any mail: +3 CF.
"Thieves'", +3 CF, page(DF1:27), group(Armor - Mail Type), shortname(Thieves), description(Blackened mail woven for maximum flexibility and minimum noise. Ignore its weight for encumbrance purposes when making Climbing and Stealth rolls.)

<Armor - Plate Type>
//  Spiked: Lets the wearer roll DX-4 to stab each foe in close combat with him for 1d-2 imp, once per turn, as a free action. Anyone who strikes him with an unarmed attack is hit immediately and automatically - and a bite, slam, or Constriction Attack means that attacker suffers maximum damage (4 points). Any plate armor: +2 CF.
Spiked, +2 CF, page(DF1:27), group(Armor - Plate),_
	addmode(Spikes, damage(1d-2), damtype(imp), reach(C), skillused(ST:DX-4), parry(No)), shortname(Spiked)
//  Orichalcum*â€ : Provides full DR at just 1/3 the usual weight! Any plate armor: +29 CF.
Orichalcum, +29 CF, gives(=*1/3 to owner::baseweight), page(DF1:27), group(Armor - Plate Type), shortname(Orichalcum)

<Armor - Plate>
//  Dwarven*: Dwarves can forge any DR 6-7 plate armor to be extra-thick. This raises weight: +1 DR weighs 1.2 times as much, +2 DR weighs 1.4 times as much, and +3 DR weighs 1.6 times as much. Cost depends on DR bonus: +1 DR is +1 CF, +2 DR is +2 CF, and +3 DR is +3 CF.
Dwarven, +1 CF/+2 CF/+3 CF, gives(+1 to owner::dr, =*@indexedvalue(me::level, 1.2, 1.4, 1.6, 1.8) to owner::baseweight), page(DF1:27), group(Armor - Plate, Armor - Heavy Plate), shortname(Dwarven)



// #INSERTIONPOINT#                                                                                                                    //
// #INSERTIONPOINT# Everything from Emily's "Dungeon Fantasy RPG - Equipment.gdf" inserted above, up to previous #INSERTIONPOINT#      //
// #INSERTIONPOINT#                                                                                                                    //


// #INSERTIONPOINT#                                                                                                                         //
// #INSERTIONPOINT# Everything from Armin's "Dungeon Fantasy RPG - Other Equipment DRAFT.gdf" inserted below, down to next #INSERTIONPOINT# //
// #INSERTIONPOINT#                                                                                                                         //



********************************************************************************************************\[STOP]
[Equipment]
*******************************************************************************************************\[START]

********************************************************************************************************\[STOP]
<Basics>
*******************************************************************************************************\[START]
<Camping and Survival Gear>
"Backpack, Frame",
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(1),
	basecost(100),
	baseweight(10),
	units(lbs),
	description(Holds 100 lbs. of gear.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes), 
	weightcapacity(100)
"Backpack, Small",
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(1),
	basecost(60),
	baseweight(3),
	units(lbs),
	description(Holds 40 lbs. of gear.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes), 
	weightcapacity(40)
Blanket,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(1),
	basecost(20),
	baseweight(4),
	units(lbs),
	description(A warm bedroll.),
	page(DFRPG:A111),
	mods(Equipment)
Canteen,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	basecost(10),
	baseweight(1),
	units(lbs),
	description(Canteen. Miniature wooden barrel on a strap. Won't shatter in combat! Holds 1 quart of liquid (2 lbs. if water).),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(2)
Fishhooks & Line,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(50),
	baseweight(0.1),
	units(lbs),
	description(Basic gear for Fishing skill, needs a pole.),
	page(DFRPG:A111),
	mods(Equipment)
Group Basics,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(50),
	baseweight(20),
	units(lbs),
	description(Basic equipment for Cooking and Survival skill for a group. Cook pot, rope, hatchet, etc., for 3-8 campers.),
	page(DFRPG:A111),
	mods(Equipment)
Personal Basics,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(5),
	baseweight(1),
	units(lbs),
	description(Minimum gear for camping: -2 to any Survival roll without it. Includes utensils, tinderbox, and flint and steel.),
	page(DFRPG:A111),
	mods(Equipment)
Pouch,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(10),
	baseweight(0.2),
	units(lbs),
	description(Holds 3 lbs. of small items (like coins or personal basics).),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(3)
Purse,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(10),
	baseweight(0.2),
	units(lbs),
	description(Holds 3 lbs. of small items (like coins or personal basics).),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(3)
Rations,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(2),
	baseweight(0.5),
	units(lbs),
	description(One meal of dried meat, cheese, etc.),
	page(DFRPG:A111),
	mods(Equipment)
Sleeping Fur,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(50),
	baseweight(8),
	units(lbs),
	description(A winter bedroll, suitable for ice caves and arctic adventures.),
	page(DFRPG:A111),
	mods(Equipment)

"Sundial, Miniature",
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(40),
	baseweight(1),
	units(lbs),
	description(On a neck chain. Tells time, and allows Navigation at only -1 for equipment - but only in sunlight.),
	page(DFRPG:A111),
	mods(Equipment)
"Tent, 1-Person",
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(50),
	baseweight(5),
	units(lbs),
	description(Includes ropes, no poles needed.),
	page(DFRPG:A111),
	mods(Equipment)
"Tent, 2-Person",
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(80),
	baseweight(12),
	units(lbs),
	description(Includes ropes, requires one 6-foot pole.),
	page(DFRPG:A111),
	mods(Equipment)
"Tent, 4-Person",
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(150),
	baseweight(30),
	units(lbs),
	description(Includes ropes, requires 2 poles.),
	page(DFRPG:A111),
	mods(Equipment)
"Tent, 20-Person",
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(1),
	basecost(300),
	baseweight(100),
	units(lbs),
	description(Includes ropes, requires 16 poles.),
	page(DFRPG:A111),
	mods(Equipment)
Wineskin,
	cat(Basics, Basics - Camping and Survival Gear, Camping and Survival Gear),
	techlvl(0),
	basecost(10),
	baseweight(0.25),
	units(lbs),
	description(Holds 1 gallon of liquid (8 lbs. if water).),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(8)

<Water>
Water (per gallon),
	techlvl(0),
	basecost(0),
	baseweight(8),
	units(lbs),
	description(It's water.),
	mods(Equipment)
Water (per half-pint),
	techlvl(0),
	basecost(0),
	baseweight(0.5),
	units(lbs),
	description(It's water.),
	mods(Equipment)
Water (per pint),
	techlvl(0),
	basecost(0),
	baseweight(1),
	units(lbs),
	description(It's water.),
	mods(Equipment)
Water (per quart),
	techlvl(0),
	basecost(0),
	baseweight(2),
	units(lbs),
	description(It's water.),
	mods(Equipment)
Water (per ounce),
	techlvl(0),
	basecost(0),
	baseweight(0.0625),
	units(lbs),
	description(It's water.),
	mods(Equipment)

<Combat Accessories>
Belt,
	cat(Basics, Basics - Combat Accessories, Combat Accessories),
	description(Clothing (p110) includes a belt stout enough to bear a scabbard on each hip plus a hafted weapon stuck through it. Buy extras to keep more weapons handy.),
	basecost(15),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	countcapacity(3)
Hip Quiver,
	cat(Basics, Basics - Combat Accessories, Combat Accessories),
	description(Holds 20 arrows or bolts.),
	basecost(15),
	baseweight(1),
	units(lbs),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	countcapacity(20)
"Hip Quiver, Large",
	cat(Basics, Basics - Combat Accessories, Combat Accessories),
	description(Holds 50 arrows or bolts. Two compartments.),
	basecost(30),
	baseweight(2),
	units(lbs),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	countcapacity(50)
Hobnails,
	cat(Basics, Basics - Combat Accessories, Combat Accessories),
	description(Added to any boots, cancel the -2 to attack and -2 to defend (but not the movement penalties) for Bad Footing (Exploits, p35). Give -1 to Stealth vs. Hearing.),
	basecost(25),
	baseweight(1),
	units(lbs),
	page(DFRPG:A111),
	mods(Equipment),
	conditional(-1 to SK:Stealth when "vs. Hearing and wearing the hobnail boots")
	
"Lanyard, chain",
	cat(Basics, Basics - Combat Accessories, Combat Accessories),
	basecost(15),
	baseweight(0.5),
	units(lbs),
	description(Lets you retrieve dropped weapon on a DX roll. Each attempt requires a Ready maneuver. Can be cut: -6 to hit, DR4, HP 6.),
	page(DFRPG:A111),
	mods(Equipment)
"Lanyard, Leather",
	cat(Basics, Basics - Combat Accessories, Combat Accessories),
	techlvl(0),
	basecost(1),
	baseweight(0.1),
	units(lbs),
	description(Lets you retrieve dropped weapon on a DX roll. Each attempt requires a Ready maneuver. Can be cut: -6 to hit, DR2, HP 2.),
	page(DFRPG:A111),
	mods(Equipment)
Shoulder Quiver,
	cat(Basics, Basics - Combat Accessories, Combat Accessories),
	description(Holds 12 arrows or bolts.),
	basecost(10),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	countcapacity(12)
Whetstone,
	cat(Basics, Basics - Combat Accessories, Combat Accessories),
	description(For sharpening weapons.),
	basecost(5),
	baseweight(1),
	units(lbs),
	page(DFRPG:A111),
	mods(Equipment)

<Containers>
Barrel,
	cat(Basics, Basics - Containers, Containers),
	basecost(65),
	baseweight(20),
	units(lbs),
	description(Holds 5 gallons of liquid (40 lbs. if water). DR 1, HP 11.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(40)
Bottle,
	cat(Basics, Basics - Containers, Containers),
	basecost(3),
	baseweight(1),
	units(lbs),
	description(Holds 1 quart of liquid (2 lbs. if water). DR 1, HP 4.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(2)
"Bottle, Small",
	cat(Basics, Basics - Containers, Containers),
	basecost(2),
	baseweight(0.5),
	units(lbs),
	description(Holds 1 pint of liquid (1 lb. if water). DR 1, HP 2.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(1)
Bucket,
	cat(Basics, Basics - Containers, Containers),
	basecost(15),
	baseweight(4),
	units(lbs),
	description(With rope handle. Holds 1 gallon of liquid (8 lbs. if water). DR 1, HP 6.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(8)
"Chest, Wooden, Small",
	cat(Basics, Basics - Containers, Containers),
	basecost(100),
	baseweight(18),
	units(lbs),
	description(For loot! Has brackets for two poles; add Basic Lift of carriers to assess encumbrance. Holds 100 lbs; DR 1, HP 10.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes), 
	weightcapacity(100)
"Chest, Wooden, Large",
	cat(Basics, Basics - Containers, Containers),
	basecost(200),
	baseweight(40),
	units(lbs),
	description(For loot! Has brackets for two poles; add Basic Lift of carriers to assess encumbrance. Holds 400 lbs; DR 2, HP 14.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes), 
	weightcapacity(400)
Sack,
	cat(Basics, Basics - Containers, Containers),
	basecost(30),
	baseweight(3),
	units(lbs),
	description(Holds 40 lbs. of loot. Requires two hands or a pole. DR 1, HP 5.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(40)
"Strongbox, Iron",
	cat(Basics, Basics - Containers, Containers),
	basecost(250),
	baseweight(15),
	units(lbs),
	description(Holds 40 lbs. of coins or other small items. DR 12, HP 10.),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(40)
"Vial, Crystal",
	cat(Basics, Basics - Containers, Containers),
	basecost(5),
	baseweight(0.25),
	units(lbs),
	description(Holds half a pint of liquid (0.5 lb. if water). Thick, with stopper - good for collecting corrosive goo. DR 1, HP 1),
	page(DFRPG:A111),
	mods(Equipment),
	isparent(yes),
	weightcapacity(0.5)

<Light Sources>
"Candle, Beeswax",
	cat(Basics, Basics - Light Sources, Light Sources),
	basecost(5),
	baseweight(1),
	units(lbs),
	description(Sufficient to read by. Lasts 24 hrs.),
	page(DFRPG:A111),
	mods(Equipment)
"Candle, Tallow",
	cat(Basics, Basics - Light Sources, Light Sources),
	basecost(0.5),
	baseweight(1),
	units(lbs),
	description(Tasty smell may give +1 or more to rolls for Wandering Monsters (Exploits, p. 85). Lasts 12 hrs.),
	page(DFRPG:A111),
	mods(Equipment)
Lantern,
	cat(Basics, Basics - Light Sources, Light Sources),
	basecost(20),
	baseweight(2),
	units(lbs),
	description(Eliminates darkness penalties in a two-yard radius. Requires a hand. Burns for 24 hours on 1 pint of oil.),
	page(DFRPG:A111),
	mods(Equipment)
Oil (per pint),
	cat(Basics, Basics - Light Sources, Light Sources),
	basecost(2),
	baseweight(1),
	units(lbs),
	description(For lanterns. Not useful as a flaming weapon.),
	page(DFRPG:A111),
	mods(Equipment)
Torch,
	cat(Basics, Basics - Light Sources, Light Sources),
	basecost(3),
	baseweight(1),
	units(lbs),
	description(Eliminates darkness penalties in a two-yard radius. Requires a hand. Burns for 1 hour.),
	page(DFRPG:A111),
	mods(Equipment)

<Medical Gear>
Bandages,
	cat(Basics, Basics - Medical Gear, Medical Gear),
	basecost(10),
	baseweight(1),
	units(lbs),
	description(Cloth bandages for half-dozen wounds. Basic equipment for First Aid skill.),
	uses(6),
	uses_sections(count),
	page(DFRPG:A111),
	mods(Equipment)
First Aid Kit,
	cat(Basics, Basics - Medical Gear, Medical Gear),
	basecost(50),
	baseweight(2),
	units(lbs),
	description(Complete kit for treating wounds. +1 to First Aid skill.),
	page(DFRPG:A111),
	mods(Equipment),
	conditional(=+1 to "SK:First Aid")
Litter,
	cat(Basics, Basics - Medical Gear, Medical Gear),
	basecost(50),
	baseweight(25),
	units(lbs),
	description(For carrying wounded allies (or loot!) weighing up to 200lbs. Requires two bearers; add their Basic Lift to assess encumbrance.),
	page(DFRPG:A111),
	mods(Equipment)
	isparent(yes),
	weightcapacity(200)
Surgical Instruments,
	cat(Basics, Basics - Medical Gear, Medical Gear),
	basecost(300),
	baseweight(15),
	units(lbs),
	description(Basic equipment for Surgery skill. Also useful for removing internal organs and eyeballs from dead monsters without ruining them.),
	page(DFRPG:A111),
	mods(Equipment)

<Miscellaneous Hardware>
Chain (per yard),
	cat(Basics, Basics - Miscellaneous Hardware, Miscellaneous Hardware),
	basecost(15),
	baseweight(6),
	units(lbs),
	description(For anchoring traps and binding strong monsters. Supports 2,000 lbs.),
	page(DFRPG:A111),
	mods(Equipment)

"Cord, 3/16'' (per 10 yards)",
	cat(Basics, Basics - Miscellaneous Hardware, Miscellaneous Hardware),
	techlvl(0),
	basecost(1),
	baseweight(0.5),
	units(lbs),
	description(Mainly for pull-ropes and trip-ropes. Supports 90 lbs.),
	page(DFRPG:A111),
	mods(Equipment)
Iron Spike,
	cat(Basics, Basics - Miscellaneous Hardware, Miscellaneous Hardware),
	techlvl(2),
	basecost(1),
	baseweight(0.5),
	units(lbs),
	description(For spiking doors, anchoring traps, and so on.),
	page(DFRPG:A111),
	mods(Equipment)
"Ladder, 10'",
	cat(Basics, Basics - Miscellaneous Hardware, Miscellaneous Hardware),
	basecost(25),
	baseweight(15),
	units(lbs),
	description(Wooden. For scaling walls and crossing chasms.),
	page(DFRPG:A111),
	modifiers(Equipment)
"Pole, 6'",
	cat(Basics, Basics - Miscellaneous Hardware, Miscellaneous Hardware),
	techlvl(0),
	basecost(5),
	baseweight(3),
	units(lbs),
	description(For tasks like lifting chests, pitching tents, and prodding traps.),
	page(DFRPG:A111),
	mods(Equipment)
"Pole, 10'",
	cat(Basics, Basics - Miscellaneous Hardware, Miscellaneous Hardware),
	techlvl(1),
	basecost(8),
	baseweight(5),
	units(lbs),
	description(For things you wouldn't touch with a 6' pole!),
	page(DFRPG:A111),
	mods(Equipment)
"Rope, 3/8'' (per 10 yards)",
	cat(Basics, Basics - Miscellaneous Hardware, Miscellaneous Hardware),
	techlvl(1),
	basecost(5),
	baseweight(1.5),
	units(lbs),
	description(Supports 300lbs.),
	page(DFRPG:A111),
	mods(Equipment)
"Rope, 3/4'' (per 10 yards)",
	cat(Basics, Basics - Miscellaneous Hardware, Miscellaneous Hardware),
	techlvl(1),
	basecost(25),
	baseweight(5),
	units(lbs),
	description(Supports 1,100 lbs.),
	page(DFRPG:A111),
	mods(Equipment)

<Musical Instruments>
Bagpipes,
	cat(Basics, Basics - Musical Instruments, Musical Instruments),
	basecost(270),
	baseweight(3),
	units(lbs),
	description(Audible for miles. You cannot speak while playing, and friends and foes alike will have -2 to Hearing within 10 yards. Two-handed.),
	page(DFRPG:A112),
	modifiers(Equipment)
Drum,
	cat(Basics, Basics - Musical Instruments, Musical Instruments),
	basecost(40),
	baseweight(2),
	units(lbs),
	description(Audible for miles! Two-handed.),
	page(DFRPG:A112),
	modifiers(Equipment)
Harp,
	cat(Basics, Basics - Musical Instruments, Musical Instruments),
	basecost(250),
	baseweight(3),
	units(lbs),
	description(Can play softly enough not to be heard through a door. Two-handed.),
	page(DFRPG:A112),
	modifiers(Equipment)
Horn,
	cat(Basics, Basics - Musical Instruments, Musical Instruments),
	basecost(100),
	baseweight(2),
	units(lbs),
	description(Audible for miles! You cannot speak while playing. Two-handed.),
	page(DFRPG:A112),
	modifiers(Equipment)
Stringed,
	cat(Basics, Basics - Musical Instruments, Musical Instruments),
	basecost(150),
	baseweight(5),
	units(lbs),
	description(Cittern, lute, oud, or the like. Two-handed.),
	page(DFRPG:A112),
	modifiers(Equipment)
Whistle,
	cat(Basics, Basics - Musical Instruments, Musical Instruments),
	basecost(5),
	baseweight(0.1),
	units(lbs),
	description(For signalling - not suitable for Bard-Song.),
	page(DFRPG:A112),
	modifiers(Equipment)
Woodwind,
	cat(Basics, Basics - Musical Instruments, Musical Instruments),
	basecost(40),
	baseweight(1),
	units(lbs),
	description(Bamboo flute, tin whistle, or similar. You cannot speak while playing. Two-handed.),
	page(DFRPG:A112),
	modifiers(Equipment)
Zither,
	cat(Basics, Basics - Musical Instruments, Musical Instruments),
	basecost(250),
	baseweight(3),
	units(lbs),
	description(Can play softly enough not to be heard through a door. Two-handed.),
	page(DFRPG:A112),
	modifiers(Equipment)

<Tools>
Balance & Weights,
	cat(Basics, Basics - Tools, Tools),
	techlvl(1),
	basecost(35),
	baseweight(3),
	units(lbs),
	description(Can precisely weight up to 2 lbs. of gold, magic herbs, etc.),
	page(DFRPG:A112),
	mods(Equipment)
"Crowbar, 3'",
	cat(Basics, Basics - Tools, Tools),
	basecost(20),
	baseweight(3),
	units(lbs),
	description(For forced entry. Treat as small mace in combat, at -1 to skill.),
	page(DFRPG:A112),
	calcrange(yes),
	itemnotes({Skill score includes -1 to Hit.}|{Skill score includes -1 to Hit.}),
	mode(Swing|Thrown),
	damage(sw+2|sw+2),
	damtype(cr|cr),
	reach(1|),
	parry(0U|),
	minst(10|10),
	notes([1]|),
	skillused(SK:Axe/Mace-1, ST:DX-6, SK:Flail-5, SK:Two-Handed Axe/Mace-4|SK:Thrown Weapon (Axe/Mace)-1, ST:DX-5),
	acc(|1),
	rangehalfdam(|ST*1),
	rangemax(|ST*1.5),
	rof(|1),
	shots(|T(1)),
	bulk(|-3)
File,
	cat(Basics, Basics - Tools, Tools),
	basecost(40),
	baseweight(1),
	units(lbs),
	description(Can saw through hinge, padlock, or similar hardware in (DR + HP) minutes.),
	page(DFRPG:A112),
	mods(Equipment)
Hatchet (tool),
	cat(Basics, Basics - Tools, Tools),
	basecost(15),
	baseweight(2),
	units(lbs),
	description(For Forced Entry, cutting firewood, and so on. Treat as a hatchet in combat, at -1 to skill.),
	page(DFRPG:A112),
	mods(Equipment),
	calcrange(yes),
	itemnotes({Skill score includes -1 to Hit.}|{Skill score includes -1 to Hit.}),
	mode(Swing|Thrown),
	damage(sw|sw),
	damtype(cut|cut),
	reach(1|),
	parry(0|),
	minst(8|8),
	notes([1]|),
	skillused(SK:Axe/Mace-1, ST:DX-6, SK:Flail-5, SK:Two-Handed Axe/Mace-4|SK:Thrown Weapon (Axe/Mace)-1, ST:DX-5),
	acc(|1),
	rangehalfdam(|ST*1.5),
	rangemax(|ST*2.5),
	rof(|1),
	shots(|T(1)),
	bulk(|-2)
Machete (Kukri style),
	cat(Basics, Basics - Tools, Tools),
	basecost(20),
	baseweight(1.5),
	units(lbs),
	description(For slashing spider webs, sharpening stakes, and the like. Treat as a kukri or falchion (any size) from the Melee Weapons table (pp. 98-103), but at 40% of listed price. An improvised weapon: -1 to skill and cannot have weapon modifiers.),
	page(DFRPG:A112)
	mods(Equipment),
	newmode(swing, minst(7), reach(C, 1), parry(0), damage(sw+1 ), damtype(cut), notes(), skillused(SK:Knife-1, ST:DX-5, "SK:Main-Gauche"-4, SK:Shortsword-4), itemnotes({Skill score includes -1 to Hit for improvised weapon.})),_
	newmode(thrust, minst(7), reach(C), parry(0), damage(thr+1 ), damtype(imp), notes(), skillused(SK:Knife-1, ST:DX-5, "SK:Main-Gauche"-4, SK:Shortsword-4), itemnotes({Skill score includes -1 to Hit for improvised weapon.}))
Machete (Small falchion style),
	cat(Basics, Basics - Tools, Tools),
	basecost(80),
	baseweight(2),
	units(lbs),
	description(For slashing spider webs, sharpening stakes, and the like. Treat as a kukri or falchion (any size) from the Melee Weapons table (pp. 98-103), but at 40% of listed price. An improvised weapon: -1 to skill and cannot have weapon modifiers.),
	page(DFRPG:A112)
	mods(Equipment),
	newmode(swing, minst(8), reach(1), parry(0), damage(sw ), damtype(cut), notes(), skillused(SK:Shortsword-1, ST:DX-6, SK:Broadsword-3, "SK:Jitte/sai"-4, SK:Knife-5, SK:Saber-5, SK:Smallsword-5, SK:Tonfa-4), itemnotes({Skill score includes -1 to Hit for improvised weapon.})),_
	newmode(thrust, minst(8), reach(1), parry(0), damage(thr-2 ), damtype(imp), notes(), skillused(SK:Shortsword-1, ST:DX-6, SK:Broadsword-3, "SK:Jitte/sai"-4, SK:Knife-5, SK:Saber-5, SK:Smallsword-5, SK:Tonfa-4), itemnotes({Skill score includes -1 to Hit for improvised weapon.}))
Machete (Falchion style),
	cat(Basics, Basics - Tools, Tools),
	basecost(160),
	baseweight(3),
	units(lbs),
	description(For slashing spider webs, sharpening stakes, and the like. Treat as a kukri or falchion (any size) from the Melee Weapons table (pp. 98-103), but at 40% of listed price. An improvised weapon: -1 to skill and cannot have weapon modifiers.),
	page(DFRPG:A112)
	mods(Equipment),
	newmode(swing, minst(10), reach(1), parry(0), damage(sw+1 ), damtype(cut), notes(), skillused(SK:Shortsword-1, ST:DX-6, SK:Broadsword-3, "SK:Jitte/sai"-4, SK:Knife-5, SK:Saber-5, SK:Smallsword-5, SK:Tonfa-4), itemnotes({Skill score includes -1 to Hit for improvised weapon.})),_
	newmode(thrust, minst(10), reach(1), parry(0), damage(thr-2 ), damtype(imp), notes(), skillused(SK:Shortsword-1, ST:DX-6, SK:Broadsword-3, "SK:Jitte/sai"-4, SK:Knife-5, SK:Saber-5, SK:Smallsword-5, SK:Tonfa-4), itemnotes({Skill score includes -1 to Hit for improvised weapon.}))
Machete (Large falchion style),
	cat(Basics, Basics - Tools, Tools),
	basecost(250),
	baseweight(4.5),
	units(lbs),
	description(For slashing spider webs, sharpening stakes, and the like. Treat as a kukri or falchion (any size) from the Melee Weapons table (pp. 98-103), but at 40% of listed price. An improvised weapon: -1 to skill and cannot have weapon modifiers.),
	page(DFRPG:A112)
	mods(Equipment),
	newmode(swing, minst(11), reach(1), parry(0U), damage(sw+2 ), damtype(cut), notes(), skillused(SK:Broadsword-1, ST:DX-6, SK:Rapier-5, SK:Saber-5, SK:Shortsword-3, "SK:Two-Handed Sword"-5), itemnotes({Skill score includes -1 to Hit for improvised weapon.})),_
	newmode(thrust, minst(11), reach(1), parry(0U), damage(thr-1 ), damtype(imp), notes(), skillused(SK:Broadsword-1, ST:DX-6, SK:Rapier-5, SK:Saber-5, SK:Shortsword-3, "SK:Two-Handed Sword"-5), itemnotes({Skill score includes -1 to Hit for improvised weapon.}))
Mallet,
	cat(Basics, Basics - Tools, Tools),
	basecost(15),
	baseweight(3),
	units(lbs),
	description(For Forced Entry, driving iron spikes, and staking vampires. Treat as a small mace in combat, at -1 to skill.),
	page(DFRPG:A112),
	mods(Equipment),
	calcrange(yes),
	itemnotes({Skill score includes -1 to Hit.}|{Skill score includes -1 to Hit.}),
	mode(Swing|Thrown),
	damage(sw+2|sw+2),
	damtype(cr|cr),
	reach(1|),
	parry(0U|),
	minst(10|10),
	notes([1]|),
	skillused(SK:Axe/Mace-1, ST:DX-6, SK:Flail-5, SK:Two-Handed Axe/Mace-4|SK:Thrown Weapon (Axe/Mace)-1, ST:DX-5),
	acc(|1),
	rangehalfdam(|ST*1),
	rangemax(|ST*1.5),
	rof(|1),
	shots(|T(1)),
	bulk(|-3)

Pickaxe,
	cat(Basics, Basics - Tools, Tools),
	techlvl(2),
	basecost(15),
	baseweight(8),
	units(lbs),
	description(Without this (or magic!) you can't dig through rock.),
	page(DFRPG:A112),
	mods(Equipment)
Saw,
	cat(Basics, Basics - Tools, Tools),
	techlvl(0),
	basecost(150),
	baseweight(3),
	units(lbs),
	description(Used to hack of valuable horns, tusks, etc.),
	page(DFRPG:A112),
	mods(Equipment)
Shovel,
	cat(Basics, Basics - Tools, Tools),
	techlvl(1),
	basecost(12),
	baseweight(6),
	units(lbs),
	description(Without this, the GM may multiply the time the time for any kind of digging by four.),
	page(DFRPG:A112),
	mods(Equipment)
Tongs, 
	cat(Basics, Basics - Tools, Tools),
	basecost(40), 
	baseweight(3), 
	units(lbs),
	techlvl(1), 
	description(For picking up things you don't dare touch.),
	page(DFRPG:A112),
	mods(Equipment)
"Toolkit, Backpack (Body Armor)",
	cat(Basics, Basics - Tools, Tools),
	basecost(600),
	baseweight(20),
	units(lbs),
	description(Basic equipment for making or modifying items using Armory (Body Armor). Other specialties can use it, but at -2.),
	page(DFRPG:A112),
	mods(Equipment)
"Toolkit, Backpack (Melee Weapons)",
	cat(Basics, Basics - Tools, Tools),
	basecost(600),
	baseweight(20),
	units(lbs),
	description(Basic equipment for making or modifying items using Armory (Melee Weapons). Other specialties can use it, but at -2.),
	page(DFRPG:A112),
	mods(Equipment)
"Toolkit, Backpack (Missile Weapons)",
	cat(Basics, Basics - Tools, Tools),
	basecost(600),
	baseweight(20),
	units(lbs),
	description(Basic equipment for making or modifying items using Armory (Missile Weapons). Other specialties can use it, but at -2.),
	page(DFRPG:A112),
	mods(Equipment)
Wheelbarrow,
	cat(Basics, Basics - Tools, Tools),
	techlvl(2),
	basecost(60),
	baseweight(18),
	units(lbs),
	description(Holds 350 lbs. Can be pushed, or harnessed behind someone. Divide effective weight of load by 5.),
	page(DFRPG:A112),
	mods(Equipment),
	isparent(yes),
	weightcapacity(350)

<Writing Equipment>
Chalk,
	cat(Basics, Basics - Writing Equipment, Writing Equipment),
	basecost(1), 
	baseweight(0.25), 
	units(lbs),
	techlvl(1), 
	page(DFRPG:A112),
	description(Enough to mark a trail through a typical dungeon level.),
	mods(Equipment)
Paper (per 20 sheets),
	cat(Basics, Basics - Writing Equipment, Writing Equipment),
	basecost(20),
	baseweight(1),
	units(lbs),
	description(Heavy papyrus or similar, suitable for maps (one sheet per typical dungeon level) or magical writings.),
	page(DFRPG:A112),
	mods(Equipment)
Scribe's Kit,
	cat(Basics, Basics - Writing Equipment, Writing Equipment),
	techlvl(3),
	basecost(50),
	baseweight(2),
	units(lbs),
	description(Quills, inkbottles, and penknife.),
	page(DFRPG:A112),
	mods(Equipment)

<Special Orders>
<Adventure-Wear>
Alchemist's Garb,
	cat(Special Orders, Special Orders - Adventure-Wear, Adventure-Wear),
	basecost(225),
	baseweight(5),
	units(lbs),
	description(Treated cloth apron, mask, and gloves prevent all ill effects from failures when rinsing off gunk, extracting venom, or similar. Also negates contact agents sprayed from the front. Can be worn as "armor" (DR 0) or over armor (bulky, -1 DX).),
	dr(0),
	location(Torso, Face, Eyes, Hands),
	page(DFRPG:A112),
	mods(Equipment)
Anti-Garrote Collar,
	cat(Special Orders, Special Orders - Adventure-Wear, Adventure-Wear),
	basecost(35),
	baseweight(1),
	units(lbs),
	dr(0),
	drnotes(+4 DR vs. strangling and garroting damage (but not neck blows).),
	location(Neck),
	description(Gives +4 DR vs. strangling and garroting damage (but not neck blows). Can be worn with armor at no DX penalty.),
	page(DFRPG:A112),
	mods(Equipment)
Delver's Webbing,
	cat(Special Orders, Special Orders - Adventure-Wear, Adventure-Wear),
	basecost(160),
	baseweight(3),
	units(lbs),
	description(Belt and suspenders with pouches for 20 lbs. of potions, gadgets, and small (Reach C) weapons. Readying a carried item takes just one Ready maneuver - and is a free action with a suitable Fast-Draw roll. Gives +1 to DX and Fast-Draw rolls to reach these items. Rumored to be the work of brownies!),
	page(DFRPG:A112),
	mods(Equipment),
	isparent(yes)
Helmet Lamp,
	cat(Special Orders, Special Orders - Adventure-Wear, Adventure-Wear),
	description(Shuttered, hands-free lantern that throws a five-yard beam. Attaches to all popular helmet patterns. Burns for 12 hours on 1 pint of oil.),
	basecost(100),
	baseweight(2),
	units(lbs),
	page(DFRPG:A112),
	mods(Equipment)
Potion Belt,
	cat(Special Orders, Special Orders - Adventure-Wear, Adventure-Wear),
	description(Belt with four slots, each of which can carry one 'grenade' bottle (1 lb.) or two potion vials (0.5 lb. each). Wearer can reach them with Ready or Fast-Draw. Padding removes risk of accidental breakage and gives containers +2 DR vs. deliberate attacks.),
	basecost(60),
	baseweight(1),
	units(lbs),
	page(DFRPG:A112),
	mods(Equipment),
	isparent(yes)
Quick-Release Backpack,
	cat(Special Orders, Special Orders - Adventure-Wear, Adventure-Wear),
	description(Holds 40 lbs. of gear. Dropping it is a free action. Items liable to break if dropped must check for this (1 on 1d if unsure).),
	basecost(300),
	baseweight(3),
	units(lbs),
	page(DFRPG:A112),
	mods(Equipment),
	isparent(yes), 
	weightcapacity(40)
Scroll Belt,
	cat(Special Orders, Special Orders - Adventure-Wear, Adventure-Wear),
	basecost(60),
	baseweight(1),
	units(lbs),
	description(Belt with 10 waxed leather cylinders for individual maps or scrolls. Waterproof, and prevents ignition by less than 10 points of fire damage. Wearer can reach scrolls with Ready or Fast-Draw. Unrolling them takes another Ready.),
	page(DFRPG:A112),
	mods(Equipment),
	isparent(yes),
	countcapacity(10)

<Camping and Survival Gear>
Alchemist's Matches,
	cat(Special Orders, Special Orders - Camping and Survival Gear, Camping and Survival Gear),
	description(Start fires in just one second! Waterproof tin of 50. May set fire to a pack if dropped (1 on 1d).),
	basecost(15),
	baseweight(0.25)
	units(lbs),
	page(DFRPG:A112),
	uses(50),
	uses_sections(count)
Block and Tackle,
	cat(Special Orders, Special Orders - Camping and Survival Gear, Camping and Survival Gear),
	description(Pully arrangement can lift up to 32xBL at a rate of one foot per second. Add together the BL of everyone who pulls on the rope.),
	basecost(200),
	baseweight(10)
	units(lbs),
	page(DFRPG:A112)
Compass,
	cat(Special Orders, Special Orders - Camping and Survival Gear, Camping and Survival Gear),
	description(Allows Navigation rolls at no penalty for equipment.),
	basecost(50),
	baseweight(5),
	units(lbs),
	page(DFRPG:A112),
	mods(Equipment)

Dwarven Rations (per meal),
	cat(Special Orders, Special Orders - Camping and Survival Gear, Camping and Survival Gear),
	description(One meal of nasty, hard bread. A steady diet (a month or more) gives Resistant to Poison 3 while continued.),
	basecost(5),
	baseweight(1),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Elven Rations (per 3 meals),
	cat(Special Orders, Special Orders - Camping and Survival Gear, Camping and Survival Gear),
	description(Tasty wafers of light-but-nourishing food. Three meals.),
	basecost(15),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Timed Candle,
	cat(Special Orders, Special Orders - Camping and Survival Gear, Camping and Survival Gear),
	description(Alchemist's mixture burns at a precise rate for 12 hours. Marked in hours and minutes. Handy for timing spell durations - especially underground!),
	basecost(5),
	baseweight(1),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)

<Combat Accessories>
Bandoleer,
	cat(Special Orders, Special Orders - Combat Accessories, Combat Accessories),
	description(Carries 6 lbs. of thrown weapons (e.g. 24 daggers, 12 packs of caltrops, or 30 nageteppo). Wearer can reach them with Ready or Fast-Draw.),
	basecost(60),
	baseweight(1),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Crossbow Rest,
	cat(Special Orders, Special Orders - Combat Accessories, Combat Accessories),
	description(Lets a standing crossbowman brace while aiming. Takes a Ready to set up.),
	basecost(40),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Crossbow Sight,
	cat(Special Orders, Special Orders - Combat Accessories, Combat Accessories),
	description(+1 Acc for aimed shots. Iron, not fragile glass.),
	basecost(100),
	baseweight(1),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Crossbow Sling,
	cat(Special Orders, Special Orders - Combat Accessories, Combat Accessories),
	description(Totes a loaded crossbow 'hands free,' a Ready maneuver away from shooting. Weapon safely re-slings itself when dropped (a free action).),
	basecost(200),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Dwarven Whetstone,
	cat(Special Orders, Special Orders - Combat Accessories, Combat Accessories),
	description(Gives cutting or impaling weapons +1 damage for sharpness with first blow that connects after sharpening (1 minute/weapon).),
	basecost(500),
	baseweight(1),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Goat's Foot,
	cat(Special Orders, Special Orders - Combat Accessories, Combat Accessories),
	basecost(50),
	baseweight(2),
	units(lbs),
	techlvl(3),
	page(DFRPG:A113),
	description(Needed to cock crossbow with ST 3 or 4 greater than yours.),
	mods(Equipment)
Shield Lamp,
	cat(Special Orders, Special Orders - Combat Accessories, Combat Accessories),
	basecost(200),
	baseweight(4),
	units(lbs),
	description(Tough (DR 6, HP 12) lantern clamps to any medium or large shield. Throws a five-yard beam, hands free. Creatues subject to ill effects from light suffer these automatically if blocked! Burns for 12 hours on one pint of oil.),
	page(DFRPG:A113),
	mods(Equipment)
Shield Lectern,
	cat(Special Orders, Special Orders - Combat Accessories, Combat Accessories),
	basecost(50),
	baseweight(2),
	units(lbs),
	description(Bolts to the back of any medium or large shield. Firmly holds a map, scroll, or open book where it can be consulted hands-free or written on with a free hand.),
	page(DFRPG:A113),
	mods(Equipment)

<Covert Ops and Security Gear>
Bit and Brace,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Useful for drilling peepholes. Does sw-2(2) huge piercing damage per second to wood.),
	basecost(120),
	baseweight(5),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Caltrops (per hex),
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Take a Ready maneuver to deploy. Those who miss a Vision-2 roll step on a number of spikes equal to margin of failure. Each inflicts thr-3 impaling damage - based on the victim's ST - to a random foot. Maximum damage is 4 points per spike. Caltrops that penetrate DR get embedded and continue to roll damage each turn until the foot is crippled or until removed (two Ready maneuvers).),
	basecost(5),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Climbing Spikes,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Strap-on spikes for both hands and feet allow scaling of vertical surfaces at no penalty.),
	basecost(400),
	baseweight(4),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Disguise Kit,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(+1 to Disguise skill.),
	gives(=+1 to SK:Disguise),
	basecost(800),
	baseweight(10),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Dungeon Camouflage (per suit),
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Mottling gives +1 to Camouflage, and to Stealth vs. Vision, in underground conditions. Painted onto/dyed into any armor or clothing that isn’t ornate.),
	conditional(=+1 to SK:Camouflage when "in underground conditions.", =+1 to SK:Stealth when "vs Vision in underground conditions."),
	basecost(240),
	baseweight(0),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Face Paint (per 10 uses),
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(If you’re wearing dungeon camouflage (above), boosts the bonus to +2 for two hours. No bonus by itself.),
	conditional(=+1 to SK:Camouflage when "used with Dungeon Camouflage, for 2 hours.",=+1 to SK:Stealth when "used with Dungeon Camouflage, for 2 hours."),
	basecost(10),
	baseweight(0.2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Giant Spider Silk Cord (per 10 yards),
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Supports 360 lbs.),
	basecost(100),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Grapnel,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Throw to STx2 yards. Supports 300 lbs.),
	basecost(80),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Lockpicks,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Basic equipment for Lockpicking skill.),
	basecost(50),
	baseweight(0.1),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Lockpicks, Good",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Good quality equipment for Lockpicking skill: +1 to skill.),
	gives(=+1 to SK:Lockpicking),
	basecost(250),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Lockpicks, Fine",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Fine quality equipment for Lockpicking skill: +2 to skill.),
	gives(=+2 to SK:Lockpicking),
	basecost(1000),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Nageteppo, Flash",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(When hurled, everyone within 10 yards who has an unobstructed line of sight to the point of impact must roll vs. HT or suffer Blindness. Roll vs. HT to recover every turn.),
	basecost(40),
	baseweight(0.2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Nageteppo, Smoke",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(When hurled, fills a two-yard radius with smoke (-10 to Vision) for 5 seconds.),
	basecost(40),
	baseweight(0.2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Ninja Slippers,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Padding pulls over any boots without hobnails (p. 111), giving +1 to Stealth vs. Hearing.),
	conditional(=+1 to SK:Stealth when "vs Hearing."),
	basecost(100),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Padlock, Cheap",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(For chains, chests, and strongboxes. DR 3, HP 4; picked at +5 to Lockpicking.),
	basecost(20),
	baseweight(1),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Padlock, Good",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(For chains, chests, and strongboxes. DR 6, HP 5; no Lockpicking modifier.),
	basecost(400),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Padlock, Fine",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(For chains, chests, and strongboxes. DR 12, HP 5; picked at -5 to Lockpicking.),
	basecost(8000),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Portable Ladder, 30'",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Wooden slats attached to two hooked ropes. No Climbing roll required, once attached. Fits in a pack.),
	basecost(200),
	baseweight(10),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Portable Ram,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Miniature, steel-capped ram with handles requires two to four users. Does swing+3d+1 crushing damage every three seconds. Use highest ST plus 1/5 the total of all other ST scores.),
	basecost(150),
	baseweight(35),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Shackles,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(DR 4, HP 10.),
	basecost(200),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Snorkel, 6'",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Airtight bamboo tube with mouthpiece.),
	basecost(30),
	baseweight(1),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
Spy's Horn,
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Carefully shaped hollow horn, open at both ends, allows a Hearing roll to listen through doors, shutters, and so on, at a penalty equal to barrier's (DR + HP)/5.),
	basecost(100),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Trap-Finder's Kit, Good",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Not necessary to use Traps skill, but give a bonus when actively search for, disarming, or removing traps. Good kit (well-made probes): +1 to skill.),
	conditional(=+1 to SK:Traps when "actively searching for, disarming, or removing traps"),
	basecost(250),
	baseweight(2),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)
"Trap-Finder's Kit, Fine",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Not necessary to use Traps skill, but give a bonus when actively search for, disarming, or removing traps. Fine kit (mirror-on-a-stick, spring-loaded pincers, etc): +2 to skill.),
	conditional(=+2 to SK:Traps when "actively searching for, disarming, or removing traps"),
	basecost(1250),
	baseweight(10),
	units(lbs),
	page(DFRPG:A113),
	mods(Equipment)

"Traps, Mini-trap",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Spring-loaded leg-hold traps. Roll vs. Traps to set. If chained or staked down, victim must break free from trap's ST to move away; 1d-1 cr, ST 8.),
	basecost(80),
	baseweight(2.5),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
"Traps, Man trap",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Spring-loaded leg-hold traps. Roll vs. Traps to set. If chained or staked down, victim must break free from trap's ST to move away; 1d+1 cr, ST 12.),
	basecost(180),
	baseweight(6),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
"Traps, Monster trap",
	cat(Special Orders, Special Orders - Covert Ops and Security Gear, Covert Ops and Security Gear),
	description(Spring-loaded leg-hold traps. Roll vs. Traps to set. If chained or staked down, victim must break free from trap's ST to move away; 1d+3 cr, ST 16.),
	basecost(320),
	baseweight(11),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)

<Esoteric Supplies>
Backpack Alchemy Lab,
	cat(Special Orders, Special Orders - Esoteric Supplies, Esoteric Supplies),
	description(Basic equipment for identifying potions and magic items with Alchemy skill; -2 to brew anything in the field.),
	basecost(1000),
	baseweight(10),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)

Healer's Kit (Holy),
	cat(Special Orders, Special Orders - Esoteric Supplies, Esoteric Supplies),
	description(Basic equipment for one specialty of Esoteric Medicine skill. Required to use that skill--but in situations where it or First Aid would do, gives +1 to either skill.),
	conditional(=+1 to "SK:Esoteric Medicine (Holy)" when "either Esoteric Medicine or First Aid could apply", =+1 to "SK:First Aid" when "either Esoteric Medicine or First Aid could apply"),
	basecost(200),
	baseweight(10),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Healer's Kit (Druidic),
	cat(Special Orders, Special Orders - Esoteric Supplies, Esoteric Supplies),
	description(Basic equipment for one specialty of Esoteric Medicine skill. Required to use that skill--but in situations where it or First Aid would do, gives +1 to either skill.),
	conditional(=+1 to "SK:Esoteric Medicine (Druidic)" when "either Esoteric Medicine or First Aid could apply", =+1 to "SK:First Aid" when "either Esoteric Medicine or First Aid could apply"),
	basecost(200),
	baseweight(10),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Healer's Kit (Chi),
	cat(Special Orders, Special Orders - Esoteric Supplies, Esoteric Supplies),
	description(Basic equipment for one specialty of Esoteric Medicine skill. Required to use that skill--but in situations where it or First Aid would do, gives +1 to either skill.),
	conditional(=+1 to "SK:Esoteric Medicine (Chi)" when "either Esoteric Medicine or First Aid could apply", =+1 to "SK:First Aid" when "either Esoteric Medicine or First Aid could apply"),
	basecost(200),
	baseweight(10),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)

Holy Symbol,
	cat(Special Orders, Special Orders - Esoteric Supplies, Esoteric Supplies),
	description(Ordinary religious symbol made of wood or cheap metal, and blessed only by your personal faith.),
	basecost(50),
	baseweight(1),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
"Holy Symbol, Blessed",
	cat(Special Orders, Special Orders - Esoteric Supplies, Esoteric Supplies),
	description(Sanctified by a high priest. Gives +1 to rolls for Exorcism, Turning, and other tests of faith (but not clerical spells).),
	basecost(250),
	baseweight(1),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
"Holy Symbol, High",
	cat(Special Orders, Special Orders - Esoteric Supplies, Esoteric Supplies),
	description(Sanctified by head of religious order. Gives +2 to rolls for Exorcism, Turning, and other tests of faith (but not clerical spells).),
	basecost(1000),
	baseweight(1),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Holy Water,
	cat(Special Orders, Special Orders - Esoteric Supplies, Esoteric Supplies),
	description(Small bottle holds enough (0.5 pint) to damage an unholy creature with a suitable Weakness. Hurl it as explained in Grenades (Exploits, p. 44).),
	basecost(15),
	baseweight(1),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)

<Optics>
Bull's-Eye Lantern,
	cat(Special Orders, Special Orders - Optics, Optics),
	description(Shuttered lantern with lens throws a 10yard beam. Requires a hand. Burns for 6 hours on 1 pint of oil.),
	basecost(100),
	baseweight(2),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment),
	isparent(yes)
Burning Glass,
	cat(Special Orders, Special Orders - Optics, Optics),
	description(Sets fires - but only in sunlight.),
	basecost(40),
	baseweight(0.25),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Delver's Periscope,
	cat(Special Orders, Special Orders - Optics, Optics),
	description(Angled mirrors in telescoping one-yard tube let you peer around obstacles without exposing body parts. Those being observed roll Vision at -6 to notice the end poking out.),
	basecost(50),
	baseweight(4),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
"Mirror, Hand",
	cat(Special Orders, Special Orders - Optics, Optics),
	description(Glass-covered bronze or lead. Useful for peering around corners.),
	basecost(15),
	baseweight(1),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
"Mirror, Tall",
	cat(Special Orders, Special Orders - Optics, Optics),
	description(Glass-covered bronze or lead. Large enough to reflect Medusa's gaze or fool stupid goblins.),
	basecost(125),
	baseweight(10),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Reflector,
	cat(Special Orders, Special Orders - Optics, Optics),
	description(Concave reflector on headband concentrates light where you’re looking. Flip it down over one eye and peer through the hole. Allows unpenalized reading, lockpicking, trap removal, and so on when darkness penalty is no worse than -3.),
	basecost(75),
	baseweight(1),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Telescope,
	cat(Special Orders, Special Orders - Optics, Optics),
	description(Lets you ignore -1 in range penalties to Vision rolls to locate a distant target, or -2 in range penalties if observing an already-located target.),
	basecost(500),
	baseweight(6),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Tinted Goggles,
	cat(Special Orders, Special Orders - Optics, Optics),
	description('Alchemist’s goggles' grant +5 to resist dazzling or blindness from flashes or glare, at the cost of -5 to Vision rolls. Give DR 1 to the eyes, but break if this is penetrated!),
	gives(=-5 to ST:Vision),
	dr(1),
	location(eyes),
	drnotes("Fragile, breaks if penetrated."),
	basecost(150),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)

<Scholarly Gear>
Faerie Ink,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(Alchemical ink, sold by leprechauns, gives completely secret writing until exposed to special developer (the See Secrets spell will reveal it, too).),
	basecost(75),
	baseweight(.5),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Faerie Ink Developer,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(Reveals text written with Faerie Ink.),
	basecost(75),
	baseweight(.5),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Manual,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(Allows default rolls for one IQ-based 'information' skill that normally has no default: Alchemy, Herb Lore, a Hidden Lore specialty, or anything the GM invents. Roll at IQ-4 if Easy, IQ-5 if Average, IQ-6 if Hard, or IQ-7 if Very Hard.),
	basecost(100),
	baseweight(6),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Map,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(Rugged, foldable, and reliable map of explored dungeon, city, or wilderness. Unreliable maps are cheaper),
	basecost(100),
	baseweight(0.1),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Mapping Kit,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(Specialized tools and rulers give +1 to Cartography rolls to make maps.),
	conditional(=+1 to SK:Cartography when "making maps."),
	basecost(50),
	baseweight(2),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Scroll Case,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(Waterproof and fireproof bone-and-metal case protects 20 rolled scrolls or maps from the elements. Takes a Ready to open or close. 1d seconds to find a specific scroll. With shoulder strap.),
	basecost(75),
	baseweight(1),
	units(lbs),
	page(DFRPG:A114),
	isparent(yes),
	countcapacity(20),
	mods(Equipment)
Self-Righting Hourglass,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(One-hour model, graduated in minutes. Useful for timing potion durations. Weights and floats keep it upright in water jar.),
	basecost(160),
	baseweight(4),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Tome,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(As manual, but also gives those who know the skill +1 to use it to identify items and do research.),
	basecost(500),
	baseweight(12),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)
Wax Tablet,
	cat(Special Orders, Special Orders - Scholarly Gear, Scholarly Gear),
	description(Erasable, reusable, waterproof writing surface.),
	basecost(10),
	baseweight(2),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)


********************************************************************************************************\[STOP]
<Concoctions>
*******************************************************************************************************\[START]
<Chemicals>
Acid (Grenade),
	cat(Concoctions, Concoctions - Chemicals, Chemicals),
	description(Ordinary acid inflicts 1d-3 corrosion damage; DR protects normally. Can instead be used to burn through a mundane lock in 3d minutes.),
	basecost(10),
	baseweight(1),
	units(lbs),
	page(DFRPG:A114),
	mods(Equipment)

Alchemist's Fire (Grenade),
	cat(Concoctions, Concoctions - Chemicals, Chemicals),
	description(Self-igniting sticky oil! A direct hit causes 1d burning damage/second for 30 seconds or until the target rolls on ground; armor DR protects at 1/5 normal. Tossed at the ground, it creates a two-yard-radius fire (1d-1 burn/second) for 30 seconds.),
	basecost(100),
	baseweight(1),
	units(lbs),
	page(DFRPG:A115),
	mods(Equipment)
Glow Vial (Utility),
	cat(Concoctions, Concoctions - Chemicals, Chemicals),
	description(Once separate pill is dropped into vial, glows brightly enough to eliminate darkness penalties in a two-yard radius for 12 hours. Includes cord for wearing around neck, light shows, etc. Liquid can instead be used to mark a glowing path through one typical dungeon level.),
	basecost(30),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A115),
	mods(Equipment)
Glue (Grenade),
	cat(Concoctions, Concoctions - Chemicals, Chemicals),
	description(Fast-setting sticky gunk. A direct hit means the target must roll vs. ST to pull items from belts, pouches, quivers, or scabbards, or to drop or throw anything; failure means that turn’s maneuver counts as Do Nothing. Mail and plate armor stiffen up: -2 to DX. The glue takes 30 minutes to chip off, negating these effects. Tossed at the ground, it leaves a two-yard-radius sticky spot: for 30 seconds, crossing each hex costs +1 movement point.),
	basecost(60),
	baseweight(1),
	units(lbs),
	page(DFRPG:A115)
Visibility Dust (Grenade),
	cat(Concoctions, Concoctions - Chemicals, Chemicals),
	description(Creates a two-yard-radius dust cloud when tossed at the ground. Invisible entities caught in this become partially visible. Attacks on them are at only -3, and defenses against them are unpenalized, until they rinse it off by jumping into water.),
	basecost(50),
	baseweight(1),
	units(lbs),
	page(DFRPG:A115)

<Natural Preparations>
Anti-Toxin (Drinkable; Specify Type),
	cat(Concoctions, Concoctions - Natural Preparations, Natural Preparations),
	description(Herbal antidote for one specific poison or venom (not potion). Completely halts those effects after 1d minutes.),
	basecost(20),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A115),
	mods(Equipment)
Garlic (Bundle),
	cat(Concoctions, Concoctions - Natural Preparations, Natural Preparations),
	description(Reputedly repels vampires.),
	basecost(5),
	baseweight(0.25),
	units(lbs),
	page(DFRPG:A115),
	mods(Equipment)
Wolfsbane (Bundle),
	cat(Concoctions, Concoctions - Natural Preparations, Natural Preparations),
	description(Reputedly repels lycanthropes.),
	basecost(5),
	baseweight(0.25),
	units(lbs),
	page(DFRPG:A115),
	mods(Equipment)

<Poisons>
Bladeblack (Utility, per dose),
	cat(Concoctions, Concoctions - Poisons, Poisons),
	description(Deadliest manmade blade venom, from the legendary Assassins’ Guild. A living victim must make an immediate HT-5 roll or suffer 6d injury.),
	basecost(1000),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Blinding Powder (Grenade),
	cat(Concoctions, Concoctions - Poisons, Poisons),
	description(Contact agent made from natural irritants. Dust fills a two-yard radius. Any living creature with eyes must make an immediate HT-2 roll or be blind for 1d minutes. Washing out the eyes with water for five seconds ends this effect.),
	basecost(300),
	baseweight(1),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Demon's Brew (Grenade),
	cat(Concoctions, Concoctions - Poisons, Poisons),
	description(Respiratory agent made from demon ichor. Fumes affect a two-yard radius. Anything that breathes takes 2d injury, or only 1d with a HT roll.),
	basecost(500),
	baseweight(1),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Monster Drool (Utility, per dose),
	cat(Concoctions, Concoctions - Poisons, Poisons),
	description(Generic blade venom made from giant centipedes, spiders, or whatever else is in season. Often used on whole quivers of arrows because it’s cheap. A living victim must make an immediate HT roll or suffer 2 points of injury.),
	basecost(20),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Oozing Doom (Grenade),
	cat(Concoctions, Concoctions - Poisons, Poisons),
	description(Contact agent made from slimes. Soaks clothing – or enters cracks in manmade or natural armor – in DR seconds. Living victims then take 2d injury, or only 1d with a HT roll.),
	basecost(100),
	baseweight(1),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Paralytic Slime (Utility, per dose),
	cat(Concoctions, Concoctions - Poisons, Poisons),
	description(Blade venom derived from a mix of rare fungus and giant-insect venom. A living victim must make an immediate HT-2 roll or be paralyzed for 2d*10 minutes.),
	basecost(500),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)

********************************************************************************************************\[STOP]
<Magic Items>
*******************************************************************************************************\[START]
<Potions>
Agility Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(+1d DX for 1 hour.),
	basecost(700),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Alchemical Antidote (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Instantly negates all potions currently affecting the drinker.),
	basecost(400),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Alkahest (Grenade),
	cat(Magic Items, Magic Items - Potions, Potions),
	description('Universal solvent' inflicts 1d corrosion injury on any tangible foe, bypassing DR. Alternatively, dissolves a lock made from any metal in 1d minutes.),
	basecost(1650),
	baseweight(1),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Balm of Regeneration (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Salve, not a potion. Heals user 2 HP at the cost of 1 FP, once per second, until the user reaches either full HP or 0 FP.),
	basecost(900),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Death Potion (Grenade),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Fumes affect a two-yard radius. Targets that breathe take 4d injury, or only 2d with a HT roll.),
	basecost(1000),
	baseweight(1),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Fire Resistance Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Immunity to fire damage for 1d hours.),
	basecost(500),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Flight Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Flight at Move 10 for 1 hour.),
	basecost(3000),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
"Healing Potion, Greater (Drinkable)",
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Heals 4d HP.),
	basecost(1000),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
"Healing Potion, Major (Drinkable)",
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Heals 2d HP.),
	basecost(350),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
"Healing Potion, Minor (Drinkable)",
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Heals 1d HP.),
	basecost(120),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Invisibility Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Grants invisibility for 1d*10 minutes, or until user takes offensive action (e.g., attacks) or casts a spell.),
	basecost(2250),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Invulnerability Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(+3 DR, cumulative with other DR, for 1d+1 hours.),
	basecost(2100),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Liquid Ice (Grenade),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Target takes 2d burning damage on contact due to extreme cold - not fire. Armor DR protects at 1/5 normal.),
	basecost(250),
	baseweight(1),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Magebane (Grenade),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Fumes affect a two-yard radius. Those who breathe them can't cast wizardly spells for 1 hour.),
	basecost(1400),
	baseweight(1),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Magic Resistance Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(+5 Magic Resistance (and -5 to spells) for 1 hour.),
	basecost(1600),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Paut (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Restores 4 FP depleted for magic.),
	basecost(135),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Perception Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(+6 to Sense rolls for 3d*5 minutes.),
	basecost(700),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Sleep Potion (Grenade),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Fumes affect a two-yard radius. Living beings who breathe them must roll HT-4 or sleep for 16-HT hours.),
	basecost(500),
	baseweight(1),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Speed Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(+1 Basic Speed and Move per dose (up to +3), for 3d*4 minutes.),
	basecost(550),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Strength Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(+1d ST (but no extra HP!) for 1 hour.),
	basecost(250),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)
Thieves' Oil (Utility),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Rubbed on the body, gives +5 to all rolls to escape bonds, squeeze through openings, and break free. Lasts 1d hours.),
	basecost(700),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A116),
	mods(Equipment)

True Water (Utility),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Purifies up to 100 gallons of water in a manmade container.),
	basecost(750),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A117),
	mods(Equipment)
Universal Antidote (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Instantly cures all poisons affecting the drinker.),
	basecost(750),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A117),
	mods(Equipment)
Weakness Potion (Grenade),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(Fumes affect a two-yard radius. Living beings who breathe them have -3 ST/dose (up to -12 ST) for 1d minutes.),
	basecost(800),
	baseweight(1),
	units(lbs),
	page(DFRPG:A117),
	mods(Equipment)
Wisdom Potion (Drinkable),
	cat(Magic Items, Magic Items - Potions, Potions),
	description(+1 IQ for 1 hour.),
	basecost(1500),
	baseweight(0.5),
	units(lbs),
	page(DFRPG:A117),
	mods(Equipment)

<Scrolls>
"Charged Clerical Scroll ([Spell], [Level], [Power], [Energy])",
	cat(Magic Items, Magic Items - Scrolls, Scrolls),
	basecost(2.5*([Power]+[Energy])*@if([Level] < 15 THEN 20 ELSE @if([Level] < 19 THEN (16+4*([Level]-14)) ELSE (20*([Level]-17)) ) )),
	displaycost(varies),
	baseweight(0.05),
	description(Scrolls are one-shot magical writings that cast spells when read aloud.),
	page(DFRPG:A117),
	x(#InputReplace("Please enter the spell written on the scroll:", "[Spell]", Spell, "Charged Clerical Scroll"),
	#InputReplace("Please enter the skill level at which the scroll was written:", "[Level]", "15", "Charged Clerical Scroll"),
	#InputReplace("Please enter the Cost to Cast for the spell on the scroll:", "[Power]", "Cost to Cast", "Charged Clerical Scroll"),
	#InputReplace("Please enter the amount of energy stored for maintaining the scroll:", "[Energy]", "Maintenance Energy", "Charged Clerical Scroll"))
"Charged Druidic Scroll ([Spell], [Level], [Power], [Energy])",
	cat(Magic Items, Magic Items - Scrolls, Scrolls),
	basecost(2.5*([Power]+[Energy])*@if([Level] < 15 THEN 20 ELSE @if([Level] < 19 THEN (16+4*([Level]-14)) ELSE (20*([Level]-17)) ) )),
	displaycost(varies),
	baseweight(0.05),
	description(Scrolls are one-shot magical writings that cast spells when read aloud.),
	page(DFRPG:A117),
	x(#InputReplace("Please enter the spell written on the scroll:", "[Spell]", Spell, "Charged Druidic Scroll"),
	#InputReplace("Please enter the skill level at which the scroll was written:", "[Level]", "15", "Charged Druidic Scroll"),
	#InputReplace("Please enter the Cost to Cast for the spell on the scroll:", "[Power]", "Cost to Cast", "Charged Druidic Scroll"),
	#InputReplace("Please enter the amount of energy stored for maintaining the scroll:", "[Energy]", "Maintenance Energy", "Charged Druidic Scroll"))
"Charged Wizardly Scroll ([Spell], [Level], [Power], [Energy])",
	cat(Magic Items, Magic Items - Scrolls, Scrolls),
	basecost(2.5*([Power]+[Energy])*@if([Level] < 15 THEN 20 ELSE @if([Level] < 19 THEN (16+4*([Level]-14)) ELSE (20*([Level]-17)) ) )),
	displaycost(varies),baseweight(0.05),
	description(Scrolls are one-shot magical writings that cast spells when read aloud.),
	page(DFRPG:A117),
	x(#InputReplace("Please enter the spell written on the scroll:", "[Spell]", Spell, "Charged Wizardly Scroll"),
	#InputReplace("Please enter the skill level at which the scroll was written:", "[Level]", "15", "Charged Wizardly Scroll"),
	#InputReplace("Please enter the Cost to Cast for the spell on the scroll:", "[Power]", "Cost to Cast", "Charged Wizardly Scroll"),
	#InputReplace("Please enter the amount of energy stored for maintaining the scroll:", "[Energy]", "Maintenance Energy", "Charged Wizardly Scroll"))
"Clerical Scroll ([Spell], [Level], [Power])",
	cat(Magic Items, Magic Items - Scrolls, Scrolls),
	basecost([Power]*@if([Level] < 15 THEN 20 ELSE @if([Level] < 19 THEN (16+4*([Level]-14)) ELSE (20*([Level]-17)) ) )),
	displaycost(varies),
	baseweight(0.05),
	description(Scrolls are one-shot magical writings that cast spells when read aloud.),
	page(DFRPG:A117),
	x(#InputReplace("Please enter the spell written on the scroll:", "[Spell]", Spell, "Clerical Scroll"),
	#InputReplace("Please enter the skill level at which the scroll was written:", "[Level]", "15", "Clerical Scroll"),
	#InputReplace("Please enter the Cost to Cast for the spell on the scroll:", "[Power]", "Cost to Cast", "Clerical Scroll"))
"Druidic Scroll ([Spell], [Level], [Power])",
	cat(Magic Items, Magic Items - Scrolls, Scrolls),
	basecost([Power]*@if([Level] < 15 THEN 20 ELSE @if([Level] < 19 THEN (16+4*([Level]-14)) ELSE (20*([Level]-17)) ) )),
	displaycost(varies),
	baseweight(0.05),
	description(Scrolls are one-shot magical writings that cast spells when read aloud.),
	page(DFRPG:A117),
	x(#InputReplace("Please enter the spell written on the scroll:", "[Spell]", Spell, "Druidic Scroll"),
	#InputReplace("Please enter the skill level at which the scroll was written:", "[Level]", "15", "Druidic Scroll"),
	#InputReplace("Please enter the Cost to Cast for the spell on the scroll:", "[Power]", "Cost to Cast", "Druidic Scroll"))
"Wizardly Scroll ([Spell], [Level], [Power])",
	cat(Magic Items, Magic Items - Scrolls, Scrolls),
	basecost([Power]*@if([Level] < 15 THEN 20 ELSE @if([Level] < 19 THEN (16+4*([Level]-14)) ELSE (20*([Level]-17)) ) )),
	displaycost(varies),
	baseweight(0.05),
	description(Scrolls are one-shot magical writings that cast spells when read aloud.),
	page(DFRPG:A117),
	x(#InputReplace("Please enter the spell written on the scroll:", "[Spell]", Spell, "Wizardly Scroll"),
	#InputReplace("Please enter the skill level at which the scroll was written:", "[Level]", "15", "Wizardly Scroll"),
	#InputReplace("Please enter the Cost to Cast for the spell on the scroll:", "[Power]", "Cost to Cast", "Wizardly Scroll"))



<Other Items>



<Magic Weapons and Armor / Enchantments>





// #INSERTIONPOINT#                                                                                                                           //
// #INSERTIONPOINT# Everything from Armin's "Dungeon Fantasy RPG - Other Equipment DRAFT.gdf" inserted above, up to previous #INSERTIONPOINT# //
// #INSERTIONPOINT#                                                                                                                           //

<Ammunition>
Blowpipe Dart, 
	baseweight(0.05), 
	basecost(0.1), 
	page(DFRPG:A117), 
	mods(Equipment, Crushing/Imp Class Quality), 
	uses(count*1), 
	symbol(Arrows)
Arrow, 
	baseweight(0.1), 
	basecost(2), 
	page(DFRPG:A117), 
	mods(Equipment, Crushing/Imp Class Quality, Arrow), 
	uses(count*1), 
	symbol(Arrows)
Crossbow Bolt, 
	baseweight(0.06), 
	basecost(2), 
	page(DFRPG:A117), 
	mods(Equipment, Crushing/Imp Class Quality, Arrow), 
	uses(count*1), 
	symbol(Arrows)
Prodd Lead Pellet, 
	baseweight(0.06), 
	basecost(0.1), 
	page(DFRPG:A117), 
	mods(Equipment, Crushing/Imp Class Quality), 
	uses(count*1), 
	symbol(Arrows)
Sling Lead Bullet, 
	baseweight(0.06), 
	basecost(0.1), 
	page(DFRPG:A117), 
	mods(Equipment, Crushing/Imp Class Quality), 
	uses(count*1), 
	symbol(Arrows)
Sling Shaped Stone, 
	baseweight(0.05), 
	basecost(0.05), 
	page(DFRPG:A117), 
	mods(Equipment, Crushing/Imp Class Quality), 
	uses(count*1), 
	symbol(Arrows)
Sling Unshaped Stone, 
	baseweight(0.05), 
	basecost(0), 
	page(DFRPG:A117), 
	uses(count*1), 
	symbol(Arrows)





// Below is Alphabetical by weapon							// // Below is Alphabetical by weapon							// 
// Below is Alphabetical by weapon							// // Below is Alphabetical by weapon							// 
// Below is Alphabetical by weapon							// // Below is Alphabetical by weapon							// 
// Below is Alphabetical by weapon							// // Below is Alphabetical by weapon							// 
// Below is Alphabetical by weapon							// // Below is Alphabetical by weapon							// 


<Weapons>
Atlatl, 
	basecost(20), 
	baseweight(1), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Spear Thrower),_ 
	newmode(with Dart, 
		damage(sw-1), 
		damtype(imp), 
		acc(1), 
		rangehalfdam(ST*3), 
		rangemax(ST*4), 
		rof(1), 
		shots(1(1)), 
		minst(5), 
		bulk(-3), 
		skillused(SK:Spear Thrower, ST:DX-5, "SK:Thrown Weapon (Spear)"-4), 
		notes([2,5])_ 
	),_
	newmode(with Javelin, 
		damage(sw+1), 
		damtype(imp), 
		acc(3), 
		rangehalfdam(ST*2), 
		rangemax(ST*3), 
		rof(1), 
		shots(1(1)), 
		minst(6), 
		bulk(-4), 
		skillused(SK:Spear Thrower, ST:DX-5, "SK:Thrown Weapon (Spear)"-4), 
		notes([2,5])_ 
	)

Axe, 
	basecost(50), 
	baseweight(4), 
	minst(11), 
	reach(1), 
	parry(0U), 
	damage(sw+2), 
	damtype(cut), 
	skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A98)

// Barehanded Punch, basecost(0), minst(0), reach(C), parry(0), damage(thr-1 ), damtype(cr), notes([4]), skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX), cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Unarmed), mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), page(DFRPG:A95)
Bastard Sword, 
	basecost(750), 
	baseweight(5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword, Weapons - Melee - Two-Handed Sword), 
	mods(Weapon, Weapon Quality, Melee Quality, Cutting Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99, DFRPG:A103),_
	newmode(Swing, 
		minst(11), 
		reach(1,2), 
		parry(0U), 
		damage(sw+1), 
		damtype(cut), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(Thrust, 
		minst(11), 
		reach(2), 
		parry(0U), 
		damage(thr+2), 
		damtype(imp), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(2-Handed Swing, 
		minst(10†), 
		reach(1,2), 
		parry(0), 
		damage(sw+2), 
		damtype(cut), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	),_
	newmode(2-Handed Thrust, 
		minst(10†), 
		reach(2), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	)

Baton, 
	basecost(20), 
	baseweight(1), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Shortsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(6), 
		reach(1), 
		parry(0), 
		damage(sw), 
		damtype(cr), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(thrust, 
		minst(6), 
		reach(1), 
		parry(0), 
		damage(thr), 
		damtype(cr), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	)


// Bite, basecost(0), minst(0), reach(C), parry(No), damage(thr-1 ), damtype(cr), notes([4]), skillused(SK:Brawling, ST:DX), cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Unarmed), mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), page(DFRPG:A95)
Blackjack, 
	basecost(20), 
	baseweight(1), 
	minst(7), 
	reach(C), 
	parry(0), 
	damage(thr + _
		@max(_
			@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0),_
			@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)),_
			@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) _ 
		)_
	), 
	damtype(cr), 
	notes([4]), 
	skillused(SK:Brawling, ST:DX), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Unarmed), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99)

Blowpipe,
	baseweight(1), 
	basecost(30), 
	damage(1d-3), 
	damtype(pi-),
	acc(1),
	rangehalfdam(), 
	rangemax(ST*4), 
	shots(1(2)), 
	rof(1), 
	minst(2), 
	bulk(-6),
	page(DFRPG:A103), 
	skillused(SK:Blowpipe, ST:DX-6),
	mods(Weapon, Weapon Quality), 
	notes([1,2]), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Blowpipe) 

Bo, 
	basecost(10), 
	baseweight(4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Staff, Weapons - Melee - Two-Handed Sword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A102, DFRPG:A103),_
	newmode(swing, 
		minst(7†), 
		reach(1, 2), 
		parry(+2), 
		damage(sw+2), 
		damtype(cr), 
		notes(), 
		skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)_ 
	),_
	newmode(thrust, 
		minst(7†), 
		reach(1, 2), 
		parry(+2), 
		damage(thr+2), 
		damtype(cr), 
		skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)_ 
	),_
	newmode(two-handed sword swing, 
		minst(9†), 
		reach(1, 2), 
		parry(0), 
		damage(sw+2), 
		damtype(cr), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	),_
	newmode(two-handed sword thrust,
		minst(9†), 
		reach(2), 
		parry(0), 
		damage(thr+1), 
		damtype(cr), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	)

Bolas, 
	basecost(20), 
	baseweight(2), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Flail, Weapons - Ranged, Weapons - Ranged - Bolas), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99, DFRPG:A103),_
	newmode(flail, 
		damage(sw+1), 
		damtype(cr), 
		reach(1), 
		parry(-2U), 
		minst(7), 
		notes([1,7]), 
		skillused(SK:Flail, ST:DX-6, "SK:Axe/Mace"-4, "SK:Two-Handed Flail"-3)_ 
	),_
	newmode(thrown, 
		damage(thr-1), 
		damtype(cr),
		acc(0),
		rangehalfdam(), 
		rangemax(ST*3), 
		shots(T), 
		rof(1), 
		minst(7), 
		bulk(-2),
		notes([3]), 
		skillused(SK:Bolas)_ 
	)
Boomerang,
	basecost(20), 
	baseweight(1), 
	mode(thrown), 
	damage(sw), 
	damtype(cr), 
	acc(2), 
	rangehalfdam(ST*6), 
	rangemax(ST*10), 
	rof(1), 
	shots(T(1)), 
	minst(6), 
	bulk(-2), 
	skillused("SK:Thrown Weapon (Stick)", ST:DX-4), 
	page(DFRPG:A105),
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Equipment, Melee Quality)

Brass Knuckles, 
	basecost(10), 
	baseweight(0.25), 
	minst(0), 
	reach(C), 
	parry(0), 
	damage(thr + _
		@max(_
			@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0),_
			@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)),_
			@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) _ 
		)_
	), 
	damtype(cr), 
	notes([4]), 
	skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Unarmed), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99)
Broadsword, 
	basecost(600), 
	baseweight(3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99),_
	newmode(swing, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(sw+1), 
		damtype(cut), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(thrust, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(thr+2), 
		damtype(imp), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	)


Bullwhip (1-yard), 
	basecost(20), 
	baseweight(0.5), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-5), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1), 
	parry(-2U), 
	minst(4), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Bullwhip (2-yard), 
	basecost(40), 
	baseweight(1), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-5), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-2*), 
	parry(-2U), 
	minst(5), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Bullwhip (3-yard), 
	basecost(60), 
	baseweight(1.5), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-5), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-3*), 
	parry(-2U), 
	minst(6), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Bullwhip (4-yard), 
	basecost(80), 
	baseweight(2), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-5), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-4*), 
	parry(-2U), 
	minst(7), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Bullwhip (5-yard), 
	basecost(100), 
	baseweight(2.5), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-5), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-5*), 
	parry(-2U), 
	minst(8), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Bullwhip (6-yard), 
	basecost(120), 
	baseweight(3), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-5), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-6*), 
	parry(-2U), 
	minst(9), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Bullwhip (7-yard), 
	basecost(140), 
	baseweight(3.5), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-5), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-7*), 
	parry(-2U), 
	minst(10), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 

Cavalry Saber, 
	basecost(500), 
	baseweight(3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99),_
	newmode(swing, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(sw+1), 
		damtype(cut), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(thrust, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	)
Cestus, 
	basecost(50), 
	baseweight(1), 
	minst(0), 
	reach(C), 
	parry(0), 
	damage(thr + _
		@max(_
			@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0),_
			@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)),_
			@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) _ 
		)_
	), 
	damtype(cr), 
	dr(4),location(Right Hand),drnotes(Gives the hand (only) DR 4. A cestus is a glove, mutually exclusive with other gloves.), 
	notes([4,5]), 
	skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Unarmed), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99)
Club, 
	basecost(10), 
	baseweight(3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99),_
	newmode(swing, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(sw+1), 
		damtype(cr), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(thrust, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(cr), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	)

Combat Shovel, 
	basecost(100), 
	baseweight(5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A102),_
	newmode(cutting swing, 
		minst(11†), 
		reach(1), 
		parry(0U), 
		damage(sw+2), 
		damtype(cut), 
		notes([14]), 
		skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4)_ 
	),_
	newmode(crushing swing, 
		minst(11†), 
		reach(1), 
		parry(0U), 
		damage(sw+2), 
		damtype(cr), 
		skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4)_ 
	)

Composite Bow (ST %choice%),
	baseweight(4), 
	basecost(900), 
	damage(@thr(me::weaponst)+3), 
	damtype(imp),
	acc(3),
	rangehalfdam(me::weaponst*20), 
	rangemax(me::weaponst*25), 
	shots(1(2)), 
	rof(1), 
	minst(10†), 
	bulk(-7),
	notes(),
	page(DFRPG:A104), 
	skillused(SK:Bow, ST:DX-5),
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Bow),_ 
	weaponst(%choice%),
	x(_ 
		#ChoiceList(_ 
			name(choice), 
			title(Bow ST), 
			text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), 
			picksallowed(1), 
			method(bynumber), 
			list( #list(OneToOneHundred Sorted) )_ 
		)_ 
	)
Composite Crossbow (ST %choice%), 
	basecost(950), 
	baseweight(7), 
	damage(@thr(me::weaponst)+5), 
	damtype(imp), 
	acc(4), 
	rangehalfdam(me::weaponst*25), 
	rangemax(me::weaponst*30), 
	rof(1), 
	shots(1(4)), 
	minst(8†), 
	bulk(-6), 
	notes(),
	skillused(SK:Crossbow, ST:DX-4), 
	page(DFRPG:A104), 
	weaponst(%choice%),_
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Crossbow),_ 
	x(_ 
		#ChoiceList(_ 
			name(choice), 
			title(Bow ST), 
			text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), 
			picksallowed(1), 
			method(bynumber), 
			list( #list(OneToOneHundred Sorted) )_ 
		)_ 
	)
Crossbow (ST %choice%), 
	basecost(150), 
	baseweight(6), 
	damage(@thr(me::weaponst)+4), 
	damtype(imp), 
	acc(4), 
	rangehalfdam(me::weaponst*20), 
	rangemax(me::weaponst*25), 
	rof(1), 
	shots(1(4)), 
	minst(7†), 
	bulk(-6), 
	notes(),
	skillused(SK:Crossbow, ST:DX-4), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Crossbow),_ 
	weaponst(%choice%),_
	x(_ 
		#ChoiceList(_ 
			name(choice), 
			title(Bow ST), 
			text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), 
			picksallowed(1), 
			method(bynumber), 
			list( #list(OneToOneHundred Sorted) )_ 
		)_ 
	)

Cutlass, 
	basecost(500), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Shortsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	dr(4),location(Right Hand),drnotes(This is a metal hilt; DR is cumulative with that of gloves, but the hilt is too cramped to accommodate metal gauntlets.),
	page(DFRPG:A101),_
	newmode(swing, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(sw), 
		damtype(cut), 
		notes([5]), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(thrust, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(hilt punch, 
		minst(8), 
		reach(C), 
		parry(0), 
		damage(thr + _
			@max(_
				@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0),_
				@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)),_
				@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) _ 
			)_
		),_ 
		damtype(cr), 
		notes([4, 5]), 
		skillused(SK:Boxing, SK:Brawling, ST:DX)_ 
	)

Dagger, 
	basecost(20), 
	baseweight(0.25), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Knife, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Impaling Class Quality), 
	page(DFRPG:A100, DFRPG:A105),_
	newmode(thrust, 
		minst(5), 
		reach(C), 
		parry(-1), 
		damage(thr-1), 
		damtype(imp), 
		notes([1]), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_
	),_
	newmode(Main-Gauche, 
		minst(5), 
		reach(C), 
		parry(0F), 
		damage(thr-1), 
		damtype(imp), 
		notes([1]), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_ 
	newmode(Thrown, 
		damage(thr-1), 
		damtype(imp), 
		acc(0), 
		rangehalfdam(ST*0.5), 
		rangemax(ST*1), 
		rof(1), 
		shots(T(1)), 
		minst(5), 
		bulk(-1), 
		skillused("SK:Thrown Weapon (Knife)", ST:DX-4)_  
	) 

Dress Smallsword, 
	basecost(300), 
	baseweight(1), 
	minst(5), 
	reach(C, 1), 
	parry(0F), 
	damage(thr), 
	damtype(imp), 
	notes(), 
	skillused(SK:Smallsword, ST:DX-5, "SK:Main-Gauche"-3, SK:Rapier-3, SK:Saber-3, SK:Shortsword-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Smallsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A102)


Dueling Glaive, 
	basecost(80), 
	baseweight(6), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Polearm), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(9†), 
		reach(1, 2*), 
		parry(0U), 
		damage(sw+2), 
		damtype(cut), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace-4")_ 
	),_
	newmode(thrust, 
		minst(9†), 
		reach(1, 2*), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace-4")_ 
	)
Dueling Halberd, 
	basecost(120), 
	baseweight(10), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Polearm), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(12†), 
		reach(1, 2*), 
		parry(0U), 
		damage(sw+4), 
		damtype(cut), 
		notes(), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(swing impale, 
		minst(12†), 
		reach(1, 2*), 
		parry(0U), 
		damage(sw+3), 
		damtype(imp), 
		notes([2]), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(thrust impale, 
		minst(11†), 
		reach(1, 2*), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		notes(), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	)

Edged Rapier, 
	basecost(1000), 
	baseweight(3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword, Weapons - Melee - Rapier), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99,DFRPG:A101),_
	newmode(swing, 
		minst(10), 
		reach(1,2), 
		parry(0), 
		damage(sw), 
		damtype(cut), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(thrust, 
		minst(10), 
		reach(1,2), 
		parry(0), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(fencing swing, 
		minst(10), 
		reach(1,2), 
		parry(0F), 
		damage(sw), 
		damtype(cut), 
		skillused(SK:Rapier, ST:DX-5, SK:Broadsword-4, "SK:Main-Gauche"-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(fencing thrust, 
		minst(10), 
		reach(1,2), 
		parry(0F), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Rapier, ST:DX-5, SK:Broadsword-4, "SK:Main-Gauche"-3, SK:Saber-3, SK:Smallsword-3)_ 
	)

Estoc, 
	basecost(500), 
	baseweight(3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99),_
	newmode(thrust, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(thr+2 ), 
		damtype(imp), 
		notes([3]), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(swing, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(sw+1 ), 
		damtype(cr), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)_ 
	)

Falchion, 
	basecost(400), 
	baseweight(3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Shortsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(sw+1), 
		damtype(cut), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(thrust,
		minst(10), 
		reach(1), 
		parry(0), 
		damage(thr-2), 
		damtype(imp), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	)

Flail, 
	basecost(100), 
	baseweight(8), 
	minst(13†), 
	reach(1, 2*), 
	parry(0U), 
	damage(sw+4), 
	damtype(cr), 
	notes([7]), 
	skillused("SK:Two-Handed Flail", ST:DX-6, SK:Flail-3, SK:Kusari-4, "SK:Two-Handed Axe/Mace"-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Flail), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A102)

Garrote (Rope), 
	basecost(2), 
	baseweight(0), 
	page(DFRPG:A99),_
	mods(Equipment, Melee Quality), 
	damage(), 
	damtype(spcl.), 
	reach(C), 
	parry(No), 
	minst(), 
	skillused(SK:Garrote, ST:DX-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Garrote), 
	notes([8]) 
Garrote (Wire), 
	basecost(10), 
	baseweight(0), 
	page(DFRPG:A99),_
	mods(Equipment, Melee Quality), 
	damage(), 
	damtype(spcl.), 
	reach(C), 
	parry(No), 
	minst(), 
	skillused(SK:Garrote, ST:DX-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Garrote), 
	notes([8]) 

Glaive, 
	basecost(100), 
	baseweight(8), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Polearm), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(11‡), 
		reach(2, 3*), 
		parry(0U), 
		damage(sw+3), 
		damtype(cut), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(thrust, 
		minst(11†), 
		reach(1-3*), 
		parry(0U), 
		damage(thr+3), 
		damtype(imp), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	)

Great Axe, 
	basecost(100), 
	baseweight(8), 
	minst(12‡), 
	reach(1, 2*), 
	parry(0U), 
	damage(sw+4), 
	damtype(cut), 
	skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Axe/Mace), mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A102)

Greatsword, 
	basecost(900), 
	baseweight(7), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Sword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A103),_
	newmode(swing, 
		minst(12†), 
		reach(1, 2), 
		parry(0), 
		damage(sw+3), 
		damtype(cut), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	),_
	newmode(thrust, 
		minst(12†), 
		reach(2), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	)

Halberd, 
	basecost(150), 
	baseweight(12), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Polearm), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(13‡), 
		reach(2, 3*), 
		parry(0U), 
		damage(sw+5), 
		damtype(cut), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(swing impale, 
		minst(13‡), 
		reach(2, 3*), 
		parry(0U), 
		damage(sw+4), 
		damtype(imp), 
		notes([2]), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(thrust impale, 
		minst(12†), 
		reach(1-3*), 
		parry(0U), 
		damage(thr+3), 
		damtype(imp), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	)

Harpoon, 
	basecost(60), 
	baseweight(6), 
	mode(thrown), 
	damage(thr+5), 
	damtype(imp), 
	acc(2), 
	rangehalfdam(ST*1), 
	rangemax(ST*1.5), 
	rof(1), 
	shots(T(1)), 
	minst(11), 
	bulk(-6), 
	skillused("SK:Thrown Weapon (Harpoon)", ST:DX-4, "SK:Thrown Weapon (Spear)"-2), 
	notes([7]),
	page(DFRPG:A105), 
	symbol(Arrows),
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Equipment, Crushing/Imp Class Quality)

Hatchet, 
	basecost(40), 
	baseweight(2), 
	newmode(Melee, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(sw ), 
		damtype(cut), 
		skillused(SK:Axe/Mace, ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_ 
	),_ 
	newmode(Thrown, 
		damage(sw), 
		damtype(cut), 
		acc(1), 
		rangehalfdam(ST*1.5), 
		rangemax(ST*2.5), 
		rof(1), 
		shots(T(1)), 
		minst(8), 
		bulk(-2), 
		skillused("SK:Thrown Weapon (Axe/Mace)", ST:DX-4)_
	),_ 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Axe/Mace, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Cutting Class Quality, Thrown Axe/Mace), 
	page(DFRPG:A98, DFRPG:A105)

Hatchet (Throwing Handle), 
	basecost(30), 
	baseweight(2), 
	newmode(Melee, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(sw ), 
		damtype(cut), 
		itemnotes(_ 
			{Dedicated throwing axes and hatchets that lack proper handles cost $10 less, but give -2 to skill as melee weapons (and thus -1 to Parry).} _ 
		), 
		skillused("SK:Axe/Mace"-2, ST:DX-7, SK:Flail-6, "SK:Two-Handed Axe/Mace"-5)_
	),_ 
	newmode(Thrown, 
		damage(sw), 
		damtype(cut), 
		acc(1), 
		rangehalfdam(ST*1.5), 
		rangemax(ST*2.5), 
		rof(1), 
		shots(T(1)), 
		minst(8), 
		bulk(-2), 
		skillused("SK:Thrown Weapon (Axe/Mace)", ST:DX-4)_ 
	),_ 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Ranged, Weapons - Melee - Axe/Mace, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Cutting Class Quality, Thrown Axe/Mace), 
	page(DFRPG:A105)

Heavy Sling, 
	basecost(20), 
	baseweight(1), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Sling),_ 
	newmode(Shaped Stone, 
		damage(sw+2), 
		damtype(cr), 
		acc(1), 
		rangehalfdam(ST*3), 
		rangemax(ST*6), 
		rof(1), 
		shots(1(2)), 
		minst(8†), 
		bulk(-5), 
		skillused(SK:Sling, ST:DX-6)_ 
	),_
	newmode(Unshaped Stone, 
		damage(sw+2), 
		damtype(cr), 
		acc(1), 
		rangehalfdam(ST*3), 
		rangemax(ST*6), 
		rof(1), 
		shots(1(2)), 
		minst(8†), 
		bulk(-5), 
		skillused(SK:Sling-1, ST:DX-7), 
		itemnotes( {Unshaped rocks and stones are less accurate: -1 to hit.} )_ 
	)
Heavy Spear, 
	basecost(90), 
	baseweight(6), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Spear), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A102),_
	newmode(swing, 
		minst(11†), 
		reach(3), 
		parry(0U), 
		damage(thr+3), 
		damtype(cut), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	),_
	newmode(thrust, 
		minst(11†), 
		reach(2, 3*), 
		parry(0U), 
		damage(thr+4), 
		damtype(imp), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	)

Humongous Club, 
	basecost(100), 
	baseweight(15), 
	minst(16‡), 
	reach(1, 2*), 
	parry(0U), 
	damage(sw+6), 
	damtype(cr), 
	skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A102)

Javelin, 
	basecost(30), 
	baseweight(2), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Ranged, Weapons - Melee - Spear, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Impaling Class Quality), 
	page(DFRPG:A102, DFRPG:A105)
	newmode(melee, 
		minst(6), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(imp), 
		notes([1]), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	), 
	newmode(thrown, 
		damage(thr+1), 
		damtype(imp), 
		acc(3), 
		rangehalfdam(ST*1.5), 
		rangemax(ST*2.5), 
		rof(1), 
		shots(T(1)), 
		minst(6), 
		bulk(-4), 
		skillused("SK:Thrown Weapon (Spear)", ST:DX-4, SK:Spear Thrower-4, "SK:Thrown Weapon (Harpoon)"-2)_  
	) 

Jo, 
	basecost(10), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword, Weapons - Melee - Staff, Weapons - Melee - Two-Handed Sword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99, DFRPG:A102),_
	newmode(broadsword swing, 
		minst(9), 
		reach(1), 
		parry(0), 
		damage(sw ), 
		damtype(cr), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_
	),_
	newmode(broadsword thrust, 
		minst(9), 
		reach(1), 
		parry(0), 
		damage(thr), 
		damtype(cr), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_ 
	newmode(staff swing, 
		minst(6†), 
		reach(1), 
		parry(+2), 
		damage(sw+1), 
		damtype(cr), 
		skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)_ 
	),_
	newmode(staff thrust, 
		minst(6†), 
		reach(1), 
		parry(+2), 
		damage(thr+1), 
		damtype(cr), 
		skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)_ 
	),_ 
	newmode(two-handed sword swing, 
		minst(8†), 
		reach(1), 
		parry(0), 
		damage(sw+1), 
		damtype(cr), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	),_
	newmode(two-handed-handed sword thrust, 
		minst(8†), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(cr), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	)

Jutte, 
	basecost(40), 
	baseweight(1), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Jitte/Sai), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99,DFRPG:A100),_
	newmode(swing, 
		minst(6), 
		reach(1), 
		parry(0), 
		damage(sw), 
		damtype(cr), 
		notes([9,10]), 
		skillused("SK:Jitte/Sai", ST:DX-5, "SK:Main-Gauche"-4, SK:Shortsword-3)_ 
	),_
	newmode(thrust, 
		minst(6), 
		reach(1), 
		parry(0), 
		damage(thr), 
		damtype(cr), 
		notes(), 
		skillused("SK:Jitte/Sai", ST:DX-5, "SK:Main-Gauche"-4, SK:Shortsword-3)_ 
	),_
	newmode(Main-Gauche swing, 
		minst(6), 
		reach(1), 
		parry(0F), 
		damage(sw), 
		damtype(cr), 
		notes(), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(Main-Gauche thrust, 
		minst(6), 
		reach(1), 
		parry(0F), 
		damage(thr), 
		damtype(cr), 
		notes(), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	)


Kama, 
	basecost(40), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality), 
	page(DFRPG:A98),_
	newmode(slice, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(sw), 
		damtype(cut), 
		skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_ 
	),_
	newmode(stab, 
		minst(8), 
		reach(1), 
		parry(0U), 
		damage(sw), 
		damtype(imp), 
		notes([2]), 
		skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_ 
	)

Katana, 
	basecost(650), 
	baseweight(5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword, Weapons - Melee - Two-Handed Sword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99),_
	newmode(swing, 
		minst(11), 
		reach(1,2), 
		parry(0), 
		damage(sw+1), 
		damtype(cut), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(thrust, 
		minst(11), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_ 
	newmode(two-handed sword swing, 
		minst(10†), 
		reach(1, 2), 
		parry(0), 
		damage(sw+2), 
		damtype(cut), 
		notes(), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	),_
	newmode(two-handed sword thrust, 
		minst(10†), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(imp), 
		notes(), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	)

Katar, 
	basecost(50), 
	baseweight(1), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Knife), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality), 
	page(DFRPG:A100),
	dr(4),location(Right Hand),drnotes(Gives the hand (only) DR 4. This is a metal hilt; DR is cumulative with that of gloves, but the hilt is too cramped to accommodate metal gauntlets.), 
	newmode(swing, 
		minst(6), 
		reach(C,1), 
		parry(-1), 
		damage(sw-3), 
		damtype(cut), 
		notes([5,11]), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),_
	newmode(thrust, 
		minst(6), 
		reach(C), 
		parry(-1), 
		damage(thr+1), 
		damtype(imp), 
		notes([3]), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	)


// Kick,basecost(0),minst(0),reach(C, 1),parry(No),damage(thr + @max(@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0),@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)),@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) )	),damtype(cr), notes([4, 6]), skillused(SK:Brawling-2, SK:Karate-2, ST:DX-2), cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Unarmed), mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), page(DFRPG:A95)
Kick w. Boots, 
	basecost(0), 
	minst(0), 
	reach(C, 1), 
	parry(No), 
	damage(thr+1 + _
		@max(_
			@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0),_
			@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)),_
			@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) _ 
		)_
	),_ 
	damtype(cr), 
	notes([4,6]), 
	skillused(SK:Brawling-2, SK:Karate-2, ST:DX-2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Unarmed), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99)
Knobbed Club, 
	basecost(20), 
	baseweight(2), 
	minst(8), 
	reach(1), 
	parry(0), 
	damage(sw+1), 
	damtype(cr), 
	skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A98)


Kukri, 
	basecost(50), 
	baseweight(1.5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Knife), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality), 
	page(DFRPG:A100),_
	newmode(swing, 
		minst(7), 
		reach(C,1), 
		parry(0), 
		damage(sw-1), 
		damtype(cut), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),_
	newmode(thrust, 
		minst(7), 
		reach(C), 
		parry(0), 
		damage(thr-1), 
		damtype(imp), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	)

Kusari, 
	basecost(70), 
	baseweight(5), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Kusari), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A100),_
	newmode(swing, 
		minst(11), 
		reach(1-4*), 
		parry(-2U), 
		damage(sw+2), 
		damtype(cr), 
		notes([7,9]), 
		skillused(SK:Kusari, ST:DX-6, "SK:Two-Handed Flail"-4, SK:Whip-3)_ 
	),_
	newmode(thrust, 
		minst(11), 
		reach(1-4*), 
		parry(-2U), 
		damage(thr+2), 
		damtype(cr), 
		notes([7,9]), 
		skillused(SK:Kusari, ST:DX-6, "SK:Two-Handed Flail"-4, SK:Whip-3)_ 
	)

Large Falchion, 
	basecost(625), 
	baseweight(4.5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99),_
	newmode(swing, 
		minst(11), 
		reach(1), 
		parry(0U), 
		damage(sw+2), 
		damtype(cut), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(thrust, 
		minst(11), 
		reach(1), 
		parry(0U), 
		damage(thr-1), 
		damtype(imp), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	)
Large Katar, 
	basecost(400), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Shortsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	dr(4),location(Right Hand),drnotes(Gives the hand (only) DR 4. This is a metal hilt; DR is cumulative with that of gloves, but the hilt is too cramped to accommodate metal gauntlets.), 
	newmode(swing, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(sw-1), 
		damtype(cut), 
		notes([5,11]), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Jitte/sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(thrust, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(thr+2), 
		damtype(imp), 
		notes([3]), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, SK:Jitte/sai-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	)
Large Knife,
	basecost(40),
	baseweight(1), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Knife, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality,  Cutting Class Quality, Impaling Class Quality, Knife Class), 
	page(DFRPG:A100, DFRPG:A105),_
	newmode(swing, 
		minst(6), 
		reach(C,1), 
		parry(-1), 
		damage(sw-2), 
		damtype(cut), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),_
	newmode(thrust, 
		minst(6), 
		reach(C), 
		parry(-1), 
		damage(thr), 
		damtype(imp), 
		notes([1]), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),_
	newmode(Main-Gauche swing, 
		minst(6), 
		reach(C, 1), 
		parry(0F), 
		damage(sw-2), 
		damtype(cut), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(Main-Gauche thrust, 
		minst(6), 
		reach(C), 
		parry(0F), 
		damage(thr), 
		damtype(imp), 
		notes([1]), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_ 
	newmode(Thrown, 
		damage(thr), 
		damtype(imp), 
		acc(0), 
		rangehalfdam(ST*0.8), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(6), 
		bulk(-2), 
		skillused("SK:Thrown Weapon (Knife)", ST:DX-4)_  
	) 
Large Net, 
	basecost(40), 
	baseweight(20), 
	damage(), 
	damtype(spcl.), 
	acc(1), 
	rangehalfdam(), 
	rangemax(@int((ST:ST/2) + (me::charskillscore/5))), 
	rof(1), 
	shots(T(1)), 
	minst(11), 
	bulk(-6), 
	skillused(SK:Net, SK:Cloak-5), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Net),_ 
	notes([2,3,4]) 
Large Throwing Knife,
	basecost(40),
	baseweight(1), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Knife, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality,  Cutting Class Quality, Impaling Class Quality, Knife Class), 
	page(DFRPG:A105),_
	newmode(swing, 
		minst(6), 
		reach(C, 1), 
		parry(-1), 
		damage(sw-2), 
		damtype(cut), 
		itemnotes( {In melee combat, large throwing knives work as large knives, but give -2 to skill (and thus -1 to Parry on top of the usual -1 to Parry for knives).} ), 
		skillused(SK:Knife-2, ST:DX-6, "SK:Main-Gauche"-5, SK:Shortsword-5)_ 
	),_
	newmode(thrust, 
		minst(6), 
		reach(C), 
		parry(-1), 
		damage(thr), 
		damtype(imp), 
		itemnotes( {In melee combat, large throwing knives work as large knives, but give -2 to skill (and thus -1 to Parry on top of the usual -1 to Parry for knives).} ), 
		skillused(SK:Knife-2, ST:DX-6, "SK:Main-Gauche"-5, SK:Shortsword-5)_ 
	),_
	newmode(thrown, 
		damage(thr), 
		damtype(imp), 
		acc(1), 
		rangehalfdam(ST*1), 
		rangemax(ST*2), 
		rof(1), 
		shots(T(1)), 
		minst(6), 
		bulk(-1), 
		notes([8]),
		skillused("SK:Thrown Weapon (Knife)", ST:DX-4)_  
	) 

Lariat, 
	basecost(40), 
	baseweight(3), 
	damage(), 
	damtype(spcl.), 
	acc(0), 
	rangehalfdam(), 
	rangemax(10), 
	rof(1), 
	shots(T(2)), 
	minst(7†), 
	bulk(-2), 
	skillused(SK:Lasso), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Lasso),_ 
	notes([3]) 

Light Edged Rapier, 
	basecost(700), 
	baseweight(2.25), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Rapier), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(8), 
		reach(1), 
		parry(0F), 
		damage(sw-1), 
		damtype(cut), 
		skillused(SK:Rapier, ST:DX-5, SK:Broadsword-4, SK:Main-Gauche-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(thrust, 
		minst(8), 
		reach(1), 
		parry(0F), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Rapier, ST:DX-5, SK:Broadsword-4, SK:Main-Gauche-3, SK:Saber-3, SK:Smallsword-3)_ 
	)

Light Rapier, 
	basecost(400),
	baseweight(2), 
	minst(8), 
	reach(1), 
	parry(0F), 
	damage(thr+1), 
	damtype(imp), 
	skillused(SK:Rapier, ST:DX-5, SK:Broadsword-4, "SK:Main-Gauche"-3, SK:Saber-3, SK:Smallsword-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Rapier), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A101)

	
Long Axe, 
	basecost(75), 
	baseweight(6), 
	minst(11‡), 
	reach(1, 2*), 
	parry(0U), 
	damage(sw+3), 
	damtype(cut), 
	notes(), 
	skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Axe/Mace), mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A102)

Longbow (ST %choice%), 
	basecost(200), 
	baseweight(3), 
	damage(@thr(me::weaponst)+2), 
	damtype(imp), 
	acc(3), 
	rangehalfdam(me::weaponst*15), 
	rangemax(me::weaponst*20), 
	rof(1), 
	shots(1(2)), 
	minst(11†), 
	bulk(-8), 
	notes(),
	skillused(SK:Bow, ST:DX-5), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Bow),_ 
	page(DFRPG:A104), 
	weaponst(%choice%),_
	x(_ 
		#ChoiceList(_ 
			name(choice), 
			title(Bow ST), 
			text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), 
			picksallowed(1), 
			method(bynumber), 
			list( #list(OneToOneHundred Sorted) )_ 
		)_ 
	)
	
Long Knife, 
	basecost(120), 
	baseweight(1.5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Knife, Weapons - Melee - Shortsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality, Knife Class), 
	page(DFRPG:A100,DFRPG:A101),_
	newmode(swing, 
		minst(7), 
		reach(C,1), 
		parry(0), 
		damage(sw-1), 
		damtype(cut), 
		skillused(SK:Knife, SK:Shortsword, ST:DX-4, "SK:Main-Gauche"-3, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(thrust, 
		minst(7), 
		reach(C,1), 
		parry(0), 
		damage(thr), 
		damtype(imp), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),_
	newmode(Main-Gauche swing, 
		minst(7), 
		reach(C,1), 
		parry(0F), 
		damage(sw-1), 
		damtype(cut), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(Main-Gauche thrust, 
		minst(7), 
		reach(C, 1), 
		parry(0F), 
		damage(thr), 
		damtype(imp), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	)

Long Spear, 
	basecost(60), 
	baseweight(5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Spear), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A95),_
	newmode(swing, 
		minst(11), 
		reach(2, 3*), 
		parry(0U), 
		damage(thr+2), 
		damtype(imp), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	),_
	newmode(two hands, 
		minst(10†), 
		reach(2, 3*), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	)

Long Staff, 
	basecost(15), 
	baseweight(5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Staff), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A102),_
	newmode(swing, 
		minst(10†), 
		reach(2, 3), 
		parry(+2), 
		damage(sw+2), 
		damtype(cr), 
		skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)_ 
	),_
	newmode(thrust, 
		minst(10†), 
		reach(2, 3), 
		parry(+2), 
		damage(thr+2), 
		damtype(cr), 
		skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)_ 
	)

Longsword, 
	basecost(700), 
	baseweight(4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword, Weapons - Melee - Two-Handed Sword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99),_
	newmode(swing, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(sw+1), 
		damtype(cut), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(thrust, 
		minst(10), 
		reach(1,2), 
		parry(0), 
		damage(thr+2), 
		damtype(imp), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_ 
	newmode(two-handed sword swing, 
		minst(9†), 
		reach(1), 
		parry(0), 
		damage(sw+1), 
		damtype(cut), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	),_
	newmode(two-handed sword thrust, 
		minst(9†), 
		reach(1, 2), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	)

Mace, 
	basecost(50), 
	baseweight(5), 
	newmode(Melee, 
		minst(12), 
		reach(1), 
		parry(0U), 
		damage(sw+3 ), 
		damtype(cr), 
		skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_ 
	),_ 
	newmode(Thrown, 
		damage(sw+3 ), 
		damtype(cr), 
		acc(1), 
		rangehalfdam(ST*0.5), 
		rangemax(ST*1), 
		rof(1), 
		shots(T(1)), 
		minst(12), 
		bulk(-4), 
		skillused("SK:Thrown Weapon (Axe/Mace)", ST:DX-4)_  
	),_ 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Ranged, Weapons - Melee - Axe/Mace, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Crushing Class Quality, Thrown Axe/Mace), 
	page(DFRPG:A98, DFRPG:A105)

Main-Gauche, 
	basecost(50), 
	baseweight(1.25), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Knife), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A100),_
	dr(4),location(Left Hand),drnotes(Gives the hand (only) DR 4. This is a metal hilt; DR is cumulative with that of gloves, but the hilt is too cramped to accommodate metal gauntlets.), 
	newmode(swing, 
		minst(6), 
		reach(C,1), 
		parry(0F), 
		damage(sw-3), 
		damtype(cut), 
		notes([5]), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(thrust, 
		minst(6), 
		reach(C,1), 
		parry(0F), 
		damage(thr), 
		damtype(imp), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(Knife swing, 
		minst(6), 
		reach(C, 1), 
		parry(0),
		damage(sw-3), 
		damtype(cut), 
		notes([5]), 
		skillused(SK:Knife, ST:DX-4, SK:Main-Gauche-3, SK:Shortsword-3)_ 
	),_
	newmode(Knife thrust, 
		minst(6), 
		reach(C), 
		parry(0), 
		damage(thr), 
		damtype(imp), 
		notes(), 
		skillused(SK:Knife, ST:DX-4, SK:Main-Gauche-3, SK:Shortsword-3)_ 
	)

Maul, 
	basecost(80), 
	baseweight(12), 
	minst(13‡), 
	reach(1, 2*), 
	parry(0U), 
	damage(sw+5), 
	damtype(cr), 
	skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A102)
	
Melee Net, 
	basecost(20), 
	baseweight(5), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Net),_ 
	newmode(Thrown, 
		damage(), 
		damtype(spcl.), 
		acc(1), 
		rangehalfdam(), 
		rangemax(ST:ST + @int(me::charskillscore/5)), 
		rof(1), 
		shots(T(1)), 
		minst(8), 
		bulk(-4), 
		skillused(SK:Net, SK:Cloak-5), 
		notes([3,4])_
	),_
	newmode(Melee, 
		minst(8), 
		reach(1,2), 
		parry(0), 
		damage(), 
		damtype(spcl.), 
		skillused(SK:Net, SK:Cloak-5), 
		notes([3,4])_ 
	)

Monk's Spade, 
	basecost(100), 
	baseweight(6), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Polearm), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(9†), 
		reach(1, 2*), 
		parry(0U), 
		damage(sw+1), 
		damtype(cut), 
		notes(), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(hammer, 
		minst(9†), 
		reach(1, 2*), 
		parry(0U), 
		damage(sw+2), 
		damtype(cr), 
		notes(), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(thrust, 
		minst(9†), 
		reach(1, 2*), 
		parry(0), 
		damage(thr+2), 
		damtype(cut), 
		notes(), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	)

Morningstar, 
	basecost(80), 
	baseweight(6), 
	minst(12), 
	reach(1), 
	parry(0U), 
	damage(sw+3), 
	damtype(cr), 
	notes([7]), 
	skillused(SK:Flail, ST:DX-6, "SK:Axe/Mace"-4, "SK:Two-Handed Flail"-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Flail), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99)

Naginata, 
	basecost(100), 
	baseweight(6), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Polearm, Weapons - Melee - Two-Handed Sword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101, DFRPG:A103),_
	newmode(polearm swing, 
		minst(9†), 
		reach(1, 2*), 
		parry(0U), 
		damage(sw+2), 
		damtype(cut), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(two-handed sword swing, 
		minst(9†), 
		reach(2), 
		parry(0U), 
		damage(sw+3), 
		damtype(cut), 
		skillused(SK:Two-Handed Sword, ST:DX-5, SK:Broadsword-4)_ 
	),_
	newmode(thrust, 
		minst(9†), 
		reach(2), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		skillused(SK:Polearm, "SK:Two-Handed Sword", ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4, SK:Broadsword-4)_ 
	)


Nunchaku, 
	basecost(20), 
	baseweight(2), 
	minst(7), 
	reach(1), 
	parry(0U), 
	damage(sw+1), 
	damtype(cr), 
	notes([7]), 
	skillused(SK:Flail, ST:DX-6, "SK:Axe/Mace"-4, "SK:Two-Handed Flail"-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Flail), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99)

Pick, 
	basecost(70), 
	baseweight(3), 
	minst(10), 
	reach(1), 
	parry(0U), 
	damage(sw+1), 
	damtype(imp), 
	notes([2,3]), 
	skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A98)


Pike, 
	basecost(80), 
	baseweight(13), 
	minst(12†), 
	reach(4, 5*), 
	parry(0U), 
	damage(thr+3), 
	damtype(imp), 
	notes(), 
	skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Spear), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A102)

Pistol Crossbow (ST %choice%), 
	basecost(150), 
	baseweight(4), 
	damage(@thr(me::weaponst)+2), 
	damtype(imp), 
	acc(1), 
	rangehalfdam(me::weaponst*15), 
	rangemax(me::weaponst*20), 
	rof(1), 
	shots(1(4)), 
	minst(7), 
	bulk(-4), 
	notes([2]), 
	skillused(SK:Crossbow, ST:DX-4), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Crossbow),_ 
	weaponst(%choice%),_
	x(_ 
		#ChoiceList(_ 
			name(choice), 
			title(Bow ST), 
			text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), 
			picksallowed(1), 
			method(bynumber), 
			list( #list(OneToOneHundred Sorted) )_ 
		)_ 
	)

Pollaxe, 
	basecost(120), 
	baseweight(10), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Polearm), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A101),_
	newmode(hammer, 
		minst(12†), 
		reach(1, 2*), 
		parry(0U), 
		damage(sw+4), 
		damtype(cr), 
		notes(), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(pick, 
		minst(12†), 
		reach(1, 2*), 
		parry(0U), 
		damage(sw+3), 
		damtype(imp), 
		notes([2]), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	),_
	newmode(thrust, 
		minst(11†), 
		reach(1, 2*), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		skillused(SK:Polearm, ST:DX-5, SK:Spear-4, SK:Staff-4, "SK:Two-Handed Axe/Mace"-4)_ 
	)

Prodd (ST %choice%), 
	basecost(150), 
	baseweight(6), 
	damage(@thr(me::weaponst)+4), 
	damtype(pi), 
	acc(2), 
	rangehalfdam(me::weaponst*20), 
	rangemax(me::weaponst*25), 
	rof(1), 
	shots(1(4)), 
	minst(7†), 
	bulk(-6), 
	skillused(SK:Crossbow, ST:DX-4), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Crossbow),_ 
	weaponst(%choice%),_
	x(_ 
		#ChoiceList(_ 
			name(choice), 
			title(Bow ST), 
			text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), 
			picksallowed(1), 
			method(bynumber), 
			list( #list(OneToOneHundred Sorted) )_ 
		)_ 
	)

Punch w. Gauntlets, 
	basecost(0), 
	minst(0), 
	reach(C), 
	parry(0), 
	damage(thr + _
		@max(_
			@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0),_
			@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)),_
			@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) _ 
		)_
	), 
	damtype(cr), 
	notes([4]), 
	skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Unarmed), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A95)

Quarterstaff, 
	basecost(10), 
	baseweight(4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Staff, Weapons - Melee - Two-Handed Sword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A102, DFRPG:A103),_
	newmode(swing, 
		minst(7†), 
		reach(1, 2), 
		parry(+2), 
		damage(sw+2), 
		damtype(cr), 
		notes(), 
		skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)_ 
	),_
	newmode(thrust, 
		minst(7†), 
		reach(1, 2), 
		parry(+2), 
		damage(thr+2), 
		damtype(cr), 
		skillused(SK:Staff, ST:DX-5, SK:Polearm-4, SK:Spear-2)_ 
	),_
	newmode(two-handed sword swing, 
		minst(9†), 
		reach(1, 2), 
		parry(0), 
		damage(sw+2), 
		damtype(cr), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	),_
	newmode(two-handed sword thrust,
		minst(9†), 
		reach(2), 
		parry(0), 
		damage(thr+1), 
		damtype(cr), 
		skillused("SK:Two-Handed Sword", ST:DX-5, SK:Broadsword-4)_ 
	)


Rapier, 
	basecost(500), 
	baseweight(2.75), 
	minst(9), 
	reach(1, 2), 
	parry(0F), 
	damage(thr+1), 
	damtype(imp), 
	skillused(SK:Rapier, ST:DX-5, SK:Broadsword-4, "SK:Main-Gauche"-3, SK:Saber-3, SK:Smallsword-3), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Rapier), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A101)

Regular Bow (ST %choice%), 
	basecost(100), 
	baseweight(2), 
	damage(@thr(me::weaponst)+1), 
	damtype(imp), 
	acc(2), 
	rangehalfdam(me::weaponst*15), 
	rangemax(me::weaponst*20), 
	rof(1), 
	shots(1(2)), 
	minst(10†), 
	bulk(-7), 
	notes(),
	skillused(SK:Bow, ST:DX-5), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Bow),_ 
	weaponst(%choice%),_
	x(_ 
		#ChoiceList(_ 
			name(choice), 
			title(Bow ST), 
			text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), 
			picksallowed(1), 
			method(bynumber), 
			list( #list(OneToOneHundred Sorted) )_ 
		)_ 
	)

Saber, 
	basecost(700), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Saber), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(8), 
		reach(1), 
		parry(0F), 
		damage(sw-1), 
		damtype(cut), 
		skillused(SK:Saber, ST:DX-5, SK:Broadsword-4, "SK:Main-Gauche"-3, SK:Rapier-3, SK:Shortsword-4, SK:Smallsword-3)_ 
	),_
	newmode(thrust, 
		minst(8), 
		reach(1), 
		parry(0F), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Saber, ST:DX-5, SK:Broadsword-4, "SK:Main-Gauche"-3, SK:Rapier-3, SK:Shortsword-4, SK:Smallsword-3)_ 
	)

Sai, 
	basecost(60), 
	baseweight(1.5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Jitte/Sai, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality, Impaling Class Quality), 
	page(DFRPG:A99),_
	newmode(swing, 
		minst(7), 
		reach(1), 
		parry(0), 
		damage(sw), 
		damtype(cr), 
		notes([9,10), 
		skillused("SK:Jitte/Sai", ST:DX-5, "SK:Main-Gauche"-4, SK:Shortsword-3)_ 
	),_
	newmode(thrust, 
		minst(7), 
		reach(1), 
		parry(0), 
		damage(thr), 
		damtype(imp), 
		notes([1]), 
		skillused("SK:Jitte/Sai", ST:DX-5, "SK:Main-Gauche"-4, SK:Shortsword-3)_ 
	),_
	newmode(thrown, 
		damage(thr), 
		damtype(imp), 
		acc(0), 
		rangehalfdam(ST*0.8), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(7), 
		bulk(-3), 
		skillused("SK:Thrown Weapon (Knife)", ST:DX-4)_  
	),_ 
	newmode(main-gauche swing, 
		minst(7), 
		reach(1), 
		parry(0F), 
		damage(sw), 
		damtype(cr), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(main-gauche thrust, 
		minst(7), 
		reach(1), 
		parry(0F), 
		damage(thr), 
		damtype(imp), 
		notes([1]), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	)

Scythe, 
	basecost(15), 
	baseweight(5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A102),_
	newmode(cutting swing, 
		minst(11‡), 
		reach(1), 
		parry(0U), 
		damage(sw+3), 
		damtype(cut), 
		notes(), 
		skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4)_ 
	),_
	newmode(impaling swing, 
		minst(11‡), 
		reach(1), 
		parry(0U), 
		damage(sw+1), 
		damtype(imp), 
		notes([2]), 
		skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4)_ 
	)

Short Baton, 
	basecost(10), 
	baseweight(0.5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Knife, Weapons - Melee - Shortsword), 
	mods(Weapon, Weapon Quality, Melee Quality, Crushing Class Quality), 
	page(DFRPG:A100, DFRPG:A101),
	newmode(swing, 
		minst(5), 
		reach(C,1), 
		parry(-1), 
		damage(sw-1), 
		damtype(cr), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword, SK:Broadsword-2, "SK:Jitte/Sai"-3, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(thrust, 
		minst(5), 
		reach(C), 
		parry(-1), 
		damage(thr), 
		damtype(cr), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword, SK:Broadsword-2, "SK:Jitte/Sai"-3, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	)

Short Bow (ST %choice%), 
	basecost(50), 
	baseweight(1.5), 
	damage(@thr(me::weaponst)), 
	damtype(imp), 
	acc(1), 
	rangehalfdam(me::weaponst*10), 
	rangemax(me::weaponst*15), 
	rof(1), 
	shots(1(2)), 
	minst(7†), 
	bulk(-6), 
	notes(),
	skillused(SK:Bow, ST:DX-5), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Bow),_ 
	weaponst(%choice%),_
	x(_ 
		#ChoiceList(_ 
			name(choice), 
			title(Bow ST), 
			text(A Bow/Crossbow must be assigned a ST score. This is the ST of the bow itself; a character normally uses a bow with ST equal to his own ST.), 
			picksallowed(1), 
			method(bynumber), 
			list( #list(OneToOneHundred Sorted) )_ 
		)_ 
	)

Short Spear, 
	basecost(30), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Spear), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A102),_
	newmode(swing, 
		minst(6), 
		reach(1), 
		parry(0), 
		damage(thr), 
		damtype(cut), 
		notes(), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	),_
	newmode(thrust, 
		minst(6), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	)

Short Staff, 
	basecost(20), 
	baseweight(1), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Smallsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A102),_
	newmode(swing, 
		minst(6), 
		reach(1), 
		parry(0F), 
		damage(sw), 
		damtype(cr), 
		skillused(SK:Smallsword, ST:DX-5, "SK:Main-Gauche"-3, SK:Rapier-3, SK:Saber-3, SK:Shortsword-4)_ 
	),_
	newmode(thrust, 
		minst(6), 
		reach(1), 
		parry(0F), 
		damage(thr), 
		damtype(cr), 
		skillused(SK:Smallsword, ST:DX-5, "SK:Main-Gauche"-3, SK:Rapier-3, SK:Saber-3, SK:Shortsword-4)_ 
	)

Shortsword, 
	basecost(400), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Shortsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(sw), 
		damtype(cut), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(thrust, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(thr+1), 
		damtype(imp), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	)


Sickle, 
	basecost(40), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality), 
	page(DFRPG:A98),_
	newmode(slice, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(sw), 
		damtype(cut), 
		skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_ 
	),_
	newmode(stab, 
		minst(8), 
		reach(1), 
		parry(0U), 
		damage(sw), 
		damtype(imp), 
		notes([2]), 
		skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_ 
	)

Sling, 
	basecost(20), 
	baseweight(0.5), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Sling),_ 
	newmode(Shaped Stone, 
		damage(sw), 
		damtype(pi), 
		acc(0), 
		rangehalfdam(ST*6), 
		rangemax(ST*10), 
		rof(1), 
		shots(1(2)), 
		minst(6), 
		bulk(-4), 
		skillused(SK:Sling, ST:DX-6), 
		notes([2])_ 
	),_
	newmode(Unshaped Stone, 
		damage(sw), 
		damtype(pi), 
		acc(0), 
		rangehalfdam(ST*6), 
		rangemax(ST*10), 
		rof(1), 
		shots(1(2)), 
		minst(6), 
		bulk(-4), 
		skillused(SK:Sling-1, ST:DX-7), 
		notes([2])_ 
	),
	newmode(Lead Bullet, 
		damage(sw+1), 
		damtype(pi), 
		acc(0), 
		rangehalfdam(ST*12), 
		rangemax(ST*20), 
		rof(1), 
		shots(1(2)), 
		minst(6), 
		bulk(-4), 
		skillused(SK:Sling, ST:DX-6), 
		notes([2])_ 
	)
Small Axe, 
	basecost(45), 
	baseweight(3), 
	minst(10), 
	reach(1), 
	parry(0U), 
	damage(sw+1), 
	damtype(cut), 
	skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A98)

Small Falchion, 
	basecost(200), 
	baseweight(2), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Shortsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality), 
	page(DFRPG:A101),_
	newmode(swing, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(sw), 
		damtype(cut), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	),_
	newmode(thrust, 
		minst(8), 
		reach(1), 
		parry(0), 
		damage(thr-2), 
		damtype(imp), 
		skillused(SK:Shortsword, ST:DX-5, SK:Broadsword-2, "SK:Jitte/sai"-3, SK:Knife-4, SK:Saber-4, SK:Smallsword-4, SK:Tonfa-3)_ 
	)

Small Knife, 
	basecost(30), 
	baseweight(0.5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Knife, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Impaling Class Quality, Knife Class), 
	page(DFRPG:A100, DFRPG:A105),_
	newmode(swing, 
		minst(5), 
		reach(C, 1), 
		parry(-1), 
		damage(sw-3), 
		damtype(cut), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),_
	newmode(thrust, 
		minst(5), 
		reach(C), 
		parry(-1), 
		damage(thr-1), 
		damtype(imp), 
		notes([1]), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),_
	newmode(main-gauche swing, 
		minst(5), 
		reach(C, 1), 
		parry(0F), 
		damage(sw-3), 
		damtype(cut), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_
	newmode(main-gauche thrust, 
		minst(5), 
		reach(C), 
		parry(0F), 
		damage(thr-1), 
		damtype(imp), 
		notes([1]), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	),_ 
	newmode(thrown, 
		damage(thr-1), 
		damtype(imp), 
		acc(0), 
		rangehalfdam(ST*0.5), 
		rangemax(ST*1), 
		rof(1), 
		shots(T(1)), 
		minst(5), 
		bulk(-1), 
		skillused("SK:Thrown Weapon (Knife)", ST:DX-4)_  
	) 

Small Mace, 
	basecost(35), 
	baseweight(3), 
	newmode(Melee, 
		damage(sw+2 ), 
		damtype(cr), 
		minst(10), 
		reach(1), 
		parry(0U), 
		skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_ 
	),_ 
	newmode(Thrown, 
		damage(sw+2 ), 
		damtype(cr), 
		acc(1), 
		rangehalfdam(ST*1), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(10), 
		bulk(-3), 
		skillused("SK:Thrown Weapon (Axe/Mace)", ST:DX-4)_  
	),_ 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Ranged, Weapons - Melee - Axe/Mace, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality, Crushing Class Quality, Thrown Axe/Mace), 
	page(DFRPG:A105)
Small Throwing Axe, 
	basecost(50), 
	baseweight(3), 
	newmode(Melee, 
		minst(10), 
		reach(1), 
		parry(0U), 
		damage(sw+1 ), 
		damtype(cut), 
		skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_ 
	),_ 
	newmode(Thrown, 
		damage(sw+1 ), 
		damtype(cut), 
		acc(1), 
		rangehalfdam(ST*1), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(10), 
		bulk(-3), 
		skillused("SK:Thrown Weapon (Axe/Mace)", ST:DX-4)_  
	),_ 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Ranged, Weapons - Melee - Axe/Mace, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Thrown Axe/Mace), 
	page(DFRPG:A105)
Small Throwing Axe (Throwing Handle), 
	basecost(40), 
	baseweight(3), 
	newmode(Melee, 
		minst(10), 
		reach(1), 
		parry(0U), 
		damage(sw+1), 
		damtype(cut), 
		itemnotes(_ 
			{Dedicated throwing axes and hatchets that lack proper handles cost $10 less, but give -2 to skill as melee weapons (and thus -1 to Parry).} _ 
		), 
		skillused("SK:Axe/Mace"-2, ST:DX-7, SK:Flail-6, "SK:Two-Handed Axe/Mace"-5)_
	),_ 
	newmode(Thrown, 
		damage(sw+1 ), 
		damtype(cut), 
		acc(1), 
		rangehalfdam(ST*1), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(10), 
		bulk(-3), 
		skillused("SK:Thrown Weapon (Axe/Mace)", ST:DX-4)_  
	),_ 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Ranged, Weapons - Axe/Mace, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Cutting Class Quality, Thrown Axe/Mace), 
	page(DFRPG:A105)
Small Throwing Knife, 
	basecost(30), 
	baseweight(0.5), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Knife, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Cutting Class Quality, Impaling Class Quality, Knife Class), 
	page(DFRPG:A95),_
	newmode(swing, 
		minst(5), 
		reach(C, 1), 
		parry(-1), 
		damage(sw-3), 
		damtype(cut), 
		itemnotes( {In melee combat, small throwing knives work as small knives, but give -2 to skill (and thus -1 to Parry on top of the usual -1 to Parry for knives).} ), 
		skillused(SK:Knife-2, ST:DX-6, "SK:Main-Gauche"-5, SK:Shortsword-5)),_
	newmode(thrust, 
		minst(5), 
		reach(C), 
		parry(-1), 
		damage(thr-1), 
		damtype(imp), 
		itemnotes( {In melee combat, small throwing knives work as small knives, but give -2 to skill (and thus -1 to Parry on top of the usual -1 to Parry for knives).} ), 
		skillused(SK:Knife-2, ST:DX-6, "SK:Main-Gauche"-5, SK:Shortsword-5)),_
	newmode(thrown, 
		damage(thr-1), 
		damtype(imp), 
		acc(1), 
		rangehalfdam(ST*0.8), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(5), 
		bulk(0), 
		notes([8]),
		skillused("SK:Thrown Weapon (Knife)", ST:DX-4)_  
	) 

Smallsword, 
	basecost(400), 
	baseweight(1.5), 
	minst(5), 
	reach(1), 
	parry(0F), 
	damage(thr+1), 
	damtype(imp), 
	skillused(SK:Smallsword, ST:DX-5, "SK:Main-Gauche"-3, SK:Rapier-3, SK:Saber-3, SK:Shortsword-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Smallsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A102)


Spear, 
	basecost(40), 
	baseweight(4), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Spear, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A102, DFRPG:A105),_
	newmode(thrust, 
		minst(10), 
		reach(1*), 
		parry(0), 
		damage(thr+2), 
		damtype(imp), 
		notes([1]), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	),_
	newmode(two hands, 
		minst(9†), 
		reach(1, 2*), 
		parry(0), 
		damage(thr+3), 
		damtype(imp), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	),_ 
	newmode(thrown, 
		damage(thr+3), 
		damtype(imp), 
		acc(2), 
		rangehalfdam(ST*1), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(9), 
		bulk(-6), 
		skillused("SK:Thrown Weapon (Spear)", ST:DX-4, "SK:Spear Thrower"-4, "SK:Thrown Weapon (Harpoon)"-2)_  
	) 

Spike Shuriken, 
	basecost(3), 
	baseweight(0.1), 
	mode(thrown), 
	damage(thr-2), 
	damtype(imp), 
	acc(1), 
	rangehalfdam(ST*0.5), 
	rangemax(ST*1), 
	rof(1), 
	shots(T(1)), 
	minst(5), 
	bulk(0), 
	skillused("SK:Thrown Weapon (Shuriken)", ST:DX-4, SK:Throwing-2), 
	page(DFRPG:A105),
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Impaling Class Quality)
	
Spiked Whip (1-yard), 
	basecost(20), 
	baseweight(2), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-2), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1), 
	parry(-2U), 
	minst(6), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Spiked Whip (2-yard), 
	basecost(40), 
	baseweight(4), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-2), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-2*), 
	parry(-2U), 
	minst(7), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Spiked Whip (3-yard), 
	basecost(60), 
	baseweight(6), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-2), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-3*), 
	parry(-2U), 
	minst(8), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Spiked Whip (4-yard), 
	basecost(80), 
	baseweight(8), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-2), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-4*), 
	parry(-2U), 
	minst(9), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Spiked Whip (5-yard), 
	basecost(100), 
	baseweight(10), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-2), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-5*), 
	parry(-2U), 
	minst(10), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Spiked Whip (6-yard), 
	basecost(120), 
	baseweight(12), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-2), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-6*), 
	parry(-2U), 
	minst(11), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 
Spiked Whip (7-yard), 
	basecost(140), 
	baseweight(14), 
	page(DFRPG:A103), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	damage(sw-2), 
	armordivisor(0.5), 
	damtype(cr), 
	reach(1-7*), 
	parry(-2U), 
	minst(12), 
	skillused(SK:Whip, ST:DX-5, SK:Kusari-3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Whip),_
	notes([9,15]) 

Staff Sling, 
	basecost(20), 
	baseweight(2), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Sling),_ 
	newmode(Shaped Stone, 
		damage(sw+1), 
		damtype(pi), 
		acc(1), 
		rangehalfdam(ST*10), 
		rangemax(ST*15), 
		rof(1), 
		shots(1(2)), 
		minst(7†), 
		bulk(-6), 
		skillused(SK:Sling, ST:DX-6)_ 
	),_
	newmode(Unshaped Stone, 
		damage(sw+1), 
		damtype(pi), 
		acc(1), 
		rangehalfdam(ST*10), 
		rangemax(ST*15), 
		rof(1), 
		shots(1(2)), 
		minst(7†), 
		bulk(-6), 
		skillused(SK:Sling-1, ST:DX-7), 
		itemnotes( {Unshaped rocks and stones are less accurate: -1 to hit.} )_ 
	),
	newmode(Lead Bullet, 
		damage(sw+2), 
		damtype(pi), 
		acc(1), 
		rangehalfdam(ST*20), 
		rangemax(ST*30), 
		rof(1), 
		shots(1(2)), 
		minst(7†), 
		bulk(-6), 
		skillused(SK:Sling, ST:DX-6), 
		itemnotes( {Lead bullets give +1 damage and double range.} )_ 
	)
Star Shuriken, 
	basecost(3), 
	baseweight(0.1), 
	mode(thrown), 
	damage(thr-1), 
	damtype(cut), 
	acc(1), 
	rangehalfdam(ST*0.5), 
	rangemax(ST*1), 
	rof(1), 
	shots(T(1)), 
	minst(5), 
	bulk(0), 
	skillused("SK:Thrown Weapon (Shuriken)", ST:DX-4, SK:Throwing-2), 
	page(DFRPG:A105),
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Cutting Class Quality)

Stiletto, 
	basecost(20), 
	baseweight(0.25), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Knife), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality, Knife Class), 
	page(DFRPG:A100),_
	newmode(thrust, 
		minst(5), 
		reach(C), 
		parry(-1), 
		damage(thr-1), 
		damtype(imp), 
		notes([3]), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),_
	newmode(Main-Gauche, 
		minst(5), 
		reach(C), 
		parry(0F), 
		damage(thr-1), 
		damtype(imp), 
		notes([3]), 
		skillused("SK:Main-Gauche", ST:DX-5, "SK:Jitte/sai"-4, SK:Knife-4, SK:Rapier-3, SK:Saber-3, SK:Smallsword-3)_ 
	)

Throwing Axe, 
	basecost(60), 
	baseweight(4), 
	newmode(Melee, 
		minst(11), 
		reach(1), 
		parry(0U), 
		damage(sw+2 ), 
		damtype(cut), 
		skillused("SK:Axe/Mace", ST:DX-5, SK:Flail-4, "SK:Two-Handed Axe/Mace"-3)_
	),_ 
	newmode(Thrown, 
		damage(sw+2 ), 
		damtype(cut), 
		acc(2), 
		rangehalfdam(ST*1), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(11), 
		bulk(-3), 
		skillused("SK:Thrown Weapon (Axe/Mace)", ST:DX-4)_  
	),_ 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Ranged, Weapons - Melee - Axe/Mace, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Cutting Class Quality, Thrown Axe/Mace), 
	page(DFRPG:A105)
Throwing Axe (Throwing Handle), 
	basecost(50), 
	baseweight(4), 
	newmode(Melee, 
		minst(11), 
		reach(1), 
		parry(0U), 
		damage(sw+2 ), 
		damtype(cut), 
		itemnotes(_ 
			{Dedicated throwing axes and hatchets that lack proper handles cost $10 less, but give -2 to skill as melee weapons (and thus -1 to Parry).} _ 
		), 
		skillused("SK:Axe/Mace"-2, ST:DX-7, SK:Flail-6, "SK:Two-Handed Axe/Mace"-5)_
	),_ 
	newmode(Thrown, 
		damage(sw+2 ), 
		damtype(cut), 
		acc(2), 
		rangehalfdam(ST*1), 
		rangemax(ST*1.5), 
		rof(1), 
		shots(T(1)), 
		minst(11), 
		bulk(-3), 
		skillused("SK:Thrown Weapon (Axe/Mace)", ST:DX-4)_  
	),_ 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Ranged, Weapons - Axe/Mace, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Cutting Class Quality, Thrown Axe/Mace), 
	page(DFRPG:A105)
Throwing Dart, 
	basecost(20), 
	baseweight(1), 
	damage(thr), 
	damtype(imp), 
	acc(1), 
	rangehalfdam(ST*2.5), 
	rangemax(ST*3.5), 
	rof(1), 
	shots(T(1)), 
	minst(6), 
	bulk(-2), 
	skillused("SK:Thrown Weapon (Dart)", ST:DX-4, SK:Throwing-4), 
	page(DFRPG:A105), 
	symbol(Arrows),_
	itemnotes( {Requires two hands to ready, but only one hand to attack.} ),
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality) 

Tonfa, 
	basecost(40), 
	baseweight(1.5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Unarmed, Weapons - Melee - Tonfa), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality), 
	page(DFRPG:A99, DFRPG:A102),
	newmode(swing, 
		minst(7), 
		reach(1), 
		parry(0), 
		notes([11]), 
		skillused(SK:Tonfa, ST:DX-5, SK:Shortsword-3), 
		damtype(cr), 
		damage(sw)_ 
	),_
	newmode(thrust, 
		minst(7), 
		reach(C,1), 
		parry(0), 
		itemnotes(_
			{Use Boxing, Brawling, or Karate parry if better than weapon parry.}_
		),  
		skillused(SK:Tonfa, ST:DX-5, SK:Shortsword-3), 
		damtype(cr), 
		damage(thr)_ 
	),_
	newmode(Butt jab, 
		minst(0), 
		reach(C), 
		parry(0), 
		notes([4]), 
		skillused(SK:Boxing, SK:Brawling, SK:Karate, ST:DX),
		damtype(cr), 
		damage(thr + _
			@max(_
				@if("SK:Brawling::level" > ST:DX+1 then @basethdice(ST:Punch) ELSE 0),_
				@if("SK:Boxing::level" = ST:DX+1 then @basethdice(ST:Punch) ELSE @if("SK:Boxing::level" > ST:DX+1 then 2 * @basethdice(ST:Punch) ELSE 0)),_
				@if("SK:Karate::level" = ST:DX then @basethdice(ST:Punch) ELSE @if("SK:Karate::level" > ST:DX then 2 * @basethdice(ST:Punch) ELSE 0)) _ 
			)_
		)_ 
	)


Trident, 
	basecost(80), 
	baseweight(5), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Spear), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A95),_
	newmode(thrust, 
		minst(11), 
		reach(1*), 
		parry(0U), 
		damage(thr+3), 
		armordivisor(0.5),
		damtype(imp), 
		notes([12]), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	),_
	newmode(two hands, 
		minst(10†), 
		reach(1, 2*), 
		parry(0), 
		damage(thr+4), 
		armordivisor(0.5),
		damtype(imp), 
		notes([12]), 
		skillused(SK:Spear, ST:DX-5, SK:Polearm-4, SK:Staff-2)_ 
	)

Tuck, 
	basecost(500), 
	baseweight(3), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Broadsword), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Crushing Class Quality, Impaling Class Quality, Sword Class Quality), 
	page(DFRPG:A99),_
	newmode(thrust, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(thr+2 ), 
		damtype(imp), 
		notes([3]), 
		itemnotes(_
			{Specifically designed to target chinks in armor (Exploits, p. 37). Reduce the penalty for this by -2.}_
		), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, "SK:Two-Handed Sword"-4)_ 
	),_
	newmode(swing, 
		minst(10), 
		reach(1), 
		parry(0), 
		damage(sw+1 ), 
		damtype(cr), 
		notes(), 
		skillused(SK:Broadsword, ST:DX-5, SK:Rapier-4, SK:Saber-4, SK:Shortsword-2, SK:Two-Handed Sword-4)_ 
	)


Warhammer, 
	basecost(100), 
	baseweight(7), 
	minst(12‡), 
	reach(1, 2*), 
	parry(0U), 
	damage(sw+4), 
	damtype(imp), 
	notes([2,3]), 
	skillused("SK:Two-Handed Axe/Mace", ST:DX-5, "SK:Axe/Mace"-3, SK:Polearm-4, "SK:Two-Handed Flail"-4), 
	cat(_Weapons, Weapons,  Weapons - Melee, Weapons - Melee - Two-Handed Axe/Mace), 
	mods(Weapon, Weapon Quality, Melee Quality,  Melee Quality,  Impaling Class Quality), 
	page(DFRPG:A102)

Wooden Stake, 
	basecost(4), 
	baseweight(0.5), 
	cat(_Weapons, Weapons, Weapons - Melee, Weapons - Melee - Knife, Weapons - Ranged, Weapons - Ranged - Thrown Weapon), 
	mods(Weapon, Weapon Quality, Melee Quality, Impaling Class Quality), 
	page(DFRPG:A100),
	newmode(melee, 
		minst(5), 
		reach(C), 
		parry(-1), 
		damage(thr), 
		armordivisor(0.5),
		damtype(imp), 
		notes([1]), 
		skillused(SK:Knife, ST:DX-4, "SK:Main-Gauche"-3, SK:Shortsword-3)_ 
	),
	newmode(thrown, 
		damage(thr), 
		armordivisor(0.5),
		damtype(imp), 
		acc(0), 
		rangehalfdam(ST*0.5), 
		rangemax(ST*1), 
		rof(1), 
		shots(T(1)), 
		minst(5), 
		bulk(-2), 
		skillused("SK:Thrown Weapon (Knife)", ST:DX-4)_  
	) 
Woomera, 
	basecost(40), 
	baseweight(2), 
	page(DFRPG:A104), 
	mods(Weapon, Weapon Quality), 
	cat(_Weapons, Weapons, Weapons - Ranged, Weapons - Ranged - Spear Thrower),_ 
	mode(with Spear), 
	damage(sw+3), 
	damtype(imp), 
	acc(2), 
	rangehalfdam(ST*1.5), 
	rangemax(ST*2), 
	rof(1), 
	shots(1(1)), 
	minst(9), 
	bulk(-6), 
	skillused(SK:Spear Thrower, ST:DX-5, "SK:Thrown Weapon (Spear)"-4), 
	notes([2,5]) 













